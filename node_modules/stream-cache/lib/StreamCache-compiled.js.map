{"version":3,"sources":["StreamCache.js"],"names":[],"mappings":"AAAA,IAAI,OAAS,QAAQ,MAAR,CAAb;AACA,IAAI,SAAS,QAAQ,QAAR,EAAkB,MAA/B;;AAEA,OAAO,OAAP,GAAiB,WAAjB;AACA,KAAK,QAAL,CAAc,WAAd,EAA2B,MAA3B;AACA,SAAS,WAAT,GAAuB;AACrB,SAAO,IAAP,CAAY,IAAZ;;AAEA,OAAK,QAAL,GAAgB,IAAhB;AACA,OAAK,QAAL,GAAgB,IAAhB;;AAEA,OAAK,QAAL,GAAgB,EAAhB;AACA,OAAK,MAAL,GAAgB,EAAhB;AACA,OAAK,MAAL,GAAgB,KAAhB;AACD;;AAED,YAAY,SAAZ,CAAsB,KAAtB,GAA8B,UAAS,MAAT,EAAiB;AAC7C,OAAK,QAAL,CAAc,IAAd,CAAmB,MAAnB;;AAEA,OAAK,MAAL,CAAY,OAAZ,CAAoB,UAAS,IAAT,EAAe;AACjC,SAAK,KAAL,CAAW,MAAX;AACD,GAFD;AAGD,CAND;;AAQA,YAAY,SAAZ,CAAsB,IAAtB,GAA6B,UAAS,IAAT,EAAe,OAAf,EAAwB;AACnD,MAAI,OAAJ,EAAa;AACX,UAAM,MAAM,kDAAN,CAAN;AACD;;AAED,OAAK,QAAL,CAAc,OAAd,CAAsB,UAAS,MAAT,EAAiB;AACrC,SAAK,KAAL,CAAW,MAAX;AACD,GAFD;;AAIA,MAAI,KAAK,MAAT,EAAiB;AACf,SAAK,GAAL;AACA,WAAO,IAAP;AACD;;AAED,OAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB;;AAEA,SAAO,IAAP;AACD,CAjBD;;AAmBA,YAAY,SAAZ,CAAsB,SAAtB,GAAkC,YAAW;AAC3C,SAAO,KAAK,QAAL,CAAc,MAAd,CAAqB,UAAS,WAAT,EAAsB,MAAtB,EAA8B;AACxD,WAAO,cAAc,OAAO,MAA5B;AACD,GAFM,EAEJ,CAFI,CAAP;AAGD,CAJD;;AAMA,YAAY,SAAZ,CAAsB,GAAtB,GAA4B,YAAW;AACrC,OAAK,MAAL,CAAY,OAAZ,CAAoB,UAAS,IAAT,EAAe;AACjC,SAAK,GAAL;AACD,GAFD;;AAIA,OAAK,MAAL,GAAc,IAAd;AACA,OAAK,MAAL,GAAc,EAAd;AACD,CAPD","file":"StreamCache-compiled.js","sourcesContent":["var Util   = require('util');\nvar Stream = require('stream').Stream;\n\nmodule.exports = StreamCache;\nUtil.inherits(StreamCache, Stream);\nfunction StreamCache() {\n  Stream.call(this);\n\n  this.writable = true;\n  this.readable = true;\n\n  this._buffers = [];\n  this._dests   = [];\n  this._ended   = false;\n}\n\nStreamCache.prototype.write = function(buffer) {\n  this._buffers.push(buffer);\n\n  this._dests.forEach(function(dest) {\n    dest.write(buffer);\n  });\n};\n\nStreamCache.prototype.pipe = function(dest, options) {\n  if (options) {\n    throw Error('StreamCache#pipe: options are not supported yet.');\n  }\n\n  this._buffers.forEach(function(buffer) {\n    dest.write(buffer);\n  });\n\n  if (this._ended) {\n    dest.end();\n    return dest;\n  }\n\n  this._dests.push(dest);\n\n  return dest;\n};\n\nStreamCache.prototype.getLength = function() {\n  return this._buffers.reduce(function(totalLength, buffer) {\n    return totalLength + buffer.length;\n  }, 0);\n};\n\nStreamCache.prototype.end = function() {\n  this._dests.forEach(function(dest) {\n    dest.end();\n  });\n\n  this._ended = true;\n  this._dests = [];\n};\n"]}