{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/*!\n * compression\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar accepts = require('accepts')\nvar bytes = require('bytes')\nvar compressible = require('compressible')\nvar debug = require('debug')('compression')\nvar onHeaders = require('on-headers')\nvar vary = require('vary')\nvar zlib = require('zlib')\n\n/**\n * Module exports.\n */\n\nmodule.exports = compression\nmodule.exports.filter = shouldCompress\n\n/**\n * Module variables.\n * @private\n */\n\nvar cacheControlNoTransformRegExp = /(?:^|,)\\s*?no-transform\\s*?(?:,|$)/\n\n/**\n * Compress response data with gzip / deflate.\n *\n * @param {Object} [options]\n * @return {Function} middleware\n * @public\n */\n\nfunction compression (options) {\n  var opts = options || {}\n\n  // options\n  var filter = opts.filter || shouldCompress\n  var threshold = bytes.parse(opts.threshold)\n\n  if (threshold == null) {\n    threshold = 1024\n  }\n\n  return function compression (req, res, next) {\n    var ended = false\n    var length\n    var listeners = []\n    var stream\n\n    var _end = res.end\n    var _on = res.on\n    var _write = res.write\n\n    // flush\n    res.flush = function flush () {\n      if (stream) {\n        stream.flush()\n      }\n    }\n\n    // proxy\n\n    res.write = function write (chunk, encoding) {\n      if (ended) {\n        return false\n      }\n\n      if (!this._header) {\n        this._implicitHeader()\n      }\n\n      return stream\n        ? stream.write(new Buffer(chunk, encoding))\n        : _write.call(this, chunk, encoding)\n    }\n\n    res.end = function end (chunk, encoding) {\n      if (ended) {\n        return false\n      }\n\n      if (!this._header) {\n        // estimate the length\n        if (!this.getHeader('Content-Length')) {\n          length = chunkLength(chunk, encoding)\n        }\n\n        this._implicitHeader()\n      }\n\n      if (!stream) {\n        return _end.call(this, chunk, encoding)\n      }\n\n      // mark ended\n      ended = true\n\n      // write Buffer for Node.js 0.8\n      return chunk\n        ? stream.end(new Buffer(chunk, encoding))\n        : stream.end()\n    }\n\n    res.on = function on (type, listener) {\n      if (!listeners || type !== 'drain') {\n        return _on.call(this, type, listener)\n      }\n\n      if (stream) {\n        return stream.on(type, listener)\n      }\n\n      // buffer listeners for future stream\n      listeners.push([type, listener])\n\n      return this\n    }\n\n    function nocompress (msg) {\n      debug('no compression: %s', msg)\n      addListeners(res, _on, listeners)\n      listeners = null\n    }\n\n    onHeaders(res, function onResponseHeaders () {\n      // determine if request is filtered\n      if (!filter(req, res)) {\n        nocompress('filtered')\n        return\n      }\n\n      // determine if the entity should be transformed\n      if (!shouldTransform(req, res)) {\n        nocompress('no transform')\n        return\n      }\n\n      // vary\n      vary(res, 'Accept-Encoding')\n\n      // content-length below threshold\n      if (Number(res.getHeader('Content-Length')) < threshold || length < threshold) {\n        nocompress('size below threshold')\n        return\n      }\n\n      var encoding = res.getHeader('Content-Encoding') || 'identity'\n\n      // already encoded\n      if (encoding !== 'identity') {\n        nocompress('already encoded')\n        return\n      }\n\n      // head\n      if (req.method === 'HEAD') {\n        nocompress('HEAD request')\n        return\n      }\n\n      // compression method\n      var accept = accepts(req)\n      var method = accept.encoding(['gzip', 'deflate', 'identity'])\n\n      // we really don't prefer deflate\n      if (method === 'deflate' && accept.encoding(['gzip'])) {\n        method = accept.encoding(['gzip', 'identity'])\n      }\n\n      // negotiation failed\n      if (!method || method === 'identity') {\n        nocompress('not acceptable')\n        return\n      }\n\n      // compression stream\n      debug('%s compression', method)\n      stream = method === 'gzip'\n        ? zlib.createGzip(opts)\n        : zlib.createDeflate(opts)\n\n      // add buffered listeners to stream\n      addListeners(stream, stream.on, listeners)\n\n      // header fields\n      res.setHeader('Content-Encoding', method)\n      res.removeHeader('Content-Length')\n\n      // compression\n      stream.on('data', function onStreamData (chunk) {\n        if (_write.call(res, chunk) === false) {\n          stream.pause()\n        }\n      })\n\n      stream.on('end', function onStreamEnd () {\n        _end.call(res)\n      })\n\n      _on.call(res, 'drain', function onResponseDrain () {\n        stream.resume()\n      })\n    })\n\n    next()\n  }\n}\n\n/**\n * Add bufferred listeners to stream\n * @private\n */\n\nfunction addListeners (stream, on, listeners) {\n  for (var i = 0; i < listeners.length; i++) {\n    on.apply(stream, listeners[i])\n  }\n}\n\n/**\n * Get the length of a given chunk\n */\n\nfunction chunkLength (chunk, encoding) {\n  if (!chunk) {\n    return 0\n  }\n\n  return !Buffer.isBuffer(chunk)\n    ? Buffer.byteLength(chunk, encoding)\n    : chunk.length\n}\n\n/**\n * Default filter function.\n * @private\n */\n\nfunction shouldCompress (req, res) {\n  var type = res.getHeader('Content-Type')\n\n  if (type === undefined || !compressible(type)) {\n    debug('%s not compressible', type)\n    return false\n  }\n\n  return true\n}\n\n/**\n * Determine if the entity should be transformed.\n * @private\n */\n\nfunction shouldTransform (req, res) {\n  var cacheControl = res.getHeader('Cache-Control')\n\n  // Don't compress for Cache-Control: no-transform\n  // https://tools.ietf.org/html/rfc7234#section-5.2.2.4\n  return !cacheControl ||\n    !cacheControlNoTransformRegExp.test(cacheControl)\n}\n"]}