{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;AAMA;;AAEA;;;;;AAKA,OAAO,OAAP,GAAiB,KAAjB;;AAEA;;;;;;;;AAQA,SAAS,KAAT,CAAe,KAAf,EAAsB,IAAtB,EAA4B;AAC1B,MAAI,CAAC,MAAM,OAAN,CAAc,KAAd,CAAL,EACE,MAAM,IAAI,SAAJ,CAAc,gDAAd,CAAN;;AAEF,MAAI,WAAW,EAAf;;AAEA,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,MAAM,MAA1B,EAAkC,GAAlC,EAAuC;AACrC,QAAI,MAAM,MAAM,CAAN,CAAV;;AAEA,QAAI,CAAC,MAAM,OAAN,CAAc,GAAd,CAAD,IAAuB,IAAI,MAAJ,GAAa,CAAxC,EACE,MAAM,IAAI,SAAJ,CAAc,2CAAd,CAAN;;AAEF,QAAI,KAAK,IAAI,CAAJ,CAAT;;AAEA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,IAAI,MAAxB,EAAgC,GAAhC,EAAqC;AACnC,UAAI,QAAQ,IAAI,CAAJ,CAAZ;AACA,UAAI,KAAK,SAAS,KAAT,EAAgB,QAAhB,CAAT;;AAEA;AACA,SAAG,EAAH,CAAM,KAAN,EAAa,EAAb;AACA;AACA,eAAS,IAAT,CAAc;AACZ,YAAI,EADQ;AAEZ,eAAO,KAFK;AAGZ,YAAI;AAHQ,OAAd;AAKD;AACF;;AAED,WAAS,QAAT,GAAoB;AAClB;AACA,SAAK,KAAL,CAAW,IAAX,EAAiB,SAAjB;AACD;;AAED,WAAS,OAAT,GAAmB;AACjB,QAAI,CAAJ;AACA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,SAAS,MAA7B,EAAqC,GAArC,EAA0C;AACxC,UAAI,SAAS,CAAT,CAAJ;AACA,QAAE,EAAF,CAAK,cAAL,CAAoB,EAAE,KAAtB,EAA6B,EAAE,EAA/B;AACD;AACF;;AAED,WAAS,KAAT,CAAe,EAAf,EAAmB;AACjB,WAAO,EAAP;AACD;;AAED,QAAM,MAAN,GAAe,OAAf;;AAEA,SAAO,KAAP;AACD;;AAED;;;;;AAKA,SAAS,QAAT,CAAkB,KAAlB,EAAyB,IAAzB,EAA+B;AAC7B,SAAO,SAAS,OAAT,CAAiB,IAAjB,EAAuB;AAC5B,QAAI,OAAO,IAAI,KAAJ,CAAU,UAAU,MAApB,CAAX;AACA,QAAI,KAAK,IAAT;AACA,QAAI,MAAM,UAAU,OAAV,GACN,IADM,GAEN,IAFJ;;AAIA;AACA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,MAAzB,EAAiC,GAAjC,EAAsC;AACpC,WAAK,CAAL,IAAU,UAAU,CAAV,CAAV;AACD;;AAED,SAAK,GAAL,EAAU,EAAV,EAAc,KAAd,EAAqB,IAArB;AACD,GAbD;AAcD","file":"index-compiled.js","sourcesContent":["/*!\n * ee-first\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = first\n\n/**\n * Get the first event in a set of event emitters and event pairs.\n *\n * @param {array} stuff\n * @param {function} done\n * @public\n */\n\nfunction first(stuff, done) {\n  if (!Array.isArray(stuff))\n    throw new TypeError('arg must be an array of [ee, events...] arrays')\n\n  var cleanups = []\n\n  for (var i = 0; i < stuff.length; i++) {\n    var arr = stuff[i]\n\n    if (!Array.isArray(arr) || arr.length < 2)\n      throw new TypeError('each array member must be [ee, events...]')\n\n    var ee = arr[0]\n\n    for (var j = 1; j < arr.length; j++) {\n      var event = arr[j]\n      var fn = listener(event, callback)\n\n      // listen to the event\n      ee.on(event, fn)\n      // push this listener to the list of cleanups\n      cleanups.push({\n        ee: ee,\n        event: event,\n        fn: fn,\n      })\n    }\n  }\n\n  function callback() {\n    cleanup()\n    done.apply(null, arguments)\n  }\n\n  function cleanup() {\n    var x\n    for (var i = 0; i < cleanups.length; i++) {\n      x = cleanups[i]\n      x.ee.removeListener(x.event, x.fn)\n    }\n  }\n\n  function thunk(fn) {\n    done = fn\n  }\n\n  thunk.cancel = cleanup\n\n  return thunk\n}\n\n/**\n * Create the event listener.\n * @private\n */\n\nfunction listener(event, done) {\n  return function onevent(arg1) {\n    var args = new Array(arguments.length)\n    var ee = this\n    var err = event === 'error'\n      ? arg1\n      : null\n\n    // copy args to prevent arguments escaping scope\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    done(err, ee, event, args)\n  }\n}\n"]}