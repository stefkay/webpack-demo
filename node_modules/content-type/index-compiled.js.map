{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/*!\n * content-type\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nvar paramRegExp = /; *([!#$%&'\\*\\+\\-\\.\\^_`\\|~0-9A-Za-z]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'\\*\\+\\-\\.\\^_`\\|~0-9A-Za-z]+) */g\nvar textRegExp = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar tokenRegExp = /^[!#$%&'\\*\\+\\-\\.\\^_`\\|~0-9A-Za-z]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nvar qescRegExp = /\\\\([\\u000b\\u0020-\\u00ff])/g\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nvar quoteRegExp = /([\\\\\"])/g\n\n/**\n * RegExp to match type in RFC 6838\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nvar typeRegExp = /^[!#$%&'\\*\\+\\-\\.\\^_`\\|~0-9A-Za-z]+\\/[!#$%&'\\*\\+\\-\\.\\^_`\\|~0-9A-Za-z]+$/\n\n/**\n * Module exports.\n * @public\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format(obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || !typeRegExp.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  var string = type\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!tokenRegExp.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @public\n */\n\nfunction parse(string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  if (typeof string === 'object') {\n    // support req/res-like objects as argument\n    string = getcontenttype(string)\n\n    if (typeof string !== 'string') {\n      throw new TypeError('content-type header is missing from object');\n    }\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = string.indexOf(';')\n  var type = index !== -1\n    ? string.substr(0, index).trim()\n    : string.trim()\n\n  if (!typeRegExp.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  var key\n  var match\n  var obj = new ContentType(type.toLowerCase())\n  var value\n\n  paramRegExp.lastIndex = index\n\n  while (match = paramRegExp.exec(string)) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(qescRegExp, '$1')\n    }\n\n    obj.parameters[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @private\n */\n\nfunction getcontenttype(obj) {\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    return obj.getHeader('content-type')\n  }\n\n  if (typeof obj.headers === 'object') {\n    // req-like\n    return obj.headers && obj.headers['content-type']\n  }\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring(val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (tokenRegExp.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !textRegExp.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(quoteRegExp, '\\\\$1') + '\"'\n}\n\n/**\n * Class to represent a content type.\n * @private\n */\nfunction ContentType(type) {\n  this.parameters = Object.create(null)\n  this.type = type\n}\n"]}