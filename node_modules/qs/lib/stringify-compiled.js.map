{"version":3,"sources":["stringify.js"],"names":[],"mappings":"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","file":"stringify-compiled.js","sourcesContent":["'use strict';\n\nvar Utils = require('./utils');\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar defaults = {\n    delimiter: '&',\n    strictNullHandling: false,\n    skipNulls: false,\n    encode: true,\n    encoder: Utils.encode\n};\n\nvar stringify = function stringify(object, prefix, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = obj.toISOString();\n    } else if (obj === null) {\n        if (strictNullHandling) {\n            return encoder ? encoder(prefix) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || Utils.isBuffer(obj)) {\n        if (encoder) {\n            return [encoder(prefix) + '=' + encoder(obj)];\n        }\n        return [prefix + '=' + String(obj)];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (Array.isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (Array.isArray(obj)) {\n            values = values.concat(stringify(obj[key], generateArrayPrefix(prefix, key), generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots));\n        } else {\n            values = values.concat(stringify(obj[key], prefix + (allowDots ? '.' + key : '[' + key + ']'), generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots));\n        }\n    }\n\n    return values;\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = opts || {};\n    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;\n    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;\n    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;\n    var encoder = encode ? (typeof options.encoder === 'function' ? options.encoder : defaults.encoder) : null;\n    var sort = typeof options.sort === 'function' ? options.sort : null;\n    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;\n    var objKeys;\n    var filter;\n\n    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (Array.isArray(options.filter)) {\n        objKeys = filter = options.filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (options.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = options.arrayFormat;\n    } else if ('indices' in options) {\n        arrayFormat = options.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (sort) {\n        objKeys.sort(sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        keys = keys.concat(stringify(obj[key], key, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots));\n    }\n\n    return keys.join(delimiter);\n};\n"]}