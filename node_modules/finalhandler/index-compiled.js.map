{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/*!\n * finalhandler\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('finalhandler')\nvar escapeHtml = require('escape-html')\nvar onFinished = require('on-finished')\nvar statuses = require('statuses')\nvar unpipe = require('unpipe')\n\n/**\n * Module variables.\n * @private\n */\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function (fn) { process.nextTick(fn.bind.apply(fn, arguments)) }\nvar isFinished = onFinished.isFinished\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = finalhandler\n\n/**\n * Create a function to handle the final response.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {Object} [options]\n * @return {Function}\n * @public\n */\n\nfunction finalhandler (req, res, options) {\n  var opts = options || {}\n\n  // get environment\n  var env = opts.env || process.env.NODE_ENV || 'development'\n\n  // get error callback\n  var onerror = opts.onerror\n\n  return function (err) {\n    var headers = Object.create(null)\n    var status\n\n    // ignore 404 on in-flight response\n    if (!err && res._header) {\n      debug('cannot 404 after headers sent')\n      return\n    }\n\n    // unhandled error\n    if (err) {\n      // respect status code from error\n      status = getErrorStatusCode(err) || res.statusCode\n\n      // default status code to 500 if outside valid range\n      if (typeof status !== 'number' || status < 400 || status > 599) {\n        status = 500\n      }\n\n      // respect err.headers\n      if (err.headers && (err.status === status || err.statusCode === status)) {\n        var keys = Object.keys(err.headers)\n        for (var i = 0; i < keys.length; i++) {\n          var key = keys[i]\n          headers[key] = err.headers[key]\n        }\n      }\n\n      // production gets a basic error message\n      var msg = env === 'production'\n        ? statuses[status]\n        : err.stack || err.toString()\n      msg = escapeHtml(msg)\n        .replace(/\\n/g, '<br>')\n        .replace(/\\x20{2}/g, ' &nbsp;') + '\\n'\n    } else {\n      status = 404\n      msg = 'Cannot ' + escapeHtml(req.method) + ' ' + escapeHtml(req.originalUrl || req.url) + '\\n'\n    }\n\n    debug('default %s', status)\n\n    // schedule onerror callback\n    if (err && onerror) {\n      defer(onerror, err, req, res)\n    }\n\n    // cannot actually respond\n    if (res._header) {\n      debug('cannot %d after headers sent', status)\n      req.socket.destroy()\n      return\n    }\n\n    // send response\n    send(req, res, status, headers, msg)\n  }\n}\n\n/**\n * Get status code from Error object.\n *\n * @param {Error} err\n * @return {number}\n * @private\n */\n\nfunction getErrorStatusCode (err) {\n  // check err.status\n  if (typeof err.status === 'number' && err.status >= 400 && err.status < 600) {\n    return err.status\n  }\n\n  // check err.statusCode\n  if (typeof err.statusCode === 'number' && err.statusCode >= 400 && err.statusCode < 600) {\n    return err.statusCode\n  }\n\n  return undefined\n}\n\n/**\n * Send response.\n *\n * @param {IncomingMessage} req\n * @param {OutgoingMessage} res\n * @param {number} status\n * @param {object} headers\n * @param {string} body\n * @private\n */\n\nfunction send (req, res, status, headers, body) {\n  function write () {\n    // response status\n    res.statusCode = status\n    res.statusMessage = statuses[status]\n\n    // response headers\n    var keys = Object.keys(headers)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      res.setHeader(key, headers[key])\n    }\n\n    // security header for content sniffing\n    res.setHeader('X-Content-Type-Options', 'nosniff')\n\n    // standard headers\n    res.setHeader('Content-Type', 'text/html; charset=utf-8')\n    res.setHeader('Content-Length', Buffer.byteLength(body, 'utf8'))\n\n    if (req.method === 'HEAD') {\n      res.end()\n      return\n    }\n\n    res.end(body, 'utf8')\n  }\n\n  if (isFinished(req)) {\n    write()\n    return\n  }\n\n  // unpipe everything from the request\n  unpipe(req)\n\n  // flush the request\n  onFinished(req, write)\n  req.resume()\n}\n"]}