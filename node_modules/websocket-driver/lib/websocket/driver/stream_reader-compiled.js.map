{"version":3,"sources":["stream_reader.js"],"names":[],"mappings":"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","file":"stream_reader-compiled.js","sourcesContent":["'use strict';\n\nvar StreamReader = function() {\n  this._queue     = [];\n  this._queueSize = 0;\n  this._offset    = 0;\n};\n\nStreamReader.prototype.put = function(buffer) {\n  if (!buffer || buffer.length === 0) return;\n  if (!buffer.copy) buffer = new Buffer(buffer);\n  this._queue.push(buffer);\n  this._queueSize += buffer.length;\n};\n\nStreamReader.prototype.read = function(length) {\n  if (length > this._queueSize) return null;\n  if (length === 0) return new Buffer(0);\n\n  this._queueSize -= length;\n\n  var queue  = this._queue,\n      remain = length,\n      first  = queue[0],\n      buffers, buffer;\n\n  if (first.length >= length) {\n    if (first.length === length) {\n      return queue.shift();\n    } else {\n      buffer = first.slice(0, length);\n      queue[0] = first.slice(length);\n      return buffer;\n    }\n  }\n\n  for (var i = 0, n = queue.length; i < n; i++) {\n    if (remain < queue[i].length) break;\n    remain -= queue[i].length;\n  }\n  buffers = queue.splice(0, i);\n\n  if (remain > 0 && queue.length > 0) {\n    buffers.push(queue[0].slice(0, remain));\n    queue[0] = queue[0].slice(remain);\n  }\n  return this._concat(buffers, length);\n};\n\nStreamReader.prototype.eachByte = function(callback, context) {\n  var buffer, n, index;\n\n  while (this._queue.length > 0) {\n    buffer = this._queue[0];\n    n = buffer.length;\n\n    while (this._offset < n) {\n      index = this._offset;\n      this._offset += 1;\n      callback.call(context, buffer[index]);\n    }\n    this._offset = 0;\n    this._queue.shift();\n  }\n};\n\nStreamReader.prototype._concat = function(buffers, length) {\n  if (Buffer.concat) return Buffer.concat(buffers, length);\n\n  var buffer = new Buffer(length),\n      offset = 0;\n\n  for (var i = 0, n = buffers.length; i < n; i++) {\n    buffers[i].copy(buffer, offset);\n    offset += buffers[i].length;\n  }\n  return buffer;\n};\n\nmodule.exports = StreamReader;\n"]}