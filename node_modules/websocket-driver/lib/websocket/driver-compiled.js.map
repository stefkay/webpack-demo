{"version":3,"sources":["driver.js"],"names":[],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAI,OAAS,QAAQ,eAAR,CAAb;AAAA,IACI,SAAS,QAAQ,iBAAR,CADb;AAAA,IAEI,SAAS,QAAQ,iBAAR,CAFb;;AAIA,IAAI,SAAS;AACX,UAAQ,UAAS,GAAT,EAAc,OAAd,EAAuB;AAC7B,cAAU,WAAW,EAArB;AACA,QAAI,QAAQ,OAAR,KAAoB,SAAxB,EAAmC,QAAQ,OAAR,GAAkB,IAAlB;AACnC,WAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,OAAhB,CAAP;AACD,GALU;;AAOX,UAAQ,UAAS,OAAT,EAAkB;AACxB,cAAU,WAAW,EAArB;AACA,QAAI,QAAQ,cAAR,KAA2B,SAA/B,EAA0C,QAAQ,cAAR,GAAyB,IAAzB;AAC1C,WAAO,IAAI,MAAJ,CAAW,OAAX,CAAP;AACD,GAXU;;AAaX,QAAM,YAAW;AACf,WAAO,OAAO,IAAP,CAAY,KAAZ,CAAkB,MAAlB,EAA0B,SAA1B,CAAP;AACD,GAfU;;AAiBX,mBAAiB,UAAS,OAAT,EAAkB;AACjC,WAAO,OAAO,eAAP,CAAuB,OAAvB,CAAP;AACD,GAnBU;;AAqBX,eAAa,UAAS,OAAT,EAAkB;AAC7B,QAAI,QAAQ,MAAR,KAAmB,KAAvB,EAA8B,OAAO,KAAP;;AAE9B,QAAI,aAAa,QAAQ,OAAR,CAAgB,UAAhB,IAA8B,EAA/C;AAAA,QACI,UAAa,QAAQ,OAAR,CAAgB,OAAhB,IAA2B,EAD5C;;AAGA,WAAO,QAAQ,MAAR,KAAmB,KAAnB,IACA,WAAW,WAAX,GAAyB,KAAzB,CAA+B,OAA/B,EAAwC,OAAxC,CAAgD,SAAhD,KAA8D,CAD9D,IAEA,QAAQ,WAAR,OAA0B,WAFjC;AAGD,GA9BU;;AAgCX,mBAAiB,UAAS,OAAT,EAAkB,SAAlB,EAA6B;AAC5C,SAAK,eAAL,CAAqB,OAArB,EAA8B,SAA9B;AACD;AAlCU,CAAb;;AAqCA,OAAO,OAAP,GAAiB,MAAjB","file":"driver-compiled.js","sourcesContent":["'use strict';\n\n// Protocol references:\n// \n// * http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-75\n// * http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-76\n// * http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-17\n\nvar Base   = require('./driver/base'),\n    Client = require('./driver/client'),\n    Server = require('./driver/server');\n\nvar Driver = {\n  client: function(url, options) {\n    options = options || {};\n    if (options.masking === undefined) options.masking = true;\n    return new Client(url, options);\n  },\n\n  server: function(options) {\n    options = options || {};\n    if (options.requireMasking === undefined) options.requireMasking = true;\n    return new Server(options);\n  },\n\n  http: function() {\n    return Server.http.apply(Server, arguments);\n  },\n\n  isSecureRequest: function(request) {\n    return Server.isSecureRequest(request);\n  },\n\n  isWebSocket: function(request) {\n    if (request.method !== 'GET') return false;\n\n    var connection = request.headers.connection || '',\n        upgrade    = request.headers.upgrade || '';\n\n    return request.method === 'GET' &&\n           connection.toLowerCase().split(/ *, */).indexOf('upgrade') >= 0 &&\n           upgrade.toLowerCase() === 'websocket';\n  },\n\n  validateOptions: function(options, validKeys) {\n    Base.validateOptions(options, validKeys);\n  }\n};\n\nmodule.exports = Driver;\n"]}