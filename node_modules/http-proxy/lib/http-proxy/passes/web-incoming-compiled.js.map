{"version":3,"sources":["web-incoming.js"],"names":[],"mappings":"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","file":"web-incoming-compiled.js","sourcesContent":["var http   = require('http'),\n    https  = require('https'),\n    web_o  = require('./web-outgoing'),\n    common = require('../common'),\n    passes = exports;\n\nweb_o = Object.keys(web_o).map(function(pass) {\n  return web_o[pass];\n});\n\n/*!\n * Array of passes.\n *\n * A `pass` is just a function that is executed on `req, res, options`\n * so that you can easily add new checks while still keeping the base\n * flexible.\n */\n\n[ // <--\n\n  /**\n   * Sets `content-length` to '0' if request is of DELETE type.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  function deleteLength(req, res, options) {\n    if((req.method === 'DELETE' || req.method === 'OPTIONS')\n       && !req.headers['content-length']) {\n      req.headers['content-length'] = '0';\n      delete req.headers['transfer-encoding'];\n    }\n  },\n\n  /**\n   * Sets timeout in request socket if it was specified in options.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  function timeout(req, res, options) {\n    if(options.timeout) {\n      req.socket.setTimeout(options.timeout);\n    }\n  },\n\n  /**\n   * Sets `x-forwarded-*` headers if specified in config.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  function XHeaders(req, res, options) {\n    if(!options.xfwd) return;\n\n    var encrypted = req.isSpdy || common.hasEncryptedConnection(req);\n    var values = {\n      for  : req.connection.remoteAddress || req.socket.remoteAddress,\n      port : common.getPort(req),\n      proto: encrypted ? 'https' : 'http'\n    };\n\n    ['for', 'port', 'proto'].forEach(function(header) {\n      req.headers['x-forwarded-' + header] =\n        (req.headers['x-forwarded-' + header] || '') +\n        (req.headers['x-forwarded-' + header] ? ',' : '') +\n        values[header];\n    });\n    \n    req.headers['x-forwarded-host'] = req.headers['host'];\n  },\n\n  /**\n   * Does the actual proxying. If `forward` is enabled fires up\n   * a ForwardStream, same happens for ProxyStream. The request\n   * just dies otherwise.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  function stream(req, res, options, _, server, clb) {\n\n    // And we begin!\n    server.emit('start', req, res, options.target)\n    if(options.forward) {\n      // If forward enable, so just pipe the request\n      var forwardReq = (options.forward.protocol === 'https:' ? https : http).request(\n        common.setupOutgoing(options.ssl || {}, options, req, 'forward')\n      );\n      (options.buffer || req).pipe(forwardReq);\n      if(!options.target) { return res.end(); }\n    }\n\n    // Request initalization\n    var proxyReq = (options.target.protocol === 'https:' ? https : http).request(\n      common.setupOutgoing(options.ssl || {}, options, req)\n    );\n\n    // Enable developers to modify the proxyReq before headers are sent\n    proxyReq.on('socket', function(socket) {\n      if(server) { server.emit('proxyReq', proxyReq, req, res, options); }\n    });\n\n    // allow outgoing socket to timeout so that we could\n    // show an error page at the initial request\n    if(options.proxyTimeout) {\n      proxyReq.setTimeout(options.proxyTimeout, function() {\n         proxyReq.abort();\n      });\n    }\n\n    // Ensure we abort proxy if request is aborted\n    req.on('aborted', function () {\n      proxyReq.abort();\n    });\n\n    // Handle errors on incoming request as well as it makes sense to\n    req.on('error', proxyError);\n\n    // Error Handler\n    proxyReq.on('error', proxyError);\n\n    function proxyError (err){\n      if (req.socket.destroyed && err.code === 'ECONNRESET') {\n        server.emit('econnreset', err, req, res, options.target);\n        return proxyReq.abort();\n      }\n\n      if (clb) {\n        clb(err, req, res, options.target);\n      } else {\n        server.emit('error', err, req, res, options.target);\n      }\n    }\n\n    (options.buffer || req).pipe(proxyReq);\n\n    proxyReq.on('response', function(proxyRes) {\n      if(server) { server.emit('proxyRes', proxyRes, req, res); }\n      for(var i=0; i < web_o.length; i++) {\n        if(web_o[i](req, res, proxyRes, options)) { break; }\n      }\n\n      // Allow us to listen when the proxy has completed\n      proxyRes.on('end', function () {\n        server.emit('end', req, res, proxyRes);\n      });\n\n      proxyRes.pipe(res);\n    });\n\n    //proxyReq.end();\n  }\n\n] // <--\n  .forEach(function(func) {\n    passes[func.name] = func;\n  });\n"]}