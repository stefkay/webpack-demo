{"version":3,"sources":["ws-incoming.js"],"names":[],"mappings":"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","file":"ws-incoming-compiled.js","sourcesContent":["var http   = require('http'),\n    https  = require('https'),\n    common = require('../common'),\n    passes = exports;\n\n/*!\n * Array of passes.\n *\n * A `pass` is just a function that is executed on `req, socket, options`\n * so that you can easily add new checks while still keeping the base\n * flexible.\n */\n\n/*\n * Websockets Passes\n *\n */\n\nvar passes = exports;\n\n[\n  /**\n   * WebSocket requests must have the `GET` method and\n   * the `upgrade:websocket` header\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {Socket} Websocket\n   *\n   * @api private\n   */\n\n  function checkMethodAndHeader (req, socket) {\n    if (req.method !== 'GET' || !req.headers.upgrade) {\n      socket.destroy();\n      return true;\n    }\n\n    if (req.headers.upgrade.toLowerCase() !== 'websocket') {\n      socket.destroy();\n      return true;\n    }\n  },\n\n  /**\n   * Sets `x-forwarded-*` headers if specified in config.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {Socket} Websocket\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  function XHeaders(req, socket, options) {\n    if(!options.xfwd) return;\n\n    var values = {\n      for  : req.connection.remoteAddress || req.socket.remoteAddress,\n      port : common.getPort(req),\n      proto: common.hasEncryptedConnection(req) ? 'wss' : 'ws'\n    };\n\n    ['for', 'port', 'proto'].forEach(function(header) {\n      req.headers['x-forwarded-' + header] =\n        (req.headers['x-forwarded-' + header] || '') +\n        (req.headers['x-forwarded-' + header] ? ',' : '') +\n        values[header];\n    });\n  },\n\n  /**\n   * Does the actual proxying. Make the request and upgrade it\n   * send the Switching Protocols request and pipe the sockets.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {Socket} Websocket\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n  function stream(req, socket, options, head, server, clb) {\n    common.setupSocket(socket);\n\n    if (head && head.length) socket.unshift(head);\n\n\n    var proxyReq = (common.isSSL.test(options.target.protocol) ? https : http).request(\n      common.setupOutgoing(options.ssl || {}, options, req)\n    );\n\n    // Enable developers to modify the proxyReq before headers are sent\n    if (server) { server.emit('proxyReqWs', proxyReq, req, socket, options, head); }\n\n    // Error Handler\n    proxyReq.on('error', onOutgoingError);\n    proxyReq.on('response', function (res) {\n      // if upgrade event isn't going to happen, close the socket\n      if (!res.upgrade) socket.end();\n    });\n\n    proxyReq.on('upgrade', function(proxyRes, proxySocket, proxyHead) {\n      proxySocket.on('error', onOutgoingError);\n\n      // Allow us to listen when the websocket has completed\n      proxySocket.on('end', function () {\n        server.emit('close', proxyRes, proxySocket, proxyHead);\n      });\n\n      // The pipe below will end proxySocket if socket closes cleanly, but not\n      // if it errors (eg, vanishes from the net and starts returning\n      // EHOSTUNREACH). We need to do that explicitly.\n      socket.on('error', function () {\n        proxySocket.end();\n      });\n\n      common.setupSocket(proxySocket);\n\n      if (proxyHead && proxyHead.length) proxySocket.unshift(proxyHead);\n\n      //\n      // Remark: Handle writing the headers to the socket when switching protocols\n      // Also handles when a header is an array\n      //\n      socket.write(\n        Object.keys(proxyRes.headers).reduce(function (head, key) {\n          var value = proxyRes.headers[key];\n\n          if (!Array.isArray(value)) {\n            head.push(key + ': ' + value);\n            return head;\n          }\n\n          for (var i = 0; i < value.length; i++) {\n            head.push(key + ': ' + value[i]);\n          }\n          return head;\n        }, ['HTTP/1.1 101 Switching Protocols'])\n        .join('\\r\\n') + '\\r\\n\\r\\n'\n      );\n\n      proxySocket.pipe(socket).pipe(proxySocket);\n\n      server.emit('open', proxySocket);\n      server.emit('proxySocket', proxySocket);  //DEPRECATED.\n    });\n\n    return proxyReq.end(); // XXX: CHECK IF THIS IS THIS CORRECT\n\n    function onOutgoingError(err) {\n      if (clb) {\n        clb(err, req, socket);\n      } else {\n        server.emit('error', err, req, socket);\n      }\n      socket.end();\n    }\n  }\n\n] // <--\n  .forEach(function(func) {\n    passes[func.name] = func;\n  });\n"]}