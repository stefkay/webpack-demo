{"version":3,"sources":["_stream_writable.js"],"names":[],"mappings":"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","file":"_stream_writable-compiled.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, cb), and it'll handle all\n// the drain event emission and buffering.\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Stream = require('stream');\n\nutil.inherits(Writable, Stream);\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n}\n\nfunction WritableState(options, stream) {\n  options = options || {};\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, becuase any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.buffer = [];\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nfunction Writable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, state, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  process.nextTick(function() {\n    cb(er);\n  });\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  if (!Buffer.isBuffer(chunk) &&\n      'string' !== typeof chunk &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    process.nextTick(function() {\n      cb(er);\n    });\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function')\n    cb = function() {};\n\n  if (state.ended)\n    writeAfterEnd(this, state, cb);\n  else if (validChunk(this, state, chunk, cb))\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n\n  return ret;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      typeof chunk === 'string') {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing)\n    state.buffer.push(new WriteReq(chunk, encoding, cb));\n  else\n    doWrite(stream, state, len, chunk, encoding, cb);\n\n  return ret;\n}\n\nfunction doWrite(stream, state, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  if (sync)\n    process.nextTick(function() {\n      cb(er);\n    });\n  else\n    cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(stream, state);\n\n    if (!finished && !state.bufferProcessing && state.buffer.length)\n      clearBuffer(stream, state);\n\n    if (sync) {\n      process.nextTick(function() {\n        afterWrite(stream, state, finished, cb);\n      });\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  cb();\n  if (finished)\n    finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n\n  for (var c = 0; c < state.buffer.length; c++) {\n    var entry = state.buffer[c];\n    var chunk = entry.chunk;\n    var encoding = entry.encoding;\n    var cb = entry.callback;\n    var len = state.objectMode ? 1 : chunk.length;\n\n    doWrite(stream, state, len, chunk, encoding, cb);\n\n    // if we didn't call the onwrite immediately, then\n    // it means that we need to wait until it does.\n    // also, that means that the chunk and cb are currently\n    // being processed, so move the buffer counter past them.\n    if (state.writing) {\n      c++;\n      break;\n    }\n  }\n\n  state.bufferProcessing = false;\n  if (c < state.buffer.length)\n    state.buffer = state.buffer.slice(c);\n  else\n    state.buffer.length = 0;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (typeof chunk !== 'undefined' && chunk !== null)\n    this.write(chunk, encoding);\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(stream, state) {\n  return (state.ending &&\n          state.length === 0 &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(stream, state);\n  if (need) {\n    state.finished = true;\n    stream.emit('finish');\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      process.nextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n"]}