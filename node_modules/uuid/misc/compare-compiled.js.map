{"version":3,"sources":["compare.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,QAAR,CAAb;AAAA,IACI,WAAW,QAAQ,KAAR,CADf;AAAA,IAEI,SAAS,QAAQ,SAAR,CAFb;AAAA,IAGI,OAAO,QAAQ,MAAR,CAHX;AAAA,IAII,OAAO,QAAQ,eAAR,EAAyB,IAJpC;AAAA,IAKI,KAAK,QAAQ,IAAR,CALT;;AAOA;AACA;AACA,IAAI,UAAU,GAAG,IAAH,OAAc,QAAd,GAAyB,SAAzB,GAAqC,YAAnD;;AAEA,SAAS,OAAT,CAAiB,GAAjB,EAAsB;AACpB,UAAQ,GAAR,CAAY,GAAZ;AACA,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,IAAI,MAAxB,EAAgC,GAAhC,EAAqC;AACnC,QAAI,KAAK,IAAI,CAAJ,EAAO,KAAP,CAAa,GAAb,CAAT;AACA,SAAK,CAAC,GAAG,CAAH,CAAD,EAAQ,GAAG,CAAH,CAAR,EAAe,GAAG,CAAH,CAAf,EAAsB,IAAtB,CAA2B,EAA3B,CAAL;AACA,QAAI,CAAJ,IAAS,EAAT;AACD;AACD,MAAI,SAAU,GAAG,MAAH,CAAU,GAAV,CAAD,CAAiB,IAAjB,EAAb;;AAEA,MAAI,OAAO,QAAP,OAAsB,IAAI,QAAJ,EAA1B,EAA0C;AACxC,YAAQ,GAAR,CAAY,yBAAZ;AACD,GAFD,MAEO;AACL,YAAQ,GAAR,CAAY,sBAAZ;AACD;AACF;;AAED;AACA,IAAI,MAAM,EAAV;AACA,OAAO,IAAI,MAAJ,GAAa,IAApB,EAA0B,IAAI,IAAJ,CAAS,SAAS,EAAT,EAAT;;AAE1B,IAAI,MAAM,EAAV;AACA,QAAQ,GAAR,CAAY,YAAZ;AACA,MAAM,EAAN;AACA,KAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,GAApB,EAAyB,GAAzB,EAA8B,IAAI,IAAJ,CAAS,SAAS,EAAT,EAAT;AAC9B,QAAQ,GAAR;;AAEA,QAAQ,GAAR,CAAY,EAAZ;AACA,QAAQ,GAAR,CAAY,SAAZ;AACA,MAAM,EAAN;AACA,KAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,GAApB,EAAyB,GAAzB,EAA8B,IAAI,IAAJ,CAAS,OAAO,MAAP,CAAc,CAAd,EAAiB,QAAjB,EAAT;AAC9B,QAAQ,GAAR;;AAEA,QAAQ,GAAR,CAAY,EAAZ;AACA,QAAQ,GAAR,CAAY,UAAZ;AACA,MAAM,EAAN;AACA,IAAI,QAAQ,CAAZ;AACA,IAAI,OAAO,YAAW;AACpB,UAAQ,GAAR;AACD,CAFD;AAGA,IAAI,KAAK,UAAS,GAAT,EAAc,MAAd,EAAsB,MAAtB,EAA8B;AACrC,MAAI,IAAJ,CAAS,OAAO,SAAP,CAAiB,CAAjB,EAAoB,OAAO,MAAP,GAAc,CAAlC,CAAT;AACA;AACA,MAAI,QAAQ,GAAZ,EAAiB;AACf,WAAO,MAAP;AACD;AACD;AACD,CAPD;AAQA,IAAI,OAAO,YAAW;AACpB,OAAK,OAAL,EAAc,EAAd;AACD,CAFD;AAGA","file":"compare-compiled.js","sourcesContent":["var assert = require('assert'),\n    nodeuuid = require('../'),\n    uuidjs = require('uuid-js'),\n    util = require('util'),\n    exec = require('child_process').exec,\n    os = require('os');\n\n// On Mac Os X / macports there's only the ossp-uuid package that provides uuid\n// On Linux there's uuid-runtime which provides uuidgen\nvar uuidCmd = os.type() === 'Darwin' ? 'uuid -1' : 'uuidgen -t';\n\nfunction compare(ids) {\n  console.log(ids);\n  for (var i = 0; i < ids.length; i++) {\n    var id = ids[i].split('-');\n    id = [id[2], id[1], id[0]].join('');\n    ids[i] = id;\n  }\n  var sorted = ([].concat(ids)).sort();\n\n  if (sorted.toString() !== ids.toString()) {\n    console.log('Warning: sorted !== ids');\n  } else {\n    console.log('everything in order!');\n  }\n}\n\n// Test time order of v1 uuids\nvar ids = [];\nwhile (ids.length < 10e3) ids.push(nodeuuid.v1());\n\nvar max = 10;\nconsole.log('node-uuid:');\nids = [];\nfor (var i = 0; i < max; i++) ids.push(nodeuuid.v1());\ncompare(ids);\n\nconsole.log('');\nconsole.log('uuidjs:');\nids = [];\nfor (var i = 0; i < max; i++) ids.push(uuidjs.create(1).toString());\ncompare(ids);\n\nconsole.log('');\nconsole.log('libuuid:');\nids = [];\nvar count = 0;\nvar last = function() {\n  compare(ids);\n}\nvar cb = function(err, stdout, stderr) {\n  ids.push(stdout.substring(0, stdout.length-1));\n  count++;\n  if (count < max) {\n    return next();\n  }\n  last();\n};\nvar next = function() {\n  exec(uuidCmd, cb);\n};\nnext();\n"]}