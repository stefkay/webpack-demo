{"version":3,"sources":["perf.js"],"names":[],"mappings":"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","file":"perf-compiled.js","sourcesContent":["var assert = require('assert');\n\nvar uuid = require('../');\n\nvar log = console.log;\n\nvar generators = {\n  v1: uuid.v1,\n  v4: uuid.v4\n};\n\nvar UUID_FORMAT = {\n  v1: /[0-9a-f]{8}-[0-9a-f]{4}-1[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}/i,\n  v4: /[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}/i\n};\n\nvar N = 1e4;\n\n// Get %'age an actual value differs from the ideal value\nfunction divergence(actual, ideal) {\n  return Math.round(100*100*(actual - ideal)/ideal)/100;\n}\n\nfunction rate(msg, t) {\n  log(msg + ': ' + (N / (Date.now() - t) * 1e3 | 0) + ' uuids\\/second');\n}\n\nfor (var version in generators) {\n  var counts = {}, max = 0;\n  var generator = generators[version];\n  var format = UUID_FORMAT[version];\n\n  log('\\nSanity check ' + N + ' ' + version + ' uuids');\n  for (var i = 0, ok = 0; i < N; i++) {\n    id = generator();\n    if (!format.test(id)) {\n      throw Error(id + ' is not a valid UUID string');\n    }\n\n    if (id != uuid.unparse(uuid.parse(id))) {\n      assert(fail, id + ' is not a valid id');\n    }\n\n    // Count digits for our randomness check\n    if (version == 'v4') {\n      var digits = id.replace(/-/g, '').split('');\n      for (var j = digits.length-1; j >= 0; j--) {\n        var c = digits[j];\n        max = Math.max(max, counts[c] = (counts[c] || 0) + 1);\n      }\n    }\n  }\n\n  // Check randomness for v4 UUIDs\n  if (version == 'v4') {\n    // Limit that we get worried about randomness. (Purely empirical choice, this!)\n    var limit = 2*100*Math.sqrt(1/N);\n\n    log('\\nChecking v4 randomness.  Distribution of Hex Digits (% deviation from ideal)');\n\n    for (var i = 0; i < 16; i++) {\n      var c = i.toString(16);\n      var bar = '', n = counts[c], p = Math.round(n/max*100|0);\n\n      // 1-3,5-8, and D-F: 1:16 odds over 30 digits\n      var ideal = N*30/16;\n      if (i == 4) {\n        // 4: 1:1 odds on 1 digit, plus 1:16 odds on 30 digits\n        ideal = N*(1 + 30/16);\n      } else if (i >= 8 && i <= 11) {\n        // 8-B: 1:4 odds on 1 digit, plus 1:16 odds on 30 digits\n        ideal = N*(1/4 + 30/16);\n      } else {\n        // Otherwise: 1:16 odds on 30 digits\n        ideal = N*30/16;\n      }\n      var d = divergence(n, ideal);\n\n      // Draw bar using UTF squares (just for grins)\n      var s = n/max*50 | 0;\n      while (s--) bar += '=';\n\n      assert(Math.abs(d) < limit, c + ' |' + bar + '| ' + counts[c] + ' (' + d + '% < ' + limit + '%)');\n    }\n  }\n}\n\n// Perf tests\nfor (var version in generators) {\n  log('\\nPerformance testing ' + version + ' UUIDs');\n  var generator = generators[version];\n  var buf = new uuid.BufferClass(16);\n\n  for (var i = 0, t = Date.now(); i < N; i++) generator();\n  rate('uuid.' + version + '()', t);\n\n  for (var i = 0, t = Date.now(); i < N; i++) generator('binary');\n  rate('uuid.' + version + '(\\'binary\\')', t);\n\n  for (var i = 0, t = Date.now(); i < N; i++) generator('binary', buf);\n  rate('uuid.' + version + '(\\'binary\\', buffer)', t);\n}\n"]}