{"version":3,"sources":["uuid.js"],"names":[],"mappings":"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","file":"uuid-compiled.js","sourcesContent":["//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar _rng = require('./rng');\n\n// Maps for number <-> hex string conversion\nvar _byteToHex = [];\nvar _hexToByte = {};\nfor (var i = 0; i < 256; i++) {\n  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n  _hexToByte[_byteToHex[i]] = i;\n}\n\n// **`parse()` - Parse a UUID into it's component bytes**\nfunction parse(s, buf, offset) {\n  var i = (buf && offset) || 0, ii = 0;\n\n  buf = buf || [];\n  s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n    if (ii < 16) { // Don't overflow!\n      buf[i + ii++] = _hexToByte[oct];\n    }\n  });\n\n  // Zero out remaining bytes if string was short\n  while (ii < 16) {\n    buf[i + ii++] = 0;\n  }\n\n  return buf;\n}\n\n// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\nfunction unparse(buf, offset) {\n  var i = offset || 0, bth = _byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = _rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; n++) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : unparse(b);\n}\n\n// **`v4()` - Generate random UUID**\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v4(options, buf, offset) {\n  // Deprecated - 'format' argument, as supported in v1.2\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || _rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ii++) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || unparse(rnds);\n}\n\n// Export public API\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\nuuid.parse = parse;\nuuid.unparse = unparse;\n\nmodule.exports = uuid;\n"]}