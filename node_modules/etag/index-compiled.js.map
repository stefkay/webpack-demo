{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;AAMA;;AAEA;;;;;AAKA,OAAO,OAAP,GAAiB,IAAjB;;AAEA;;;;;AAKA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,QAAQ,QAAQ,IAAR,EAAc,KAA1B;;AAEA;;;;;AAKA,IAAI,sBAAsB,KAA1B;AACA,IAAI,WAAW,OAAO,SAAP,CAAiB,QAAhC;;AAEA;;;;;;;;AAQA,SAAS,SAAT,CAAmB,MAAnB,EAA2B;AACzB,MAAI,OAAO,MAAP,KAAkB,CAAtB,EAAyB;AACvB;AACA,WAAO,4BAAP;AACD;;AAED;AACA,MAAI,OAAO,OACR,UADQ,CACG,KADH,EAER,MAFQ,CAED,MAFC,EAEO,MAFP,EAGR,MAHQ,CAGD,QAHC,EAIR,OAJQ,CAIA,mBAJA,EAIqB,EAJrB,CAAX;;AAMA;AACA,MAAI,MAAM,OAAO,MAAP,KAAkB,QAAlB,GACN,OAAO,UAAP,CAAkB,MAAlB,EAA0B,MAA1B,CADM,GAEN,OAAO,MAFX;;AAIA,SAAO,MAAM,IAAI,QAAJ,CAAa,EAAb,CAAN,GAAyB,GAAzB,GAA+B,IAA/B,GAAsC,GAA7C;AACD;;AAED;;;;;;;;;;AAUA,SAAS,IAAT,CAAc,MAAd,EAAsB,OAAtB,EAA+B;AAC7B,MAAI,UAAU,IAAd,EAAoB;AAClB,UAAM,IAAI,SAAJ,CAAc,6BAAd,CAAN;AACD;;AAED;AACA,MAAI,UAAU,QAAQ,MAAR,CAAd;AACA,MAAI,OAAO,WAAW,OAAO,QAAQ,IAAf,KAAwB,SAAnC,GACP,QAAQ,IADD,GAEP,OAFJ;;AAIA;AACA,MAAI,CAAC,OAAD,IAAY,OAAO,MAAP,KAAkB,QAA9B,IAA0C,CAAC,OAAO,QAAP,CAAgB,MAAhB,CAA/C,EAAwE;AACtE,UAAM,IAAI,SAAJ,CAAc,qDAAd,CAAN;AACD;;AAED;AACA,MAAI,MAAM,UACN,QAAQ,MAAR,CADM,GAEN,UAAU,MAAV,CAFJ;;AAIA,SAAO,OACH,OAAO,GADJ,GAEH,GAFJ;AAGD;;AAED;;;;;;;;AAQA,SAAS,OAAT,CAAiB,GAAjB,EAAsB;AACpB;AACA,MAAI,OAAO,KAAP,KAAiB,UAAjB,IAA+B,eAAe,KAAlD,EAAyD;AACvD,WAAO,IAAP;AACD;;AAED;AACA,SAAO,OAAO,OAAO,GAAP,KAAe,QAAtB,IACF,WAAW,GADT,IACgB,SAAS,IAAT,CAAc,IAAI,KAAlB,MAA6B,eAD7C,IAEF,WAAW,GAFT,IAEgB,SAAS,IAAT,CAAc,IAAI,KAAlB,MAA6B,eAF7C,IAGF,SAAS,GAHP,IAGc,OAAO,IAAI,GAAX,KAAmB,QAHjC,IAIF,UAAU,GAJR,IAIe,OAAO,IAAI,IAAX,KAAoB,QAJ1C;AAKD;;AAED;;;;;;;;AAQA,SAAS,OAAT,CAAiB,IAAjB,EAAuB;AACrB,MAAI,QAAQ,KAAK,KAAL,CAAW,OAAX,GAAqB,QAArB,CAA8B,EAA9B,CAAZ;AACA,MAAI,OAAO,KAAK,IAAL,CAAU,QAAV,CAAmB,EAAnB,CAAX;;AAEA,SAAO,MAAM,IAAN,GAAa,GAAb,GAAmB,KAAnB,GAA2B,GAAlC;AACD","file":"index-compiled.js","sourcesContent":["/*!\n * etag\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = etag\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar crypto = require('crypto')\nvar Stats = require('fs').Stats\n\n/**\n * Module variables.\n * @private\n */\n\nvar base64PadCharRegExp = /=+$/\nvar toString = Object.prototype.toString\n\n/**\n * Generate an entity tag.\n *\n * @param {Buffer|string} entity\n * @return {string}\n * @private\n */\n\nfunction entitytag(entity) {\n  if (entity.length === 0) {\n    // fast-path empty\n    return '\"0-1B2M2Y8AsgTpgAmY7PhCfg\"'\n  }\n\n  // compute hash of entity\n  var hash = crypto\n    .createHash('md5')\n    .update(entity, 'utf8')\n    .digest('base64')\n    .replace(base64PadCharRegExp, '')\n\n  // compute length of entity\n  var len = typeof entity === 'string'\n    ? Buffer.byteLength(entity, 'utf8')\n    : entity.length\n\n  return '\"' + len.toString(16) + '-' + hash + '\"'\n}\n\n/**\n * Create a simple ETag.\n *\n * @param {string|Buffer|Stats} entity\n * @param {object} [options]\n * @param {boolean} [options.weak]\n * @return {String}\n * @public\n */\n\nfunction etag(entity, options) {\n  if (entity == null) {\n    throw new TypeError('argument entity is required')\n  }\n\n  // support fs.Stats object\n  var isStats = isstats(entity)\n  var weak = options && typeof options.weak === 'boolean'\n    ? options.weak\n    : isStats\n\n  // validate argument\n  if (!isStats && typeof entity !== 'string' && !Buffer.isBuffer(entity)) {\n    throw new TypeError('argument entity must be string, Buffer, or fs.Stats')\n  }\n\n  // generate entity tag\n  var tag = isStats\n    ? stattag(entity)\n    : entitytag(entity)\n\n  return weak\n    ? 'W/' + tag\n    : tag\n}\n\n/**\n * Determine if object is a Stats object.\n *\n * @param {object} obj\n * @return {boolean}\n * @api private\n */\n\nfunction isstats(obj) {\n  // genuine fs.Stats\n  if (typeof Stats === 'function' && obj instanceof Stats) {\n    return true\n  }\n\n  // quack quack\n  return obj && typeof obj === 'object'\n    && 'ctime' in obj && toString.call(obj.ctime) === '[object Date]'\n    && 'mtime' in obj && toString.call(obj.mtime) === '[object Date]'\n    && 'ino' in obj && typeof obj.ino === 'number'\n    && 'size' in obj && typeof obj.size === 'number'\n}\n\n/**\n * Generate a tag for a stat.\n *\n * @param {object} stat\n * @return {string}\n * @private\n */\n\nfunction stattag(stat) {\n  var mtime = stat.mtime.getTime().toString(16)\n  var size = stat.size.toString(16)\n\n  return '\"' + size + '-' + mtime + '\"'\n}\n"]}