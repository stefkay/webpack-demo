{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n"]}