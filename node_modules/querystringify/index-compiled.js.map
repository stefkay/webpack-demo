{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,MAAM,OAAO,SAAP,CAAiB,cAA3B;;AAEA;;;;;;;AAOA,SAAS,WAAT,CAAqB,KAArB,EAA4B;AAC1B,MAAI,SAAS,oBAAb;AAAA,MACI,SAAS,EADb;AAAA,MAEI,IAFJ;;AAIA;AACA;AACA;AACA;AACA;AACA,SACE,OAAO,OAAO,IAAP,CAAY,KAAZ,CADT,EAEE,OAAO,mBAAmB,KAAK,CAAL,CAAnB,CAAP,IAAsC,mBAAmB,KAAK,CAAL,CAAnB,CAFxC,CAGC;;AAED,SAAO,MAAP;AACD;;AAED;;;;;;;;AAQA,SAAS,cAAT,CAAwB,GAAxB,EAA6B,MAA7B,EAAqC;AACnC,WAAS,UAAU,EAAnB;;AAEA,MAAI,QAAQ,EAAZ;;AAEA;AACA;AACA;AACA,MAAI,aAAa,OAAO,MAAxB,EAAgC,SAAS,GAAT;;AAEhC,OAAK,IAAI,GAAT,IAAgB,GAAhB,EAAqB;AACnB,QAAI,IAAI,IAAJ,CAAS,GAAT,EAAc,GAAd,CAAJ,EAAwB;AACtB,YAAM,IAAN,CAAW,mBAAmB,GAAnB,IAAyB,GAAzB,GAA8B,mBAAmB,IAAI,GAAJ,CAAnB,CAAzC;AACD;AACF;;AAED,SAAO,MAAM,MAAN,GAAe,SAAS,MAAM,IAAN,CAAW,GAAX,CAAxB,GAA0C,EAAjD;AACD;;AAED;AACA;AACA;AACA,QAAQ,SAAR,GAAoB,cAApB;AACA,QAAQ,KAAR,GAAgB,WAAhB","file":"index-compiled.js","sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=([^&]*)/g\n    , result = {}\n    , part;\n\n  //\n  // Little nifty parsing hack, leverage the fact that RegExp.exec increments\n  // the lastIndex property so we can continue executing this loop until we've\n  // parsed all results.\n  //\n  for (;\n    part = parser.exec(query);\n    result[decodeURIComponent(part[1])] = decodeURIComponent(part[2])\n  );\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = [];\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      pairs.push(encodeURIComponent(key) +'='+ encodeURIComponent(obj[key]));\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n"]}