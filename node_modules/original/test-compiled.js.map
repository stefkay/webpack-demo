{"version":3,"sources":["test.js"],"names":[],"mappings":"AAAA,SAAS,UAAT,EAAqB,YAAY;AAC/B;;AAEA,MAAI,QAAQ,QAAQ,WAAR,CAAZ;AAAA,MACI,SAAS,QAAQ,QAAR,CADb;AAAA,MAEI,SAAS,QAAQ,IAAR,CAFb;AAAA,MAGI,OAAO,OAAO,IAHlB;;AAKA,KAAG,0BAAH,EAA+B,YAAY;AACzC,WAAO,MAAP,EAAe,EAAf,CAAkB,CAAlB,CAAoB,UAApB;AACD,GAFD;;AAIA,KAAG,yCAAH,EAA8C,YAAY;AACxD,QAAI,IAAI,OAAO,MAAM,+BAAN,CAAP,CAAR;AACA,WAAO,CAAP,EAAU,MAAV,CAAiB,mBAAjB;AACD,GAHD;;AAKA,KAAG,gCAAH,EAAqC,YAAY;AAC/C,QAAI,IAAI,OAAO,+BAAP,CAAR;;AAEA,WAAO,OAAO,CAAP,CAAP,EAAkB,MAAlB,CAAyB,CAAzB;AACD,GAJD;;AAMA,KAAG,uBAAH,EAA4B,YAAY;AACtC,QAAI,IAAI,OAAO,6BAAP,CAAR;;AAEA,WAAO,CAAP,EAAU,MAAV,CAAiB,6BAAjB;;AAEA,QAAI,OAAO,8BAAP,CAAJ;AACA,WAAO,CAAP,EAAU,MAAV,CAAiB,8BAAjB;;AAEA,QAAI,OAAO,8BAAP,CAAJ;AACA,WAAO,CAAP,EAAU,MAAV,CAAiB,8BAAjB;AACD,GAVD;;AAYA,KAAG,iDAAH,EAAsD,YAAY;AAChE,QAAI,IAAI,OAAO,iBAAP,CAAR;;AAEA,WAAO,CAAP,EAAU,MAAV,CAAiB,MAAjB;AACD,GAJD;;AAMA,KAAG,iDAAH,EAAsD,YAAY;AAChE,QAAI,IAAI,OAAO,SAAP,CAAR;;AAEA,WAAO,CAAP,EAAU,MAAV,CAAiB,MAAjB;AACD,GAJD;;AAMA,KAAG,gCAAH,EAAqC,YAAY;AAC/C,QAAI,IAAI,OAAO,+BAAP,CAAR;AACA,WAAO,CAAP,EAAU,MAAV,CAAiB,mBAAjB;;AAEA,QAAI,OAAO,sBAAP,CAAJ;AACA,WAAO,CAAP,EAAU,MAAV,CAAiB,mBAAjB;;AAEA,QAAI,OAAO,mBAAP,CAAJ;AACA,WAAO,CAAP,EAAU,MAAV,CAAiB,mBAAjB;;AAEA,QAAI,OAAO,iCAAP,CAAJ;AACA,WAAO,CAAP,EAAU,MAAV,CAAiB,oBAAjB;;AAEA,QAAI,OAAO,gCAAP,CAAJ;AACA,WAAO,CAAP,EAAU,MAAV,CAAiB,uBAAjB;;AAEA,QAAI,OAAO,gCAAP,CAAJ;AACA,WAAO,CAAP,EAAU,MAAV,CAAiB,uBAAjB;;AAEA,QAAI,OAAO,4BAAP,CAAJ;AACA,WAAO,CAAP,EAAU,MAAV,CAAiB,mBAAjB;AACD,GArBD;;AAuBA,KAAG,8BAAH,EAAmC,YAAY;AAC7C,QAAI,IAAI,OAAO,6BAAP,CAAR;AACA,WAAO,CAAP,EAAU,MAAV,CAAiB,iBAAjB;;AAEA,QAAI,OAAO,+BAAP,CAAJ;AACA,WAAO,CAAP,EAAU,MAAV,CAAiB,kBAAjB;;AAEA,QAAI,OAAO,8BAAP,CAAJ;AACA,WAAO,CAAP,EAAU,MAAV,CAAiB,qBAAjB;;AAEA,QAAI,OAAO,8BAAP,CAAJ;AACA,WAAO,CAAP,EAAU,MAAV,CAAiB,qBAAjB;AACD,GAZD;;AAcA,WAAS,OAAT,EAAkB,YAAY;AAC5B,WAAO,OAAO,IAAd,EAAoB,EAApB,CAAuB,CAAvB,CAAyB,UAAzB;;AAEA,OAAG,QAAH,EAAa,YAAY;AACvB,aAAO,KAAK,mBAAL,EAA0B,sBAA1B,CAAP,EAA0D,EAA1D,CAA6D,IAA7D;AACD,KAFD;AAGD,GAND;AAOD,CA3FD","file":"test-compiled.js","sourcesContent":["describe('original', function () {\n  'use strict';\n\n  var parse = require('url-parse')\n    , assume = require('assume')\n    , origin = require('./')\n    , same = origin.same;\n\n  it('is exposed as a function', function () {\n    assume(origin).is.a('function');\n  });\n\n  it('also accepts objects instead of strings', function () {\n    var o = origin(parse('http://google.com:80/pathname'));\n    assume(o).equals('http://google.com');\n  });\n\n  it('also accepts origins as origin', function () {\n    var o = origin('http://google.com:80/pathname');\n\n    assume(origin(o)).equals(o);\n  });\n\n  it('lowercases the origin', function () {\n    var o = origin('hTtp://WwW.ExAMPLE.cOM:8080');\n\n    assume(o).equals('http://www.example.com:8080');\n\n    o = origin('https://www.EXAMPLE.com:8080');\n    assume(o).equals('https://www.example.com:8080');\n\n    o = origin('HTTPS://WWW.example.COM:8080');\n    assume(o).equals('https://www.example.com:8080');\n  });\n\n  it('returns \"null\" if the protocol is not specified', function () {\n    var o = origin('www.example.com');\n\n    assume(o).equals('null');\n  });\n\n  it('returns \"null\" if the hostname is not specified', function () {\n    var o = origin('http://');\n\n    assume(o).equals('null');\n  });\n\n  it('removes default ports for http', function () {\n    var o = origin('http://google.com:80/pathname');\n    assume(o).equals('http://google.com');\n\n    o = origin('http://google.com:80');\n    assume(o).equals('http://google.com');\n\n    o = origin('http://google.com');\n    assume(o).equals('http://google.com');\n\n    o = origin('https://google.com:443/pathname');\n    assume(o).equals('https://google.com');\n\n    o = origin('http://google.com:443/pathname');\n    assume(o).equals('http://google.com:443');\n\n    o = origin('https://google.com:80/pathname');\n    assume(o).equals('https://google.com:80');\n\n    o = origin('file://google.com/pathname');\n    assume(o).equals('file://google.com');\n  });\n\n  it('removes default ports for ws', function () {\n    var o = origin('ws://google.com:80/pathname');\n    assume(o).equals('ws://google.com');\n\n    o = origin('wss://google.com:443/pathname');\n    assume(o).equals('wss://google.com');\n\n    o = origin('ws://google.com:443/pathname');\n    assume(o).equals('ws://google.com:443');\n\n    o = origin('wss://google.com:80/pathname');\n    assume(o).equals('wss://google.com:80');\n  });\n\n  describe('.same', function () {\n    assume(origin.same).is.a('function');\n\n    it('equals', function () {\n      assume(same('http://google.com', 'http://google.com:80')).is.true();\n    });\n  });\n});\n"]}