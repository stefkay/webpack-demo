{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,QAAQ,QAAQ,WAAR,CAAZ;;AAEA;;;;;;;AAOA,SAAS,MAAT,CAAgB,GAAhB,EAAqB;AACnB,MAAI,aAAa,OAAO,GAAxB,EAA6B,MAAM,MAAM,GAAN,CAAN;;AAE7B;AACA;AACA;AACA;AACA,MAAI,CAAC,IAAI,QAAL,IAAiB,CAAC,IAAI,QAA1B,EAAoC,OAAO,MAAP;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAO,CAAC,IAAI,QAAJ,GAAc,IAAd,GAAoB,IAAI,IAAzB,EAA+B,WAA/B,EAAP;AACD;;AAED;;;;;;;;AAQA,OAAO,IAAP,GAAc,SAAS,IAAT,CAAc,CAAd,EAAiB,CAAjB,EAAoB;AAChC,SAAO,OAAO,CAAP,MAAc,OAAO,CAAP,CAArB;AACD,CAFD;;AAIA;AACA;AACA;AACA,OAAO,OAAP,GAAiB,MAAjB","file":"index-compiled.js","sourcesContent":["'use strict';\n\nvar parse = require('url-parse');\n\n/**\n * Transform an URL to a valid origin value.\n *\n * @param {String|Object} url URL to transform to it's origin.\n * @returns {String} The origin.\n * @api public\n */\nfunction origin(url) {\n  if ('string' === typeof url) url = parse(url);\n\n  //\n  // 6.2.  ASCII Serialization of an Origin\n  // http://tools.ietf.org/html/rfc6454#section-6.2\n  //\n  if (!url.protocol || !url.hostname) return 'null';\n\n  //\n  // 4. Origin of a URI\n  // http://tools.ietf.org/html/rfc6454#section-4\n  //\n  // States that url.scheme, host should be converted to lower case. This also\n  // makes it easier to match origins as everything is just lower case.\n  //\n  return (url.protocol +'//'+ url.host).toLowerCase();\n}\n\n/**\n * Check if the origins are the same.\n *\n * @param {String} a URL or origin of a.\n * @param {String} b URL or origin of b.\n * @returns {Boolean}\n * @api public\n */\norigin.same = function same(a, b) {\n  return origin(a) === origin(b);\n};\n\n//\n// Expose the origin\n//\nmodule.exports = origin;\n"]}