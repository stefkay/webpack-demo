{"version":3,"sources":["fuzzy.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,MAAM,QAAQ,IAAR,CAAV;AAAA,IACI,MAAM,IAAI,GAAJ,CAAQ,EAAR,CADV;;AAGA;;;;;;;AAOA,IAAI,eAAe,EAAnB;;AAEA,aAAa,QAAb,GAAwB,CACtB,OADsB,EAEtB,QAFsB,EAGtB,KAHsB,EAItB,MAJsB,EAKtB,OAAO;;AALe,CAAxB;AAQA,aAAa,QAAb,GAAwB,CAAC,KAAD,EAAQ,KAAR,CAAxB;AACA,aAAa,QAAb,GAAwB,aAAa,QAArC;AACA,aAAa,QAAb,GAAwB,CACtB,aADsB,EAEtB,iBAFsB,EAGtB,eAHsB,EAItB,uBAJsB,EAKtB,aALsB,EAMtB,WANsB,EAOtB,WAPsB,EAQtB,iBAAiB;;;;;;;;;AARK,CAAxB;AAkBA,aAAa,IAAb,GAAoB,CAAC,MAAD,EAAS,KAAT,EAAgB,MAAhB,CAApB;AACA,aAAa,QAAb,GAAwB,CACtB,GADsB,EAEtB,MAFsB,EAGtB,OAHsB,EAItB,UAJsB,EAKtB,cALsB,EAMtB,UANsB,EAOtB,YAPsB,EAQtB,yBARsB,CAAxB;AAUA,aAAa,KAAb,GAAqB,CAAC,SAAD,EACnB,qBADmB,EAEnB,sBAFmB,EAGnB,IAHmB,CAArB;AAKA,aAAa,IAAb,GAAoB,CAClB,MADkB,EAElB,sBAFkB,EAGlB,iCAHkB,EAIlB,cAJkB,EAKlB,eALkB,EAMlB,UANkB,EAOlB,SAPkB,CAApB;;AAUA;;;;;;;AAOA,SAAS,GAAT,CAAa,IAAb,EAAmB;AACjB,MAAI,OAAO,aAAa,IAAb,CAAX;;AAEA,SAAO,KAAK,KAAK,KAAL,CAAW,KAAK,MAAL,KAAgB,KAAK,MAAhC,CAAL,CAAP;AACD;;AAED;;;;;;AAMA,SAAS,GAAT,GAAe;AACb,SAAO,CAAC,CAAC,KAAK,KAAL,CAAW,KAAK,MAAL,KAAgB,CAA3B,CAAT;AACD;;AAED;;;;;;AAMA,OAAO,OAAP,GAAiB,SAAS,QAAT,GAAoB;AACnC,MAAI,OAAO,EAAX;AAAA,MACI,GADJ;;AAGA,OAAK,QAAL,GAAgB,IAAI,UAAJ,CAAhB;AACA,OAAK,QAAL,GAAgB,IAAI,UAAJ,CAAhB;AACA,OAAK,QAAL,GAAgB,IAAI,UAAJ,CAAhB;;AAEA,MAAI,KAAJ,EAAW,KAAK,IAAL,GAAY,IAAI,MAAJ,CAAZ;AACX,MAAI,KAAJ,EAAW,KAAK,KAAL,GAAa,MAAK,IAAI,OAAJ,CAAlB;AACX,MAAI,KAAJ,EAAW,KAAK,IAAL,GAAY,MAAK,IAAI,MAAJ,CAAjB;AACX,MAAI,KAAJ,EAAW;AACT,SAAK,QAAL,GAAgB,IAAI,UAAJ,CAAhB;AACA,SAAK,QAAL,GAAgB,IAAI,UAAJ,CAAhB;AACD;;AAED,OAAK,GAAL,IAAY,YAAZ,EAA0B;AACxB,QAAI,GAAJ,IAAW,EAAX;AACD;;AAED,OAAK,GAAL,IAAY,IAAZ,EAAkB;AAChB,QAAI,GAAJ,IAAW,KAAK,GAAL,CAAX;AACD;;AAED,OAAK,IAAL,GAAY,IAAI,QAAJ,EAAZ;AACA,SAAO,IAAP;AACD,CA1BD","file":"fuzzy-compiled.js","sourcesContent":["'use strict';\n\nvar URL = require('./')\n  , url = new URL('');\n\n/**\n * A dictionary with all kind of different options that should generate a valid\n * and parse-able URL.\n *\n * @type {Object}\n * @api private\n */\nvar combinations = {};\n\ncombinations.protocol = [\n  'http:',\n  'https:',\n  'ws:',\n  'wss:',\n  'blob:'/*,\n  ''*/\n];\ncombinations.username = ['foo', 'bar'];\ncombinations.password = combinations.username;\ncombinations.hostname = [\n  'example.com',\n  'www.example.com',\n  'travel.travel',\n  'sub.sub.sub.domain.nl',\n  'xn--n3h.com',\n  'localhost',\n  '127.0.0.1',\n  '255.255.255.255'/*,\n  '3ffe:6a88:85a3:08d3:1319:8a2e:0370:7344',\n  '2001:2353::1428:57ab',\n  '2001:2353:0::0:1428:57ab',\n  '2001:2353:0:0:0:0:1428:57ab',\n  '2001:2353:0000:0000:0000::1428:57ab',\n  '2001:2353:0000:0000:0000:0000:1428:57ab',\n  '2001:2353:02de::0e13',\n  '2001:2353:2de::e13'*/\n];\ncombinations.port = ['8080', '844', '3340'];\ncombinations.pathname = [\n  '/',\n  '/bar',\n  '/bar/',\n  '/foo/bar',\n  '/foo.bar/foo',\n  '/fav.ico',\n  '/@3rd-Eden',\n  '/a/b/c/d/e/f/g/j/1/d/4/'\n];\ncombinations.query = ['foo=bar',\n  'foo[]=bar&foo[]=foo',\n  'email=foo@bar.travel',\n  'q='\n];\ncombinations.hash = [\n  'name',\n  'moo-with-longer-name',\n  '/what/about/slashes?querystring',\n  '?querystring',\n  '!/google/urls',\n  'use:foo@',\n  'http://'\n];\n\n/**\n * Get a random item from the given array.\n *\n * @param {String} name Name of the array we want to have a random item returned.\n * @returns {Mixed}\n * @api private\n */\nfunction get(name) {\n  var data = combinations[name];\n\n  return data[Math.floor(Math.random() * data.length)];\n}\n\n/**\n * Return a random boolean.\n *\n * @returns {Boolean}\n * @api private\n */\nfunction yep() {\n  return !!Math.round(Math.random() * 1);\n}\n\n/**\n * Generate the actual URL.\n *\n * @returns {Object} specification\n * @api public\n */\nmodule.exports = function generate() {\n  var spec = {}\n    , key;\n\n  spec.protocol = get('protocol');\n  spec.hostname = get('hostname');\n  spec.pathname = get('pathname');\n\n  if (yep()) spec.port = get('port');\n  if (yep()) spec.query = '?'+ get('query');\n  if (yep()) spec.hash = '#'+ get('hash');\n  if (yep()) {\n    spec.username = get('username');\n    spec.password = get('password');\n  }\n\n  for (key in combinations) {\n    url[key] = '';\n  }\n\n  for (key in spec) {\n    url[key] = spec[key];\n  }\n\n  spec.href = url.toString();\n  return spec;\n};\n"]}