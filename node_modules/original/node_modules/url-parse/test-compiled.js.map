{"version":3,"sources":["test.js"],"names":[],"mappings":"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","file":"test-compiled.js","sourcesContent":["describe('url-parse', function () {\n  'use strict';\n\n  var assume = require('assume')\n    , parse = require('./');\n\n  it('exposes parse as a function', function () {\n    assume(parse).is.a('function');\n  });\n\n  it('exposes the querystring module', function () {\n    assume(parse.qs).equals(require('querystringify'));\n  });\n\n  it('exposes the location function', function () {\n    assume(parse.location).equals(require('./lolcation'));\n  });\n\n  it('parses the query string into an object', function () {\n    var url = 'http://google.com/?foo=bar'\n      , data = parse(url, true);\n\n    assume(data.query).is.a('object');\n    assume(data.query.foo).equals('bar');\n\n    url = 'http://google.com/';\n    data = parse(url, true);\n\n    assume(data.query).is.a('object');\n    assume(data.query).is.empty();\n  });\n\n  it('does not add question mark to href if query string is empty', function () {\n    var url = 'http://google.com/'\n      , data = parse(url, true);\n\n    assume(data.href).equals(url);\n  });\n\n  it('allows a custom function as parser', function () {\n    var url = 'http://google.com/?foo=bar'\n      , data = parse(url, function () { return '1337'; });\n\n    assume(data.query).equals('1337');\n  });\n\n  it('allows a custom stringify function', function () {\n    var url = 'http://google.com/?foo=bar'\n      , data = parse(url, true)\n      , str;\n\n    str = data.toString(function () { return 'lolcakes'; });\n    assume(str).equals('http://google.com/?lolcakes');\n  });\n\n  it('allows a custom location object', function () {\n    var url = '/foo?foo=bar'\n      , data = parse(url, parse('http://google.com'));\n\n    assume(data.href).equals('http://google.com/foo?foo=bar');\n  });\n\n  it('is blob: location aware', function () {\n    var blob = {\n      'href': 'blob:https%3A//gist.github.com/3f272586-6dac-4e29-92d0-f674f2dde618',\n      'pathname': 'https%3A//gist.github.com/3f272586-6dac-4e29-92d0-f674f2dde618',\n      'origin': 'https://gist.github.com',\n      'protocol': 'blob:',\n      'hostname': '',\n      'search': '',\n      'hash': '',\n      'host': '',\n      'port': ''\n    };\n\n    var url = '/unshiftio/url-parse'\n      , data = parse(url, blob);\n\n    assume(data.href).equals('https://gist.github.com/unshiftio/url-parse');\n  });\n\n  it('converts protocol to lowercase', function () {\n    var url = 'HTTP://example.com';\n\n    assume(parse(url).protocol).equals('http:');\n  });\n\n  it('can parse complex urls multiple times without errors', function () {\n    var url = 'https://www.mozilla.org/en-US/firefox/34.0/whatsnew/?oldversion=33.1';\n\n    for (var i = 0; i < 100; i++) {\n      parse(url);\n    }\n  });\n\n  it('converts hostname to lowercase', function () {\n    var url = 'HTTP://fOo.eXaMPle.com';\n\n    assume(parse(url).hostname).equals('foo.example.com');\n  });\n\n  it('does not lowercase the path', function () {\n    var url = 'HTTP://X.COM/Y/Z';\n\n    assume(parse(url).pathname).equals('/Y/Z');\n  });\n\n  it('removes default port numbers', function () {\n    var url = 'http://example.com:80'\n      , parsed = parse(url);\n\n    assume(parsed.port).equals('');\n    assume(parsed.host).equals('example.com');\n    assume(parsed.hostname).equals('example.com');\n    assume(parsed.href).equals('http://example.com');\n  });\n\n  it('understands an / as pathname', function () {\n    var url = 'http://example.com:80/'\n      , parsed = parse(url);\n\n    assume(parsed.port).equals('');\n    assume(parsed.username).equals('');\n    assume(parsed.password).equals('');\n    assume(parsed.pathname).equals('/');\n    assume(parsed.host).equals('example.com');\n    assume(parsed.hostname).equals('example.com');\n    assume(parsed.href).equals('http://example.com/');\n  });\n\n  it('does not care about spaces', function () {\n    var url = 'http://x.com/path?that\\'s#all, folks'\n      , parsed = parse(url);\n\n    assume(parsed.port).equals('');\n    assume(parsed.username).equals('');\n    assume(parsed.password).equals('');\n    assume(parsed.pathname).equals('/path');\n    assume(parsed.hash).equal('#all, folks');\n    assume(parsed.query).equal('?that\\'s');\n    assume(parsed.host).equals('x.com');\n    assume(parsed.hostname).equals('x.com');\n  });\n\n  it('accepts + in the url', function () {\n    var url = 'http://x.y.com+a/b/c'\n      , parsed = parse(url);\n\n    assume(parsed.protocol).equals('http:');\n    assume(parsed.host).equals('x.y.com+a');\n    assume(parsed.hostname).equals('x.y.com+a');\n    assume(parsed.pathname).equals('/b/c');\n  });\n\n  describe('ip', function () {\n    // coap://\n    //\n    it('parses ipv6', function () {\n      var url = 'http://[1080:0:0:0:8:800:200C:417A]:61616/foo/bar?q=z'\n        , parsed = parse(url);\n\n      assume(parsed.port).equals('61616');\n      assume(parsed.query).equals('?q=z');\n      assume(parsed.protocol).equals('http:');\n      assume(parsed.hostname).equals('[1080:0:0:0:8:800:200c:417a]');\n      assume(parsed.pathname).equals('/foo/bar');\n      assume(parsed.href).equals('http://[1080:0:0:0:8:800:200c:417a]:61616/foo/bar?q=z');\n    });\n\n    it('parses ipv6 with auth', function () {\n      var url = 'http://user:password@[3ffe:2a00:100:7031::1]:8080'\n        , parsed = parse(url);\n\n      assume(parsed.username).equals('user');\n      assume(parsed.password).equals('password');\n      assume(parsed.host).equals('[3ffe:2a00:100:7031::1]:8080');\n      assume(parsed.hostname).equals('[3ffe:2a00:100:7031::1]');\n      assume(parsed.href).equals(url);\n    });\n\n    it('parses ipv4', function () {\n      var url = 'http://222.148.142.13:61616/foo/bar?q=z'\n        , parsed = parse(url);\n\n      assume(parsed.port).equals('61616');\n      assume(parsed.query).equals('?q=z');\n      assume(parsed.protocol).equals('http:');\n      assume(parsed.hostname).equals('222.148.142.13');\n      assume(parsed.pathname).equals('/foo/bar');\n      assume(parsed.href).equals(url);\n    });\n  });\n\n  describe('auth', function () {\n    it('does not lowercase the USER:PASS', function () {\n      var url = 'HTTP://USER:PASS@EXAMPLE.COM'\n        , parsed = parse(url);\n\n      assume(parsed.username).equals('USER');\n      assume(parsed.password).equals('PASS');\n      assume(parsed.protocol).equals('http:');\n      assume(parsed.host).equals('example.com');\n      assume(parsed.hostname).equals('example.com');\n    });\n\n    it('accepts @ in pathnames', function () {\n      var url = 'http://mt0.google.com/vt/lyrs=m@114&hl=en&src=api&x=2&y=2&z=3&s='\n        , parsed = parse(url);\n\n      assume(parsed.pathname).equals('/vt/lyrs=m@114&hl=en&src=api&x=2&y=2&z=3&s=');\n      assume(parsed.username).equals('');\n      assume(parsed.password).equals('');\n    });\n\n    it('does not require passwords for auth', function () {\n      var url = 'http://user@www.example.com/'\n        , parsed = parse(url);\n\n      assume(parsed.password).equals('');\n      assume(parsed.pathname).equals('/');\n      assume(parsed.username).equals('user');\n      assume(parsed.protocol).equals('http:');\n      assume(parsed.hostname).equals('www.example.com');\n      assume(parsed.href).equals(url);\n    });\n  });\n\n  it('accepts multiple ???', function () {\n    var url = 'http://mt0.google.com/vt/lyrs=m@114???&hl=en&src=api&x=2&y=2&z=3&s=';\n    assume(parse(url).query).equals('???&hl=en&src=api&x=2&y=2&z=3&s=');\n  });\n\n  it('accepts a string as source argument', function () {\n    var data = parse('/foo', 'http://sub.example.com/bar?foo=bar#hash');\n\n    assume(data.port).equals('');\n    assume(data.host).equals('sub.example.com');\n    assume(data.href).equals('http://sub.example.com/foo');\n  });\n\n  describe('inheritance', function () {\n    it('does not inherit port numbers for non relative urls', function () {\n      var data = parse('http://localhost', parse('http://sub.example.com:808/'));\n\n      assume(data.port).equals('');\n      assume(data.host).equals('localhost');\n      assume(data.href).equals('http://localhost');\n    });\n\n    it('does inherit port numbers from relative urls', function () {\n      var data = parse('/foo', parse('http://sub.example.com:808/'));\n\n      assume(data.port).equals('808');\n      assume(data.hostname).equals('sub.example.com');\n      assume(data.host).equals('sub.example.com:808');\n      assume(data.href).equals('http://sub.example.com:808/foo');\n    });\n\n    it('inherits protocol for relative protocols', function () {\n      var data = parse('//foo.com/foo', parse('http://sub.example.com:808/'));\n\n      assume(data.port).equals('');\n      assume(data.host).equals('foo.com');\n      assume(data.protocol).equals('http:');\n      assume(data.href).equals('http://foo.com/foo');\n    });\n\n    it('does not inherit pathnames from the source', function () {\n      var data = parse('http://localhost', parse('http://foo:bar@sub.example.com/bar?foo=bar#hash'));\n\n      assume(data.port).equals('');\n      assume(data.host).equals('localhost');\n      assume(data.href).equals('http://localhost');\n    });\n\n    it('does not inherit hashes and query strings from source object', function () {\n      var data = parse('/foo', parse('http://sub.example.com/bar?foo=bar#hash'));\n\n      assume(data.port).equals('');\n      assume(data.host).equals('sub.example.com');\n      assume(data.href).equals('http://sub.example.com/foo');\n    });\n\n    it('does not inherit auth from source object', function () {\n      var from = parse('http://foo:bar@sub.example.com')\n        , data = parse('/foo', from);\n\n      assume(data.port).equals('');\n      assume(data.username).equals('');\n      assume(data.password).equals('');\n      assume(data.host).equals('sub.example.com');\n      assume(data.href).equals('http://sub.example.com/foo');\n    });\n  });\n\n  describe('#set', function () {\n    it('correctly updates the host when setting port', function () {\n      var data = parse('http://google.com/foo');\n\n      assume(data.set('port', 8080)).equals(data);\n\n      assume(data.host).equals('google.com:8080');\n      assume(data.href).equals('http://google.com:8080/foo');\n    });\n\n    it('removes querystring and hash', function () {\n      var data = parse('https://thisanurl.com/?swag=yolo#representing');\n\n      data.set('query', '');\n      data.set('hash', '');\n\n      assume(data.href).equals('https://thisanurl.com/');\n    });\n\n    it('only sets port when its not default', function () {\n      var data = parse('http://google.com/foo');\n\n      assume(data.set('port', 80)).equals(data);\n\n      assume(data.host).equals('google.com');\n      assume(data.href).equals('http://google.com/foo');\n\n      assume(data.set('port', 443)).equals(data);\n      assume(data.host).equals('google.com:443');\n      assume(data.href).equals('http://google.com:443/foo');\n    });\n\n    it('updates query with object', function () {\n      var data = parse('http://google.com/?foo=bar');\n\n      assume(data.set('query', { bar: 'foo' })).equals(data);\n\n      assume(data.query.foo).equals(undefined);\n      assume(data.query.bar).equals('foo');\n\n      assume(data.href).equals('http://google.com/?bar=foo');\n    });\n\n    it('updates query with a string', function () {\n      var data = parse('http://google.com/?foo=bar');\n\n      assume(data.set('query', 'bar=foo')).equals(data);\n\n      assume(data.query.foo).equals(undefined);\n      assume(data.query.bar).equals('foo');\n\n      assume(data.href).equals('http://google.com/?bar=foo');\n\n      assume(data.set('query', '?baz=foo')).equals(data);\n\n      assume(data.query.bar).equals(undefined);\n      assume(data.query.baz).equals('foo');\n\n      assume(data.href).equals('http://google.com/?baz=foo');\n    });\n\n    it('updates the port when updating host', function () {\n      var data = parse('http://google.com/?foo=bar');\n\n      assume(data.set('host', 'yahoo.com:808')).equals(data);\n\n      assume(data.hostname).equals('yahoo.com');\n      assume(data.host).equals('yahoo.com:808');\n      assume(data.port).equals('808');\n\n      assume(data.href).equals('http://yahoo.com:808/?foo=bar');\n    });\n\n    it('updates the host when updating hostname', function () {\n      var data = parse('http://google.com:808/?foo=bar');\n\n      assume(data.set('hostname', 'yahoo.com')).equals(data);\n\n      assume(data.hostname).equals('yahoo.com');\n      assume(data.host).equals('yahoo.com:808');\n      assume(data.port).equals('808');\n\n      assume(data.href).equals('http://yahoo.com:808/?foo=bar');\n    });\n\n    it('updates other values', function () {\n      var data = parse('http://google.com/?foo=bar');\n\n      assume(data.set('protocol', 'https:')).equals(data);\n      assume(data.protocol).equals('https:');\n\n      assume(data.href).equals('https://google.com/?foo=bar');\n    });\n  });\n\n  describe('fuzzy', function () {\n    var fuzz = require('./fuzzy')\n      , times = 10;\n\n    for (var i = 0; i < times; i++) {\n      (function (spec) {\n        it('parses: '+ spec.href, function () {\n          var url = parse(spec.href)\n            , prop;\n\n          for (prop in spec) {\n            assume(url[prop]).equals(spec[prop]);\n          }\n        });\n      })(fuzz());\n    }\n  });\n});\n"]}