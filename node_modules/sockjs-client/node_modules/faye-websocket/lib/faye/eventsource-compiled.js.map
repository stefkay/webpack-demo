{"version":3,"sources":["eventsource.js"],"names":[],"mappings":"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","file":"eventsource-compiled.js","sourcesContent":["var Stream      = require('stream').Stream,\n    util        = require('util'),\n    driver      = require('websocket-driver'),\n    Headers     = require('websocket-driver/lib/websocket/driver/headers'),\n    API         = require('./websocket/api'),\n    EventTarget = require('./websocket/api/event_target'),\n    Event       = require('./websocket/api/event');\n\nvar EventSource = function(request, response, options) {\n  this.writable = true;\n  options = options || {};\n\n  this._stream = response.socket;\n  this._ping   = options.ping  || this.DEFAULT_PING;\n  this._retry  = options.retry || this.DEFAULT_RETRY;\n\n  var scheme       = driver.isSecureRequest(request) ? 'https:' : 'http:';\n  this.url         = scheme + '//' + request.headers.host + request.url;\n  this.lastEventId = request.headers['last-event-id'] || '';\n  this.readyState  = API.CONNECTING;\n\n  var headers = new Headers(),\n      self    = this;\n\n  if (options.headers) {\n    for (var key in options.headers) headers.set(key, options.headers[key]);\n  }\n\n  if (!this._stream || !this._stream.writable) return;\n  process.nextTick(function() { self._open() });\n\n  this._stream.setTimeout(0);\n  this._stream.setNoDelay(true);\n\n  var handshake = 'HTTP/1.1 200 OK\\r\\n' +\n                  'Content-Type: text/event-stream\\r\\n' +\n                  'Cache-Control: no-cache, no-store\\r\\n' +\n                  'Connection: close\\r\\n' +\n                  headers.toString() +\n                  '\\r\\n' +\n                  'retry: ' + Math.floor(this._retry * 1000) + '\\r\\n\\r\\n';\n\n  this._write(handshake);\n\n  this._stream.on('drain', function() { self.emit('drain') });\n\n  if (this._ping)\n    this._pingTimer = setInterval(function() { self.ping() }, this._ping * 1000);\n\n  ['error', 'end'].forEach(function(event) {\n    self._stream.on(event, function() { self.close() });\n  });\n};\nutil.inherits(EventSource, Stream);\n\nEventSource.isEventSource = function(request) {\n  if (request.method !== 'GET') return false;\n  var accept = (request.headers.accept || '').split(/\\s*,\\s*/);\n  return accept.indexOf('text/event-stream') >= 0;\n};\n\nvar instance = {\n  DEFAULT_PING:   10,\n  DEFAULT_RETRY:  5,\n\n  _write: function(chunk) {\n    if (!this.writable) return false;\n    try {\n      return this._stream.write(chunk, 'utf8');\n    } catch (e) {\n      return false;\n    }\n  },\n\n  _open: function() {\n    if (this.readyState !== API.CONNECTING) return;\n\n    this.readyState = API.OPEN;\n\n    var event = new Event('open');\n    event.initEvent('open', false, false);\n    this.dispatchEvent(event);\n  },\n\n  write: function(message) {\n    return this.send(message);\n  },\n\n  end: function(message) {\n    if (message !== undefined) this.write(message);\n    this.close();\n  },\n\n  send: function(message, options) {\n    if (this.readyState > API.OPEN) return false;\n\n    message = String(message).replace(/(\\r\\n|\\r|\\n)/g, '$1data: ');\n    options = options || {};\n\n    var frame = '';\n    if (options.event) frame += 'event: ' + options.event + '\\r\\n';\n    if (options.id)    frame += 'id: '    + options.id    + '\\r\\n';\n    frame += 'data: ' + message + '\\r\\n\\r\\n';\n\n    return this._write(frame);\n  },\n\n  ping: function() {\n    return this._write(':\\r\\n\\r\\n');\n  },\n\n  close: function() {\n    if (this.readyState > API.OPEN) return false;\n\n    this.readyState = API.CLOSED;\n    this.writable = false;\n    if (this._pingTimer) clearInterval(this._pingTimer);\n    if (this._stream) this._stream.end();\n\n    var event = new Event('close');\n    event.initEvent('close', false, false);\n    this.dispatchEvent(event);\n\n    return true;\n  }\n};\n\nfor (var method in instance) EventSource.prototype[method] = instance[method];\nfor (var key in EventTarget) EventSource.prototype[key] = EventTarget[key];\n\nmodule.exports = EventSource;\n"]}