{"version":3,"sources":["info-receiver.js"],"names":[],"mappings":"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","file":"info-receiver-compiled.js","sourcesContent":["'use strict';\n\nvar EventEmitter = require('events').EventEmitter\n  , inherits = require('inherits')\n  , urlUtils = require('./utils/url')\n  , XDR = require('./transport/sender/xdr')\n  , XHRCors = require('./transport/sender/xhr-cors')\n  , XHRLocal = require('./transport/sender/xhr-local')\n  , XHRFake = require('./transport/sender/xhr-fake')\n  , InfoIframe = require('./info-iframe')\n  , InfoAjax = require('./info-ajax')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:info-receiver');\n}\n\nfunction InfoReceiver(baseUrl, urlInfo) {\n  debug(baseUrl);\n  var self = this;\n  EventEmitter.call(this);\n\n  setTimeout(function() {\n    self.doXhr(baseUrl, urlInfo);\n  }, 0);\n}\n\ninherits(InfoReceiver, EventEmitter);\n\n// TODO this is currently ignoring the list of available transports and the whitelist\n\nInfoReceiver._getReceiver = function(baseUrl, url, urlInfo) {\n  // determine method of CORS support (if needed)\n  if (urlInfo.sameOrigin) {\n    return new InfoAjax(url, XHRLocal);\n  }\n  if (XHRCors.enabled) {\n    return new InfoAjax(url, XHRCors);\n  }\n  if (XDR.enabled && urlInfo.sameScheme) {\n    return new InfoAjax(url, XDR);\n  }\n  if (InfoIframe.enabled()) {\n    return new InfoIframe(baseUrl, url);\n  }\n  return new InfoAjax(url, XHRFake);\n};\n\nInfoReceiver.prototype.doXhr = function(baseUrl, urlInfo) {\n  var self = this\n    , url = urlUtils.addPath(baseUrl, '/info')\n    ;\n  debug('doXhr', url);\n\n  this.xo = InfoReceiver._getReceiver(baseUrl, url, urlInfo);\n\n  this.timeoutRef = setTimeout(function() {\n    debug('timeout');\n    self._cleanup(false);\n    self.emit('finish');\n  }, InfoReceiver.timeout);\n\n  this.xo.once('finish', function(info, rtt) {\n    debug('finish', info, rtt);\n    self._cleanup(true);\n    self.emit('finish', info, rtt);\n  });\n};\n\nInfoReceiver.prototype._cleanup = function(wasClean) {\n  debug('_cleanup');\n  clearTimeout(this.timeoutRef);\n  this.timeoutRef = null;\n  if (!wasClean && this.xo) {\n    this.xo.close();\n  }\n  this.xo = null;\n};\n\nInfoReceiver.prototype.close = function() {\n  debug('close');\n  this.removeAllListeners();\n  this._cleanup(false);\n};\n\nInfoReceiver.timeout = 8000;\n\nmodule.exports = InfoReceiver;\n"]}