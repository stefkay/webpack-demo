{"version":3,"sources":["iframe-bootstrap.js"],"names":[],"mappings":"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","file":"iframe-bootstrap-compiled.js","sourcesContent":["'use strict';\n\nvar urlUtils = require('./utils/url')\n  , eventUtils = require('./utils/event')\n  , JSON3 = require('json3')\n  , FacadeJS = require('./facade')\n  , InfoIframeReceiver = require('./info-iframe-receiver')\n  , iframeUtils = require('./utils/iframe')\n  , loc = require('./location')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:iframe-bootstrap');\n}\n\nmodule.exports = function(SockJS, availableTransports) {\n  var transportMap = {};\n  availableTransports.forEach(function(at) {\n    if (at.facadeTransport) {\n      transportMap[at.facadeTransport.transportName] = at.facadeTransport;\n    }\n  });\n\n  // hard-coded for the info iframe\n  // TODO see if we can make this more dynamic\n  transportMap[InfoIframeReceiver.transportName] = InfoIframeReceiver;\n  var parentOrigin;\n\n  /* eslint-disable camelcase */\n  SockJS.bootstrap_iframe = function() {\n    /* eslint-enable camelcase */\n    var facade;\n    iframeUtils.currentWindowId = loc.hash.slice(1);\n    var onMessage = function(e) {\n      if (e.source !== parent) {\n        return;\n      }\n      if (typeof parentOrigin === 'undefined') {\n        parentOrigin = e.origin;\n      }\n      if (e.origin !== parentOrigin) {\n        return;\n      }\n\n      var iframeMessage;\n      try {\n        iframeMessage = JSON3.parse(e.data);\n      } catch (ignored) {\n        debug('bad json', e.data);\n        return;\n      }\n\n      if (iframeMessage.windowId !== iframeUtils.currentWindowId) {\n        return;\n      }\n      switch (iframeMessage.type) {\n      case 's':\n        var p;\n        try {\n          p = JSON3.parse(iframeMessage.data);\n        } catch (ignored) {\n          debug('bad json', iframeMessage.data);\n          break;\n        }\n        var version = p[0];\n        var transport = p[1];\n        var transUrl = p[2];\n        var baseUrl = p[3];\n        debug(version, transport, transUrl, baseUrl);\n        // change this to semver logic\n        if (version !== SockJS.version) {\n          throw new Error('Incompatible SockJS! Main site uses:' +\n                    ' \"' + version + '\", the iframe:' +\n                    ' \"' + SockJS.version + '\".');\n        }\n\n        if (!urlUtils.isOriginEqual(transUrl, loc.href) ||\n            !urlUtils.isOriginEqual(baseUrl, loc.href)) {\n          throw new Error('Can\\'t connect to different domain from within an ' +\n                    'iframe. (' + loc.href + ', ' + transUrl + ', ' + baseUrl + ')');\n        }\n        facade = new FacadeJS(new transportMap[transport](transUrl, baseUrl));\n        break;\n      case 'm':\n        facade._send(iframeMessage.data);\n        break;\n      case 'c':\n        if (facade) {\n          facade._close();\n        }\n        facade = null;\n        break;\n      }\n    };\n\n    eventUtils.attachEvent('message', onMessage);\n\n    // Start\n    iframeUtils.postMessage('s');\n  };\n};\n"]}