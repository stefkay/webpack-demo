{"version":3,"sources":["url.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,MAAM,QAAQ,WAAR,CAAV;;AAEA,IAAI,QAAQ,YAAW,CAAE,CAAzB;AACA,IAAI,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAQ,QAAQ,OAAR,EAAiB,yBAAjB,CAAR;AACD;;AAED,OAAO,OAAP,GAAiB;AACf,aAAW,UAAS,GAAT,EAAc;AACvB,QAAI,CAAC,GAAL,EAAU;AACR,aAAO,IAAP;AACD;;AAED,QAAI,IAAI,IAAI,GAAJ,CAAQ,GAAR,CAAR;AACA,QAAI,EAAE,QAAF,KAAe,OAAnB,EAA4B;AAC1B,aAAO,IAAP;AACD;;AAED,QAAI,OAAO,EAAE,IAAb;AACA,QAAI,CAAC,IAAL,EAAW;AACT,aAAQ,EAAE,QAAF,KAAe,QAAhB,GAA4B,KAA5B,GAAoC,IAA3C;AACD;;AAED,WAAO,EAAE,QAAF,GAAa,IAAb,GAAoB,EAAE,QAAtB,GAAiC,GAAjC,GAAuC,IAA9C;AACD,GAjBc;;AAmBf,iBAAe,UAAS,CAAT,EAAY,CAAZ,EAAe;AAC5B,QAAI,MAAM,KAAK,SAAL,CAAe,CAAf,MAAsB,KAAK,SAAL,CAAe,CAAf,CAAhC;AACA,UAAM,MAAN,EAAc,CAAd,EAAiB,CAAjB,EAAoB,GAApB;AACA,WAAO,GAAP;AACD,GAvBc;;AAyBf,iBAAe,UAAS,CAAT,EAAY,CAAZ,EAAe;AAC5B,WAAQ,EAAE,KAAF,CAAQ,GAAR,EAAa,CAAb,MAAoB,EAAE,KAAF,CAAQ,GAAR,EAAa,CAAb,CAA5B;AACD,GA3Bc;;AA6Bf,WAAS,UAAU,GAAV,EAAe,IAAf,EAAqB;AAC5B,QAAI,KAAK,IAAI,KAAJ,CAAU,GAAV,CAAT;AACA,WAAO,GAAG,CAAH,IAAQ,IAAR,IAAgB,GAAG,CAAH,IAAQ,MAAM,GAAG,CAAH,CAAd,GAAsB,EAAtC,CAAP;AACD,GAhCc;;AAkCf,YAAU,UAAU,GAAV,EAAe,CAAf,EAAkB;AAC1B,WAAO,OAAO,IAAI,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAAtB,GAA2B,MAAM,CAAjC,GAAuC,MAAM,CAApD,CAAP;AACD;AApCc,CAAjB","file":"url-compiled.js","sourcesContent":["'use strict';\n\nvar URL = require('url-parse');\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:utils:url');\n}\n\nmodule.exports = {\n  getOrigin: function(url) {\n    if (!url) {\n      return null;\n    }\n\n    var p = new URL(url);\n    if (p.protocol === 'file:') {\n      return null;\n    }\n\n    var port = p.port;\n    if (!port) {\n      port = (p.protocol === 'https:') ? '443' : '80';\n    }\n\n    return p.protocol + '//' + p.hostname + ':' + port;\n  }\n\n, isOriginEqual: function(a, b) {\n    var res = this.getOrigin(a) === this.getOrigin(b);\n    debug('same', a, b, res);\n    return res;\n  }\n\n, isSchemeEqual: function(a, b) {\n    return (a.split(':')[0] === b.split(':')[0]);\n  }\n\n, addPath: function (url, path) {\n    var qs = url.split('?');\n    return qs[0] + path + (qs[1] ? '?' + qs[1] : '');\n  }\n\n, addQuery: function (url, q) {\n    return url + (url.indexOf('?') === -1 ? ('?' + q) : ('&' + q));\n  }\n};\n"]}