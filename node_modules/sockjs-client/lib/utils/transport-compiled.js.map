{"version":3,"sources":["transport.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,QAAQ,YAAW,CAAE,CAAzB;AACA,IAAI,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAQ,QAAQ,OAAR,EAAiB,+BAAjB,CAAR;AACD;;AAED,OAAO,OAAP,GAAiB,UAAS,mBAAT,EAA8B;AAC7C,SAAO;AACL,qBAAiB,UAAS,mBAAT,EAA8B,IAA9B,EAAoC;AACnD,UAAI,aAAa;AACf,cAAM,EADS;AAEf,gBAAQ;AAFO,OAAjB;AAIA,UAAI,CAAC,mBAAL,EAA0B;AACxB,8BAAsB,EAAtB;AACD,OAFD,MAEO,IAAI,OAAO,mBAAP,KAA+B,QAAnC,EAA6C;AAClD,8BAAsB,CAAC,mBAAD,CAAtB;AACD;;AAED,0BAAoB,OAApB,CAA4B,UAAS,KAAT,EAAgB;AAC1C,YAAI,CAAC,KAAL,EAAY;AACV;AACD;;AAED,YAAI,MAAM,aAAN,KAAwB,WAAxB,IAAuC,KAAK,SAAL,KAAmB,KAA9D,EAAqE;AACnE,gBAAM,sBAAN,EAA8B,WAA9B;AACA;AACD;;AAED,YAAI,oBAAoB,MAApB,IACA,oBAAoB,OAApB,CAA4B,MAAM,aAAlC,MAAqD,CAAC,CAD1D,EAC6D;AAC3D,gBAAM,kBAAN,EAA0B,MAAM,aAAhC;AACA;AACD;;AAED,YAAI,MAAM,OAAN,CAAc,IAAd,CAAJ,EAAyB;AACvB,gBAAM,SAAN,EAAiB,MAAM,aAAvB;AACA,qBAAW,IAAX,CAAgB,IAAhB,CAAqB,KAArB;AACA,cAAI,MAAM,eAAV,EAA2B;AACzB,uBAAW,MAAX,CAAkB,IAAlB,CAAuB,MAAM,eAA7B;AACD;AACF,SAND,MAMO;AACL,gBAAM,UAAN,EAAkB,MAAM,aAAxB;AACD;AACF,OAzBD;AA0BA,aAAO,UAAP;AACD;AAvCI,GAAP;AAyCD,CA1CD","file":"transport-compiled.js","sourcesContent":["'use strict';\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:utils:transport');\n}\n\nmodule.exports = function(availableTransports) {\n  return {\n    filterToEnabled: function(transportsWhitelist, info) {\n      var transports = {\n        main: []\n      , facade: []\n      };\n      if (!transportsWhitelist) {\n        transportsWhitelist = [];\n      } else if (typeof transportsWhitelist === 'string') {\n        transportsWhitelist = [transportsWhitelist];\n      }\n\n      availableTransports.forEach(function(trans) {\n        if (!trans) {\n          return;\n        }\n\n        if (trans.transportName === 'websocket' && info.websocket === false) {\n          debug('disabled from server', 'websocket');\n          return;\n        }\n\n        if (transportsWhitelist.length &&\n            transportsWhitelist.indexOf(trans.transportName) === -1) {\n          debug('not in whitelist', trans.transportName);\n          return;\n        }\n\n        if (trans.enabled(info)) {\n          debug('enabled', trans.transportName);\n          transports.main.push(trans);\n          if (trans.facadeTransport) {\n            transports.facade.push(trans.facadeTransport);\n          }\n        } else {\n          debug('disabled', trans.transportName);\n        }\n      });\n      return transports;\n    }\n  };\n};\n"]}