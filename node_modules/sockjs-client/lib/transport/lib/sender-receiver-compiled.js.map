{"version":3,"sources":["sender-receiver.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,WAAW,QAAQ,UAAR,CAAf;AAAA,IACI,WAAW,QAAQ,iBAAR,CADf;AAAA,IAEI,iBAAiB,QAAQ,mBAAR,CAFrB;AAAA,IAGI,UAAU,QAAQ,WAAR,CAHd;;AAMA,IAAI,QAAQ,YAAW,CAAE,CAAzB;AACA,IAAI,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAQ,QAAQ,OAAR,EAAiB,+BAAjB,CAAR;AACD;;AAED,SAAS,cAAT,CAAwB,QAAxB,EAAkC,SAAlC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,EAA+E;AAC7E,MAAI,UAAU,SAAS,OAAT,CAAiB,QAAjB,EAA2B,SAA3B,CAAd;AACA,QAAM,OAAN;AACA,MAAI,OAAO,IAAX;AACA,iBAAe,IAAf,CAAoB,IAApB,EAA0B,QAA1B,EAAoC,UAApC;;AAEA,OAAK,IAAL,GAAY,IAAI,OAAJ,CAAY,QAAZ,EAAsB,OAAtB,EAA+B,UAA/B,CAAZ;AACA,OAAK,IAAL,CAAU,EAAV,CAAa,SAAb,EAAwB,UAAS,GAAT,EAAc;AACpC,UAAM,cAAN,EAAsB,GAAtB;AACA,SAAK,IAAL,CAAU,SAAV,EAAqB,GAArB;AACD,GAHD;AAIA,OAAK,IAAL,CAAU,IAAV,CAAe,OAAf,EAAwB,UAAS,IAAT,EAAe,MAAf,EAAuB;AAC7C,UAAM,YAAN,EAAoB,IAApB,EAA0B,MAA1B;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,IAAL,CAAU,OAAV,EAAmB,IAAnB,EAAyB,MAAzB;AACA,SAAK,KAAL;AACD,GALD;AAMD;;AAED,SAAS,cAAT,EAAyB,cAAzB;;AAEA,eAAe,SAAf,CAAyB,KAAzB,GAAiC,YAAW;AAC1C,QAAM,OAAN;AACA,OAAK,kBAAL;AACA,MAAI,KAAK,IAAT,EAAe;AACb,SAAK,IAAL,CAAU,KAAV;AACA,SAAK,IAAL,GAAY,IAAZ;AACD;AACD,OAAK,IAAL;AACD,CARD;;AAUA,OAAO,OAAP,GAAiB,cAAjB","file":"sender-receiver-compiled.js","sourcesContent":["'use strict';\n\nvar inherits = require('inherits')\n  , urlUtils = require('../../utils/url')\n  , BufferedSender = require('./buffered-sender')\n  , Polling = require('./polling')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:sender-receiver');\n}\n\nfunction SenderReceiver(transUrl, urlSuffix, senderFunc, Receiver, AjaxObject) {\n  var pollUrl = urlUtils.addPath(transUrl, urlSuffix);\n  debug(pollUrl);\n  var self = this;\n  BufferedSender.call(this, transUrl, senderFunc);\n\n  this.poll = new Polling(Receiver, pollUrl, AjaxObject);\n  this.poll.on('message', function(msg) {\n    debug('poll message', msg);\n    self.emit('message', msg);\n  });\n  this.poll.once('close', function(code, reason) {\n    debug('poll close', code, reason);\n    self.poll = null;\n    self.emit('close', code, reason);\n    self.close();\n  });\n}\n\ninherits(SenderReceiver, BufferedSender);\n\nSenderReceiver.prototype.close = function() {\n  debug('close');\n  this.removeAllListeners();\n  if (this.poll) {\n    this.poll.abort();\n    this.poll = null;\n  }\n  this.stop();\n};\n\nmodule.exports = SenderReceiver;\n"]}