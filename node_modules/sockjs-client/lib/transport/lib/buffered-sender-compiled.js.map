{"version":3,"sources":["buffered-sender.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,WAAW,QAAQ,UAAR,CAAf;AAAA,IACI,eAAe,QAAQ,QAAR,EAAkB,YADrC;;AAIA,IAAI,QAAQ,YAAW,CAAE,CAAzB;AACA,IAAI,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAQ,QAAQ,OAAR,EAAiB,+BAAjB,CAAR;AACD;;AAED,SAAS,cAAT,CAAwB,GAAxB,EAA6B,MAA7B,EAAqC;AACnC,QAAM,GAAN;AACA,eAAa,IAAb,CAAkB,IAAlB;AACA,OAAK,UAAL,GAAkB,EAAlB;AACA,OAAK,MAAL,GAAc,MAAd;AACA,OAAK,GAAL,GAAW,GAAX;AACD;;AAED,SAAS,cAAT,EAAyB,YAAzB;;AAEA,eAAe,SAAf,CAAyB,IAAzB,GAAgC,UAAS,OAAT,EAAkB;AAChD,QAAM,MAAN,EAAc,OAAd;AACA,OAAK,UAAL,CAAgB,IAAhB,CAAqB,OAArB;AACA,MAAI,CAAC,KAAK,QAAV,EAAoB;AAClB,SAAK,YAAL;AACD;AACF,CAND;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAf,CAAyB,gBAAzB,GAA4C,YAAW;AACrD,QAAM,kBAAN;AACA,MAAI,OAAO,IAAX;AACA,MAAI,IAAJ;AACA,OAAK,QAAL,GAAgB,YAAW;AACzB,UAAM,UAAN;AACA,SAAK,QAAL,GAAgB,IAAhB;AACA,iBAAa,IAAb;AACD,GAJD;AAKA,SAAO,WAAW,YAAW;AAC3B,UAAM,SAAN;AACA,SAAK,QAAL,GAAgB,IAAhB;AACA,SAAK,YAAL;AACD,GAJM,EAIJ,EAJI,CAAP;AAKD,CAdD;;AAgBA,eAAe,SAAf,CAAyB,YAAzB,GAAwC,YAAW;AACjD,QAAM,cAAN,EAAsB,KAAK,UAAL,CAAgB,MAAtC;AACA,MAAI,OAAO,IAAX;AACA,MAAI,KAAK,UAAL,CAAgB,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B,QAAI,UAAU,MAAM,KAAK,UAAL,CAAgB,IAAhB,CAAqB,GAArB,CAAN,GAAkC,GAAhD;AACA,SAAK,QAAL,GAAgB,KAAK,MAAL,CAAY,KAAK,GAAjB,EAAsB,OAAtB,EAA+B,UAAS,GAAT,EAAc;AAC3D,WAAK,QAAL,GAAgB,IAAhB;AACA,UAAI,GAAJ,EAAS;AACP,cAAM,OAAN,EAAe,GAAf;AACA,aAAK,IAAL,CAAU,OAAV,EAAmB,IAAI,IAAJ,IAAY,IAA/B,EAAqC,oBAAoB,GAAzD;AACA,aAAK,QAAL;AACD,OAJD,MAIO;AACL,aAAK,gBAAL;AACD;AACF,KATe,CAAhB;AAUA,SAAK,UAAL,GAAkB,EAAlB;AACD;AACF,CAjBD;;AAmBA,eAAe,SAAf,CAAyB,QAAzB,GAAoC,YAAW;AAC7C,QAAM,UAAN;AACA,OAAK,kBAAL;AACD,CAHD;;AAKA,eAAe,SAAf,CAAyB,IAAzB,GAAgC,YAAW;AACzC,QAAM,MAAN;AACA,OAAK,QAAL;AACA,MAAI,KAAK,QAAT,EAAmB;AACjB,SAAK,QAAL;AACA,SAAK,QAAL,GAAgB,IAAhB;AACD;AACF,CAPD;;AASA,OAAO,OAAP,GAAiB,cAAjB","file":"buffered-sender-compiled.js","sourcesContent":["'use strict';\n\nvar inherits = require('inherits')\n  , EventEmitter = require('events').EventEmitter\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:buffered-sender');\n}\n\nfunction BufferedSender(url, sender) {\n  debug(url);\n  EventEmitter.call(this);\n  this.sendBuffer = [];\n  this.sender = sender;\n  this.url = url;\n}\n\ninherits(BufferedSender, EventEmitter);\n\nBufferedSender.prototype.send = function(message) {\n  debug('send', message);\n  this.sendBuffer.push(message);\n  if (!this.sendStop) {\n    this.sendSchedule();\n  }\n};\n\n// For polling transports in a situation when in the message callback,\n// new message is being send. If the sending connection was started\n// before receiving one, it is possible to saturate the network and\n// timeout due to the lack of receiving socket. To avoid that we delay\n// sending messages by some small time, in order to let receiving\n// connection be started beforehand. This is only a halfmeasure and\n// does not fix the big problem, but it does make the tests go more\n// stable on slow networks.\nBufferedSender.prototype.sendScheduleWait = function() {\n  debug('sendScheduleWait');\n  var self = this;\n  var tref;\n  this.sendStop = function() {\n    debug('sendStop');\n    self.sendStop = null;\n    clearTimeout(tref);\n  };\n  tref = setTimeout(function() {\n    debug('timeout');\n    self.sendStop = null;\n    self.sendSchedule();\n  }, 25);\n};\n\nBufferedSender.prototype.sendSchedule = function() {\n  debug('sendSchedule', this.sendBuffer.length);\n  var self = this;\n  if (this.sendBuffer.length > 0) {\n    var payload = '[' + this.sendBuffer.join(',') + ']';\n    this.sendStop = this.sender(this.url, payload, function(err) {\n      self.sendStop = null;\n      if (err) {\n        debug('error', err);\n        self.emit('close', err.code || 1006, 'Sending error: ' + err);\n        self._cleanup();\n      } else {\n        self.sendScheduleWait();\n      }\n    });\n    this.sendBuffer = [];\n  }\n};\n\nBufferedSender.prototype._cleanup = function() {\n  debug('_cleanup');\n  this.removeAllListeners();\n};\n\nBufferedSender.prototype.stop = function() {\n  debug('stop');\n  this._cleanup();\n  if (this.sendStop) {\n    this.sendStop();\n    this.sendStop = null;\n  }\n};\n\nmodule.exports = BufferedSender;\n"]}