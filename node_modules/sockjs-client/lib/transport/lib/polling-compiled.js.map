{"version":3,"sources":["polling.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,WAAW,QAAQ,UAAR,CAAf;AAAA,IACI,eAAe,QAAQ,QAAR,EAAkB,YADrC;;AAIA,IAAI,QAAQ,YAAW,CAAE,CAAzB;AACA,IAAI,QAAQ,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAQ,QAAQ,OAAR,EAAiB,uBAAjB,CAAR;AACD;;AAED,SAAS,OAAT,CAAiB,QAAjB,EAA2B,UAA3B,EAAuC,UAAvC,EAAmD;AACjD,QAAM,UAAN;AACA,eAAa,IAAb,CAAkB,IAAlB;AACA,OAAK,QAAL,GAAgB,QAAhB;AACA,OAAK,UAAL,GAAkB,UAAlB;AACA,OAAK,UAAL,GAAkB,UAAlB;AACA,OAAK,iBAAL;AACD;;AAED,SAAS,OAAT,EAAkB,YAAlB;;AAEA,QAAQ,SAAR,CAAkB,iBAAlB,GAAsC,YAAW;AAC/C,QAAM,mBAAN;AACA,MAAI,OAAO,IAAX;AACA,MAAI,OAAO,KAAK,IAAL,GAAY,IAAI,KAAK,QAAT,CAAkB,KAAK,UAAvB,EAAmC,KAAK,UAAxC,CAAvB;;AAEA,OAAK,EAAL,CAAQ,SAAR,EAAmB,UAAS,GAAT,EAAc;AAC/B,UAAM,SAAN,EAAiB,GAAjB;AACA,SAAK,IAAL,CAAU,SAAV,EAAqB,GAArB;AACD,GAHD;;AAKA,OAAK,IAAL,CAAU,OAAV,EAAmB,UAAS,IAAT,EAAe,MAAf,EAAuB;AACxC,UAAM,OAAN,EAAe,IAAf,EAAqB,MAArB,EAA6B,KAAK,aAAlC;AACA,SAAK,IAAL,GAAY,OAAO,IAAnB;;AAEA,QAAI,CAAC,KAAK,aAAV,EAAyB;AACvB,UAAI,WAAW,SAAf,EAA0B;AACxB,aAAK,iBAAL;AACD,OAFD,MAEO;AACL,aAAK,IAAL,CAAU,OAAV,EAAmB,QAAQ,IAA3B,EAAiC,MAAjC;AACA,aAAK,kBAAL;AACD;AACF;AACF,GAZD;AAaD,CAvBD;;AAyBA,QAAQ,SAAR,CAAkB,KAAlB,GAA0B,YAAW;AACnC,QAAM,OAAN;AACA,OAAK,kBAAL;AACA,OAAK,aAAL,GAAqB,IAArB;AACA,MAAI,KAAK,IAAT,EAAe;AACb,SAAK,IAAL,CAAU,KAAV;AACD;AACF,CAPD;;AASA,OAAO,OAAP,GAAiB,OAAjB","file":"polling-compiled.js","sourcesContent":["'use strict';\n\nvar inherits = require('inherits')\n  , EventEmitter = require('events').EventEmitter\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:polling');\n}\n\nfunction Polling(Receiver, receiveUrl, AjaxObject) {\n  debug(receiveUrl);\n  EventEmitter.call(this);\n  this.Receiver = Receiver;\n  this.receiveUrl = receiveUrl;\n  this.AjaxObject = AjaxObject;\n  this._scheduleReceiver();\n}\n\ninherits(Polling, EventEmitter);\n\nPolling.prototype._scheduleReceiver = function() {\n  debug('_scheduleReceiver');\n  var self = this;\n  var poll = this.poll = new this.Receiver(this.receiveUrl, this.AjaxObject);\n\n  poll.on('message', function(msg) {\n    debug('message', msg);\n    self.emit('message', msg);\n  });\n\n  poll.once('close', function(code, reason) {\n    debug('close', code, reason, self.pollIsClosing);\n    self.poll = poll = null;\n\n    if (!self.pollIsClosing) {\n      if (reason === 'network') {\n        self._scheduleReceiver();\n      } else {\n        self.emit('close', code || 1006, reason);\n        self.removeAllListeners();\n      }\n    }\n  });\n};\n\nPolling.prototype.abort = function() {\n  debug('abort');\n  this.removeAllListeners();\n  this.pollIsClosing = true;\n  if (this.poll) {\n    this.poll.abort();\n  }\n};\n\nmodule.exports = Polling;\n"]}