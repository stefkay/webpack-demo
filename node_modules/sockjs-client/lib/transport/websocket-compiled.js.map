{"version":3,"sources":["websocket.js"],"names":[],"mappings":"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","file":"websocket-compiled.js","sourcesContent":["'use strict';\n\nvar utils = require('../utils/event')\n  , urlUtils = require('../utils/url')\n  , inherits = require('inherits')\n  , EventEmitter = require('events').EventEmitter\n  , WebsocketDriver = require('./driver/websocket')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:websocket');\n}\n\nfunction WebSocketTransport(transUrl, ignore, options) {\n  if (!WebSocketTransport.enabled()) {\n    throw new Error('Transport created when disabled');\n  }\n\n  EventEmitter.call(this);\n  debug('constructor', transUrl);\n\n  var self = this;\n  var url = urlUtils.addPath(transUrl, '/websocket');\n  if (url.slice(0, 5) === 'https') {\n    url = 'wss' + url.slice(5);\n  } else {\n    url = 'ws' + url.slice(4);\n  }\n  this.url = url;\n\n  this.ws = new WebsocketDriver(this.url, [], options);\n  this.ws.onmessage = function(e) {\n    debug('message event', e.data);\n    self.emit('message', e.data);\n  };\n  // Firefox has an interesting bug. If a websocket connection is\n  // created after onunload, it stays alive even when user\n  // navigates away from the page. In such situation let's lie -\n  // let's not open the ws connection at all. See:\n  // https://github.com/sockjs/sockjs-client/issues/28\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=696085\n  this.unloadRef = utils.unloadAdd(function() {\n    debug('unload');\n    self.ws.close();\n  });\n  this.ws.onclose = function(e) {\n    debug('close event', e.code, e.reason);\n    self.emit('close', e.code, e.reason);\n    self._cleanup();\n  };\n  this.ws.onerror = function(e) {\n    debug('error event', e);\n    self.emit('close', 1006, 'WebSocket connection broken');\n    self._cleanup();\n  };\n}\n\ninherits(WebSocketTransport, EventEmitter);\n\nWebSocketTransport.prototype.send = function(data) {\n  var msg = '[' + data + ']';\n  debug('send', msg);\n  this.ws.send(msg);\n};\n\nWebSocketTransport.prototype.close = function() {\n  debug('close');\n  if (this.ws) {\n    this.ws.close();\n  }\n  this._cleanup();\n};\n\nWebSocketTransport.prototype._cleanup = function() {\n  debug('_cleanup');\n  var ws = this.ws;\n  if (ws) {\n    ws.onmessage = ws.onclose = ws.onerror = null;\n  }\n  utils.unloadDel(this.unloadRef);\n  this.unloadRef = this.ws = null;\n  this.removeAllListeners();\n};\n\nWebSocketTransport.enabled = function() {\n  debug('enabled');\n  return !!WebsocketDriver;\n};\nWebSocketTransport.transportName = 'websocket';\n\n// In theory, ws should require 1 round trip. But in chrome, this is\n// not very stable over SSL. Most likely a ws connection requires a\n// separate SSL connection, in which case 2 round trips are an\n// absolute minumum.\nWebSocketTransport.roundTrips = 2;\n\nmodule.exports = WebSocketTransport;\n"]}