{"version":3,"sources":["eventsource_test.js"],"names":[],"mappings":"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","file":"eventsource_test-compiled.js","sourcesContent":["var EventSource = require('../lib/eventsource')\n  , http = require('http')\n  , https = require('https')\n  , fs = require('fs')\n  , assert = require('assert')\n  , u = require('url');\n\nvar _port = 20000;\nvar servers = 0;\nprocess.on('exit', function () {\n  if (servers != 0) {\n    console.error(\"************ Didn't kill all servers - there is still %d running.\", servers);\n  }\n});\n\nfunction createServer(callback) {\n  var server = http.createServer();\n  configureServer(server, 'http', _port++, callback);\n}\n\nfunction createHttpsServer(callback) {\n  var options = {\n    key: fs.readFileSync(__dirname + '/key.pem'),\n    cert: fs.readFileSync(__dirname + '/certificate.pem')\n  };\n  var server = https.createServer(options);\n  configureServer(server, 'https', _port++, callback);\n}\n\nfunction configureServer(server, protocol, port, callback) {\n  var responses = [];\n\n  var oldClose = server.close;\n  server.close = function() {\n    responses.forEach(function (res) {\n      res.end();\n    });\n    servers--;\n    oldClose.apply(this, arguments);\n  };\n\n  server.on('request', function (req, res) {\n    responses.push(res);\n  });\n\n  server.url = protocol + '://localhost:' + port;\n\n  server.listen(port, function onOpen(err) {\n    servers++;\n    callback(err, server);\n  });\n}\n\nfunction writeEvents(chunks) {\n  return function (req, res) {\n    res.writeHead(200, {'Content-Type': 'text/event-stream'});\n    chunks.forEach(function (chunk) {\n      res.write(chunk);\n    });\n    res.write(':'); // send a dummy comment to ensure that the head is flushed\n  };\n}\n\ndescribe('Parser', function () {\n  it('parses multibyte characters', function (done) {\n    createServer(function (err, server) {\n      if (err) return done(err);\n\n      server.on('request', writeEvents([\"id: 1\\ndata: €豆腐\\n\\n\"]));\n      var es = new EventSource(server.url);\n\n      es.onmessage = function (m) {\n        assert.equal(\"€豆腐\", m.data);\n        server.close(done);\n      };\n    });\n  });\n\n  it('parses empty lines with multibyte characters', function (done) {\n    createServer(function (err, server) {\n      if (err) return done(err);\n\n      server.on('request', writeEvents([\"\\n\\n\\n\\nid: 1\\ndata: 我現在都看實況不玩遊戲\\n\\n\"]));\n      var es = new EventSource(server.url);\n\n      es.onmessage = function (m) {\n        assert.equal(\"我現在都看實況不玩遊戲\", m.data);\n        server.close(done);\n      };\n    });\n  });\n\n  it('parses one one-line message in one chunk', function (done) {\n    createServer(function (err, server) {\n      if (err) return done(err);\n\n      server.on('request', writeEvents([\"data: Hello\\n\\n\"]));\n      var es = new EventSource(server.url);\n      es.onmessage = function (m) {\n        assert.equal(\"Hello\", m.data);\n        server.close(done);\n      };\n    });\n  });\n\n  it('parses one one-line message in two chunks', function (done) {\n    createServer(function (err, server) {\n      if (err) return done(err);\n\n      server.on('request', writeEvents([\"data: Hel\", \"lo\\n\\n\"]));\n      var es = new EventSource(server.url);\n      es.onmessage = function (m) {\n        assert.equal(\"Hello\", m.data);\n        server.close(done);\n      };\n    });\n  });\n\n  it('parses two one-line messages in one chunk', function (done) {\n    createServer(function (err, server) {\n      if (err) return done(err);\n\n      server.on('request', writeEvents([\"data: Hello\\n\\n\", \"data: World\\n\\n\"]));\n      var es = new EventSource(server.url);\n\n      es.onmessage = first;\n\n      function first(m) {\n        assert.equal(\"Hello\", m.data);\n        es.onmessage = second;\n      }\n\n      function second(m) {\n        assert.equal(\"World\", m.data);\n        server.close(done);\n      }\n    });\n  });\n\n  it('parses one two-line message in one chunk', function (done) {\n    createServer(function (err, server) {\n      if (err) return done(err);\n\n      server.on('request', writeEvents([\"data: Hello\\ndata:World\\n\\n\"]));\n      var es = new EventSource(server.url);\n\n      es.onmessage = function (m) {\n        assert.equal(\"Hello\\nWorld\", m.data);\n        server.close(done);\n      };\n    });\n  });\n\n  it('parses really chopped up unicode data', function (done) {\n    createServer(function (err, server) {\n      if (err) return done(err);\n\n      var chopped = \"data: Aslak\\n\\ndata: Hellesøy\\n\\n\".split(\"\");\n      server.on('request', writeEvents(chopped));\n      var es = new EventSource(server.url);\n\n      es.onmessage = first;\n\n      function first(m) {\n        assert.equal(\"Aslak\", m.data);\n        es.onmessage = second;\n      }\n\n      function second(m) {\n        assert.equal(\"Hellesøy\", m.data);\n        server.close(done);\n      }\n    });\n  });\n\n  it('accepts CRLF as separator', function (done) {\n    createServer(function (err, server) {\n      if (err) return done(err);\n\n      var chopped = \"data: Aslak\\r\\n\\r\\ndata: Hellesøy\\r\\n\\r\\n\".split(\"\");\n      server.on('request', writeEvents(chopped));\n      var es = new EventSource(server.url);\n\n      es.onmessage = first;\n\n      function first(m) {\n        assert.equal(\"Aslak\", m.data);\n        es.onmessage = second;\n      }\n\n      function second(m) {\n        assert.equal(\"Hellesøy\", m.data);\n        server.close(done);\n      }\n    });\n  });\n\n  it('accepts CR as separator', function (done) {\n    createServer(function (err, server) {\n      if (err) return done(err);\n\n      var chopped = \"data: Aslak\\r\\rdata: Hellesøy\\r\\r\".split(\"\");\n      server.on('request', writeEvents(chopped));\n      var es = new EventSource(server.url);\n\n      es.onmessage = first;\n\n      function first(m) {\n        assert.equal(\"Aslak\", m.data);\n        es.onmessage = second;\n      }\n\n      function second(m) {\n        assert.equal(\"Hellesøy\", m.data);\n        server.close(done);\n      }\n    });\n  });\n\n  it('delivers message with explicit event', function (done) {\n    createServer(function (err, server) {\n      if (err) return done(err);\n\n      server.on('request', writeEvents([\"event: greeting\\ndata: Hello\\n\\n\"]));\n      var es = new EventSource(server.url);\n\n      es.addEventListener('greeting', function (m) {\n        assert.equal(\"Hello\", m.data);\n        server.close(done);\n      });\n    });\n  });\n\n  it('ignores comments', function (done) {\n    createServer(function (err, server) {\n      if (err) return done(err);\n\n      server.on('request', writeEvents([\"data: Hello\\n\\n:nothing to see here\\n\\ndata: World\\n\\n\"]));\n      var es = new EventSource(server.url);\n\n      es.onmessage = first;\n\n      function first(m) {\n        assert.equal(\"Hello\", m.data);\n        es.onmessage = second;\n      }\n\n      function second(m) {\n        assert.equal(\"World\", m.data);\n        server.close(done);\n      }\n    });\n  });\n\n  it('ignores empty comments', function (done) {\n    createServer(function (err, server) {\n      if (err) return done(err);\n\n      server.on('request', writeEvents([\"data: Hello\\n\\n:\\n\\ndata: World\\n\\n\"]));\n      var es = new EventSource(server.url);\n\n      es.onmessage = first;\n\n      function first(m) {\n        assert.equal(\"Hello\", m.data);\n        es.onmessage = second;\n      }\n\n      function second(m) {\n        assert.equal(\"World\", m.data);\n        server.close(done);\n      }\n    });\n  });\n\n  it('does not ignore multilines strings', function (done) {\n    createServer(function (err, server) {\n      if (err) return done(err);\n\n      server.on('request', writeEvents([\"data: line one\\ndata:\\ndata: line two\\n\\n\"]));\n      var es = new EventSource(server.url);\n\n      es.onmessage = function (m) {\n        assert.equal('line one\\n\\nline two', m.data);\n        server.close(done);\n      };\n    });\n  });\n\n  it('does not ignore multilines strings even in data beginning', function (done) {\n    createServer(function (err, server) {\n      if (err) return done(err);\n\n      server.on('request', writeEvents([\"data:\\ndata:line one\\ndata: line two\\n\\n\"]));\n      var es = new EventSource(server.url);\n\n      es.onmessage = function (m) {\n        assert.equal('\\nline one\\nline two', m.data);\n        server.close(done);\n      };\n    });\n  });\n\n  it('causes entire event to be ignored for empty event field', function (done) {\n    createServer(function (err, server) {\n      if (err) return done(err);\n\n      server.on('request', writeEvents([\"event:\\n\\ndata: Hello\\n\\n\"]));\n      var es = new EventSource(server.url);\n\n      var originalEmit = es.emit;\n      es.emit = function (event) {\n        assert.ok(event === 'message' || event === 'newListener');\n        return originalEmit.apply(this, arguments);\n      };\n      es.onmessage = function (m) {\n        assert.equal('Hello', m.data);\n        server.close(done);\n      };\n    });\n  });\n\n  it('parses relatively huge messages efficiently', function (done) {\n    this.timeout(1000);\n\n    createServer(function (err, server) {\n      if (err) return done(err);\n      var longMessage = \"data: \" + new Array(100000).join('a') + \"\\n\\n\";\n      server.on('request', writeEvents([longMessage]));\n\n      var es = new EventSource(server.url);\n\n      es.onmessage = function () {\n        server.close(done);\n      };\n    });\n  });\n});\n\ndescribe('HTTP Request', function () {\n  it('passes cache-control: no-cache to server', function (done) {\n    createServer(function (err, server) {\n      if (err) return done(err);\n\n      server.on('request', function (req) {\n        assert.equal('no-cache', req.headers['cache-control']);\n        server.close(done);\n      });\n      new EventSource(server.url);\n    });\n  });\n\n  it('sets request headers', function (done) {\n    var server = createServer(function (err, server) {\n      if (err) return done(err);\n\n      server.on('request', function (req) {\n        assert.equal(req.headers['user-agent'], 'test');\n        assert.equal(req.headers['cookie'], 'test=test');\n        assert.equal(req.headers['last-event-id'], '99');\n        server.close(done);\n      });\n\n      var headers = {\n        'User-Agent': 'test',\n        'Cookie': 'test=test',\n        'Last-Event-ID': '99'\n      };\n      new EventSource(server.url, {headers: headers});\n    });\n  });\n\n  it(\"does not set request headers that don't have a value\", function (done) {\n    var server = createServer(function (err, server) {\n      if (err) return done(err);\n\n      server.on('request', function (req) {\n        assert.equal(req.headers['user-agent'], 'test');\n        assert.equal(req.headers['cookie'], 'test=test');\n        assert.equal(req.headers['last-event-id'], '99');\n        assert.equal(req.headers['X-Something'], undefined);\n        server.close(done);\n      });\n\n      var headers = {\n        'User-Agent': 'test',\n        'Cookie': 'test=test',\n        'Last-Event-ID': '99',\n        'X-Something': null\n      };\n\n      assert.doesNotThrow(\n        function() {\n          new EventSource(server.url, {headers: headers});\n        }\n      );\n    });\n  });\n\n  [301, 307].forEach(function (status) {\n    it('follows http ' + status + ' redirect', function (done) {\n      var redirectSuffix = '/foobar';\n      var clientRequestedRedirectUrl = false;\n      createServer(function (err, server) {\n        if(err) return done(err);\n\n        server.on('request', function (req, res) {\n          if (req.url === '/') {\n            res.writeHead(status, {\n              'Connection': 'Close',\n              'Location': server.url + redirectSuffix\n            });\n            res.end();\n          } else if (req.url === redirectSuffix) {\n            clientRequestedRedirectUrl = true;\n            res.writeHead(200, {'Content-Type': 'text/event-stream'});\n            res.end();\n          }\n        });\n\n        var es = new EventSource(server.url);\n        es.onopen = function () {\n          assert.ok(clientRequestedRedirectUrl);\n          assert.equal(server.url + redirectSuffix, es.url);\n          server.close(done);\n        };\n      });\n    });\n\n\n    it('causes error event when response is ' + status + ' with missing location', function (done) {\n      var redirectSuffix = '/foobar';\n      var clientRequestedRedirectUrl = false;\n      createServer(function (err, server) {\n        if(err) return done(err);\n\n        server.on('request', function (req, res) {\n          res.writeHead(status, {\n            'Connection': 'Close'\n          });\n          res.end();\n        });\n\n        var es = new EventSource(server.url);\n        es.onerror = function (err) {\n          assert.equal(err.status, status);\n          server.close(done);\n        };\n      });\n    });\n  });\n\n  [401, 403].forEach(function (status) {\n    it('causes error event when response status is ' + status, function (done) {\n      createServer(function (err, server) {\n        if(err) return done(err);\n\n        server.on('request', function (req, res) {\n          res.writeHead(status, {'Content-Type': 'text/html'});\n          res.end();\n        });\n\n        var es = new EventSource(server.url);\n        es.onerror = function (err) {\n          assert.equal(err.status, status);\n          server.close(done);\n        };\n      });\n    });\n  });\n});\n\ndescribe('HTTPS Support', function () {\n  it('uses https for https urls', function (done) {\n    createHttpsServer(function (err, server) {\n      if(err) return done(err);\n\n      server.on('request', writeEvents([\"data: hello\\n\\n\"]));\n      var es = new EventSource(server.url, {rejectUnauthorized: false});\n\n      es.onmessage = function (m) {\n        assert.equal(\"hello\", m.data);\n        server.close(done);\n      }\n    });\n  });\n});\n\ndescribe('Reconnection', function () {\n  it('is attempted when server is down', function (done) {\n    var es = new EventSource('http://localhost:' + _port);\n    es.reconnectInterval = 0;\n\n    es.onerror = function () {\n      es.onerror = null;\n      createServer(function (err, server) {\n        if(err) return done(err);\n\n        server.on('request', writeEvents([\"data: hello\\n\\n\"]));\n\n        es.onmessage = function (m) {\n          assert.equal(\"hello\", m.data);\n          server.close(done);\n        }\n      });\n    };\n  });\n\n  it('is attempted when server goes down after connection', function (done) {\n    createServer(function (err, server) {\n      if(err) return done(err);\n\n      server.on('request', writeEvents([\"data: hello\\n\\n\"]));\n      var es = new EventSource(server.url);\n      es.reconnectInterval = 0;\n\n      es.onmessage = function (m) {\n        assert.equal(\"hello\", m.data);\n        server.close(function (err) {\n          if(err) return done(err);\n\n          var port = u.parse(es.url).port;\n          configureServer(http.createServer(), 'http', port, function (err, server2) {\n            if(err) return done(err);\n\n            server2.on('request', writeEvents([\"data: world\\n\\n\"]));\n            es.onmessage = function (m) {\n              assert.equal(\"world\", m.data);\n              server2.close(done);\n            };\n          });\n        });\n      };\n    });\n  });\n\n  it('is stopped when server goes down and eventsource is being closed', function (done) {\n    createServer(function (err, server) {\n      if(err) return done(err);\n\n      server.on('request', writeEvents([\"data: hello\\n\\n\"]));\n      var es = new EventSource(server.url);\n      es.reconnectInterval = 0;\n\n      es.onmessage = function (m) {\n        assert.equal(\"hello\", m.data);\n        server.close(function (err) {\n          if(err) return done(err);\n          // The server has closed down. es.onerror should now get called,\n          // because es's remote connection was dropped.\n        });\n      };\n\n      es.onerror = function () {\n        // We received an error because the remote connection was closed.\n        // We close es, so we do not want es to reconnect.\n        es.close();\n\n        var port = u.parse(es.url).port;\n        configureServer(http.createServer(), 'http', port, function (err, server2) {\n          if(err) return done(err);\n          server2.on('request', writeEvents([\"data: world\\n\\n\"]));\n\n          es.onmessage = function (m) {\n            return done(new Error(\"Unexpected message: \" + m.data));\n          };\n\n          setTimeout(function () {\n            // We have not received any message within 100ms, we can\n            // presume this works correctly.\n            server2.close(done);\n          }, 100);\n        });\n      };\n    });\n  });\n\n  it('is not attempted when server responds with HTTP 204', function (done) {\n    createServer(function (err, server) {\n      if(err) return done(err);\n\n      server.on('request', function (req, res) {\n        res.writeHead(204);\n        res.end();\n      });\n\n      var es = new EventSource(server.url);\n      es.reconnectInterval = 0;\n\n      es.onerror = function (e) {\n        assert.equal(e.status, 204);\n        server.close(function (err) {\n          if(err) return done(err);\n\n          var port = u.parse(es.url).port;\n          configureServer(http.createServer(), 'http', port, function (err, server2) {\n            if(err) return done(err);\n\n            // this will be verified by the readyState\n            // going from CONNECTING to CLOSED,\n            // along with the tests verifying that the\n            // state is CONNECTING when a server closes.\n            // it's next to impossible to write a fail-safe\n            // test for this, though.\n            var ival = setInterval(function () {\n              if (es.readyState == EventSource.CLOSED) {\n                clearInterval(ival);\n                server2.close(done);\n              }\n            }, 5);\n          });\n        });\n      };\n    });\n  });\n\n  it('sends Last-Event-ID http header when it has previously been passed in an event from the server', function (done) {\n    createServer(function (err, server) {\n      if(err) return done(err);\n\n      server.on('request', writeEvents(['id: 10\\ndata: Hello\\n\\n']));\n\n      var es = new EventSource(server.url);\n      es.reconnectInterval = 0;\n\n      es.onmessage = function () {\n        server.close(function (err) {\n          if(err) return done(err);\n\n          var port = u.parse(es.url).port;\n          configureServer(http.createServer(), 'http', port, function (err, server2) {\n            server2.on('request', function (req, res) {\n              assert.equal('10', req.headers['last-event-id']);\n              server2.close(done);\n            });\n          });\n        });\n      };\n    });\n  });\n\n  it('sends correct Last-Event-ID http header when an initial Last-Event-ID header was specified in the constructor', function (done) {\n    createServer(function (err, server) {\n      if(err) return done(err);\n\n      server.on('request', function (req, res) {\n        assert.equal('9', req.headers['last-event-id']);\n        server.close(done);\n      });\n\n      new EventSource(server.url, {headers: {'Last-Event-ID': '9'}});\n    });\n  });\n\n  it('does not send Last-Event-ID http header when it has not been previously sent by the server', function (done) {\n    createServer(function (err, server) {\n      if(err) return done(err);\n\n      server.on('request', writeEvents(['data: Hello\\n\\n']));\n\n      var es = new EventSource(server.url);\n      es.reconnectInterval = 0;\n\n      es.onmessage = function () {\n        server.close(function (err) {\n          if(err) return done(err);\n\n          var port = u.parse(es.url).port;\n          configureServer(http.createServer(), 'http', port, function (err, server2) {\n            server2.on('request', function (req, res) {\n              assert.equal(undefined, req.headers['last-event-id']);\n              server2.close(done);\n            });\n          });\n        });\n      };\n    });\n  });\n});\n\ndescribe('readyState', function () {\n  it('has CONNECTING constant', function () {\n    assert.equal(0, EventSource.CONNECTING);\n  });\n\n  it('has OPEN constant', function () {\n    assert.equal(1, EventSource.OPEN);\n  });\n\n  it('has CLOSED constant', function () {\n    assert.equal(2, EventSource.CLOSED);\n  });\n\n  it('is CONNECTING before connection has been established', function (done) {\n    var es = new EventSource('http://localhost:' + _port);\n    assert.equal(EventSource.CONNECTING, es.readyState);\n    es.onerror = function () {\n      es.close();\n      done();\n    }\n  });\n\n  it('is CONNECTING when server has closed the connection', function (done) {\n    createServer(function (err, server) {\n      if(err) return done(err);\n\n      server.on('request', writeEvents([]));\n      var es = new EventSource(server.url);\n      es.reconnectInterval = 0;\n\n      es.onopen = function (m) {\n        server.close(function (err) {\n          if(err) return done(err);\n\n          es.onerror = function () {\n            es.onerror = null;\n            assert.equal(EventSource.CONNECTING, es.readyState);\n            done();\n          };\n        });\n      };\n    });\n  });\n\n  it('is OPEN when connection has been established', function (done) {\n    createServer(function (err, server) {\n      if(err) return done(err);\n\n      server.on('request', writeEvents([]));\n      var es = new EventSource(server.url);\n\n      es.onopen = function () {\n        assert.equal(EventSource.OPEN, es.readyState);\n        server.close(done);\n      }\n    });\n  });\n\n  it('is CLOSED after connection has been closed', function (done) {\n    createServer(function (err, server) {\n      if(err) return done(err);\n\n      server.on('request', writeEvents([]));\n      var es = new EventSource(server.url);\n\n      es.onopen = function () {\n        es.close();\n        assert.equal(EventSource.CLOSED, es.readyState);\n        server.close(done);\n      }\n    });\n  });\n});\n\ndescribe('Properties', function () {\n  it('url exposes original request url', function () {\n    var url = 'http://localhost:' + _port;\n    var es = new EventSource(url);\n    assert.equal(url, es.url);\n  });\n});\n\ndescribe('Events', function () {\n  it('calls onopen when connection is established', function (done) {\n    createServer(function (err, server) {\n      if(err) return done(err);\n\n      server.on('request', writeEvents([]));\n      var es = new EventSource(server.url);\n\n      es.onopen = function (event) {\n        assert.equal(event.type, 'open');\n        server.close(done);\n      }\n    });\n  });\n\n  it('supplies the correct origin', function (done) {\n    createServer(function (err, server) {\n      if(err) return done(err);\n\n      server.on('request', writeEvents([\"data: hello\\n\\n\"]));\n      var es = new EventSource(server.url);\n\n      es.onmessage = function (event) {\n        assert.equal(event.origin, server.url);\n        server.close(done);\n      }\n    });\n  });\n\n  it('emits open event when connection is established', function (done) {\n    createServer(function (err, server) {\n      if(err) return done(err);\n\n      server.on('request', writeEvents([]));\n      var es = new EventSource(server.url);\n\n      es.addEventListener('open', function (event) {\n        assert.equal(event.type, 'open');\n        server.close(done);\n      });\n    });\n  });\n\n  it('does not emit error when connection is closed by client', function (done) {\n    createServer(function (err, server) {\n      if(err) return done(err);\n\n      server.on('request', writeEvents([]));\n      var es = new EventSource(server.url);\n\n      es.addEventListener('open', function () {\n        es.close();\n        process.nextTick(function () {\n          server.close(done);\n        });\n      });\n      es.addEventListener('error', function () {\n        done(new Error('error should not be emitted'));\n      });\n    });\n  });\n\n  it('populates message\\'s lastEventId correctly when the last event has an associated id', function (done) {\n    createServer(function (err, server) {\n      if(err) return done(err);\n\n      server.on('request', writeEvents([\"id: 123\\ndata: hello\\n\\n\"]));\n      var es = new EventSource(server.url);\n\n      es.onmessage = function (m) {\n        assert.equal(m.lastEventId, \"123\");\n        server.close(done);\n      };\n    });\n  });\n\n  it('populates message\\'s lastEventId correctly when the last event doesn\\'t have an associated id', function (done) {\n    createServer(function (err, server) {\n      if(err) return done(err);\n\n      server.on('request', writeEvents([\"id: 123\\ndata: Hello\\n\\n\", \"data: World\\n\\n\"]));\n      var es = new EventSource(server.url);\n\n      es.onmessage = first;\n\n      function first() {\n        es.onmessage = second;\n      }\n\n      function second(m) {\n        assert.equal(m.data, \"World\");\n        assert.equal(m.lastEventId, \"123\");  //expect to get back the previous event id\n        server.close(done);\n      }\n    });\n  });\n\n  it('populates messages with enumerable properties so they can be inspected via console.log().', function (done) {\n    createServer(function (err, server) {\n      if(err) return done(err);\n\n      server.on('request', writeEvents([\"data: World\\n\\n\"]));\n      var es = new EventSource(server.url);\n\n      es.onmessage = function (m) {\n        var enumerableAttributes = Object.keys(m);\n        assert.notEqual(enumerableAttributes.indexOf(\"data\"), -1);\n        assert.notEqual(enumerableAttributes.indexOf(\"type\"), -1);\n        server.close(done);\n      };\n    });\n  });\n});\n"]}