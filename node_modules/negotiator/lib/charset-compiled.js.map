{"version":3,"sources":["charset.js"],"names":[],"mappings":"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","file":"charset-compiled.js","sourcesContent":["/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredCharsets;\nmodule.exports.preferredCharsets = preferredCharsets;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleCharsetRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Charset header.\n * @private\n */\n\nfunction parseAcceptCharset(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var charset = parseCharset(accepts[i].trim(), i);\n\n    if (charset) {\n      accepts[j++] = charset;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a charset from the Accept-Charset header.\n * @private\n */\n\nfunction parseCharset(str, i) {\n  var match = simpleCharsetRegExp.exec(str);\n  if (!match) return null;\n\n  var charset = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';')\n    for (var i = 0; i < params.length; i ++) {\n      var p = params[i].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    charset: charset,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of a charset.\n * @private\n */\n\nfunction getCharsetPriority(charset, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(charset, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the charset.\n * @private\n */\n\nfunction specify(charset, spec, index) {\n  var s = 0;\n  if(spec.charset.toLowerCase() === charset.toLowerCase()){\n    s |= 1;\n  } else if (spec.charset !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n}\n\n/**\n * Get the preferred charsets from an Accept-Charset header.\n * @public\n */\n\nfunction preferredCharsets(accept, provided) {\n  // RFC 2616 sec 14.2: no header = *\n  var accepts = parseAcceptCharset(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all charsets\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullCharset);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getCharsetPriority(type, accepts, index);\n  });\n\n  // sorted list of accepted charsets\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getCharset(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full charset string.\n * @private\n */\n\nfunction getFullCharset(spec) {\n  return spec.charset;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n"]}