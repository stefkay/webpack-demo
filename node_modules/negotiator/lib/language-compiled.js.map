{"version":3,"sources":["language.js"],"names":[],"mappings":"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","file":"language-compiled.js","sourcesContent":["/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredLanguages;\nmodule.exports.preferredLanguages = preferredLanguages;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleLanguageRegExp = /^\\s*([^\\s\\-;]+)(?:-([^\\s;]+))?\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Language header.\n * @private\n */\n\nfunction parseAcceptLanguage(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var langauge = parseLanguage(accepts[i].trim(), i);\n\n    if (langauge) {\n      accepts[j++] = langauge;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a language from the Accept-Language header.\n * @private\n */\n\nfunction parseLanguage(str, i) {\n  var match = simpleLanguageRegExp.exec(str);\n  if (!match) return null;\n\n  var prefix = match[1],\n      suffix = match[2],\n      full = prefix;\n\n  if (suffix) full += \"-\" + suffix;\n\n  var q = 1;\n  if (match[3]) {\n    var params = match[3].split(';')\n    for (var i = 0; i < params.length; i ++) {\n      var p = params[i].split('=');\n      if (p[0] === 'q') q = parseFloat(p[1]);\n    }\n  }\n\n  return {\n    prefix: prefix,\n    suffix: suffix,\n    q: q,\n    i: i,\n    full: full\n  };\n}\n\n/**\n * Get the priority of a language.\n * @private\n */\n\nfunction getLanguagePriority(language, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(language, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the language.\n * @private\n */\n\nfunction specify(language, spec, index) {\n  var p = parseLanguage(language)\n  if (!p) return null;\n  var s = 0;\n  if(spec.full.toLowerCase() === p.full.toLowerCase()){\n    s |= 4;\n  } else if (spec.prefix.toLowerCase() === p.full.toLowerCase()) {\n    s |= 2;\n  } else if (spec.full.toLowerCase() === p.prefix.toLowerCase()) {\n    s |= 1;\n  } else if (spec.full !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n};\n\n/**\n * Get the preferred languages from an Accept-Language header.\n * @public\n */\n\nfunction preferredLanguages(accept, provided) {\n  // RFC 2616 sec 14.4: no header = *\n  var accepts = parseAcceptLanguage(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all languages\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullLanguage);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getLanguagePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted languages\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getLanguage(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full language string.\n * @private\n */\n\nfunction getFullLanguage(spec) {\n  return spec.full;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n"]}