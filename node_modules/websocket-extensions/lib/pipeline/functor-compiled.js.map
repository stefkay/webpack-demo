{"version":3,"sources":["functor.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,aAAa,QAAQ,eAAR,CAAjB;;AAEA,IAAI,UAAU,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AACtC,OAAK,QAAL,GAAgB,OAAhB;AACA,OAAK,OAAL,GAAgB,MAAhB;AACA,OAAK,MAAL,GAAgB,IAAI,UAAJ,CAAe,QAAQ,UAAvB,CAAhB;AACA,OAAK,QAAL,GAAgB,KAAhB;AACA,OAAK,OAAL,GAAgB,CAAhB;AACD,CAND;;AAQA,QAAQ,UAAR,GAAqB,CAArB;;AAEA,QAAQ,SAAR,CAAkB,IAAlB,GAAyB,UAAS,KAAT,EAAgB,OAAhB,EAAyB,QAAzB,EAAmC,OAAnC,EAA4C;AACnE,MAAI,KAAK,QAAT,EAAmB;;AAEnB,MAAI,SAAS,EAAC,OAAO,KAAR,EAAe,SAAS,OAAxB,EAAiC,UAAU,QAA3C,EAAqD,SAAS,OAA9D,EAAuE,MAAM,KAA7E,EAAb;AAAA,MACI,SAAS,KADb;AAAA,MAEI,OAAS,IAFb;;AAIA,OAAK,MAAL,CAAY,IAAZ,CAAiB,MAAjB;;AAEA,MAAI,OAAO,KAAX,EAAkB;AAChB,WAAO,IAAP,GAAc,IAAd;AACA,SAAK,KAAL;AACA,WAAO,KAAK,WAAL,EAAP;AACD;;AAED,OAAK,QAAL,CAAc,KAAK,OAAnB,EAA4B,OAA5B,EAAqC,UAAS,GAAT,EAAc,GAAd,EAAmB;AACtD,QAAI,EAAE,UAAU,SAAS,IAAnB,CAAF,CAAJ,EAAiC;;AAEjC,QAAI,GAAJ,EAAS;AACP,WAAK,KAAL;AACA,aAAO,KAAP,GAAiB,GAAjB;AACA,aAAO,OAAP,GAAiB,IAAjB;AACD,KAJD,MAIO;AACL,aAAO,OAAP,GAAiB,GAAjB;AACD;;AAED,WAAO,IAAP,GAAc,IAAd;AACA,SAAK,WAAL;AACD,GAbD;AAcD,CA7BD;;AA+BA,QAAQ,SAAR,CAAkB,KAAlB,GAA0B,YAAW;AACnC,OAAK,OAAL,GAAgB,KAAK,MAAL,CAAY,MAA5B;AACA,OAAK,QAAL,GAAgB,IAAhB;AACD,CAHD;;AAKA,QAAQ,SAAR,CAAkB,WAAlB,GAAgC,YAAW;AACzC,MAAI,QAAQ,KAAK,MAAjB;AAAA,MAAyB,MAAzB;;AAEA,SAAO,MAAM,MAAN,GAAe,CAAf,IAAoB,MAAM,IAAN,GAAa,IAAxC,EAA8C;AAC5C,SAAK,OAAL,IAAgB,CAAhB;AACA,aAAS,MAAM,KAAN,EAAT;AACA,WAAO,QAAP,CAAgB,IAAhB,CAAqB,OAAO,OAA5B,EAAqC,OAAO,KAA5C,EAAmD,OAAO,OAA1D;AACD;AACF,CARD;;AAUA,OAAO,OAAP,GAAiB,OAAjB","file":"functor-compiled.js","sourcesContent":["'use strict';\n\nvar RingBuffer = require('./ring_buffer');\n\nvar Functor = function(session, method) {\n  this._session = session;\n  this._method  = method;\n  this._queue   = new RingBuffer(Functor.QUEUE_SIZE);\n  this._stopped = false;\n  this.pending  = 0;\n};\n\nFunctor.QUEUE_SIZE = 8;\n\nFunctor.prototype.call = function(error, message, callback, context) {\n  if (this._stopped) return;\n\n  var record = {error: error, message: message, callback: callback, context: context, done: false},\n      called = false,\n      self   = this;\n\n  this._queue.push(record);\n\n  if (record.error) {\n    record.done = true;\n    this._stop();\n    return this._flushQueue();\n  }\n\n  this._session[this._method](message, function(err, msg) {\n    if (!(called ^ (called = true))) return;\n\n    if (err) {\n      self._stop();\n      record.error   = err;\n      record.message = null;\n    } else {\n      record.message = msg;\n    }\n\n    record.done = true;\n    self._flushQueue();\n  });\n};\n\nFunctor.prototype._stop = function() {\n  this.pending  = this._queue.length;\n  this._stopped = true;\n};\n\nFunctor.prototype._flushQueue = function() {\n  var queue = this._queue, record;\n\n  while (queue.length > 0 && queue.peek().done) {\n    this.pending -= 1;\n    record = queue.shift();\n    record.callback.call(record.context, record.error, record.message);\n  }\n};\n\nmodule.exports = Functor;\n"]}