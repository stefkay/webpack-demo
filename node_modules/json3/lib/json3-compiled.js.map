{"version":3,"sources":["json3.js"],"names":[],"mappings":"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","file":"json3-compiled.js","sourcesContent":["/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n;(function () {\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = typeof define === \"function\" && define.amd;\n\n  // A set of types used to distinguish objects from primitives.\n  var objectTypes = {\n    \"function\": true,\n    \"object\": true\n  };\n\n  // Detect the `exports` object exposed by CommonJS implementations.\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  // Use the `global` object exposed by Node (including Browserify via\n  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n  // and the `window` object in browsers. Rhino exports a `global` function\n  // instead.\n  var root = objectTypes[typeof window] && window || this,\n      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\n  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  // Public: Initializes JSON 3 using the given `context` object, attaching the\n  // `stringify` and `parse` functions to the specified `exports` object.\n  function runInContext(context, exports) {\n    context || (context = root[\"Object\"]());\n    exports || (exports = root[\"Object\"]());\n\n    // Native constructor aliases.\n    var Number = context[\"Number\"] || root[\"Number\"],\n        String = context[\"String\"] || root[\"String\"],\n        Object = context[\"Object\"] || root[\"Object\"],\n        Date = context[\"Date\"] || root[\"Date\"],\n        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n        Math = context[\"Math\"] || root[\"Math\"],\n        nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\n    // Delegate to the native `stringify` and `parse` implementations.\n    if (typeof nativeJSON == \"object\" && nativeJSON) {\n      exports.stringify = nativeJSON.stringify;\n      exports.parse = nativeJSON.parse;\n    }\n\n    // Convenience aliases.\n    var objectProto = Object.prototype,\n        getClass = objectProto.toString,\n        isProperty, forEach, undef;\n\n    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n    var isExtended = new Date(-3509827334573292);\n    try {\n      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n      // results for certain dates in Opera >= 10.53.\n      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n        // Safari < 2.0.2 stores the internal millisecond time value correctly,\n        // but clips the values returned by the date methods to the range of\n        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n    } catch (exception) {}\n\n    // Internal: Determines whether the native `JSON.stringify` and `parse`\n    // implementations are spec-compliant. Based on work by Ken Snyder.\n    function has(name) {\n      if (has[name] !== undef) {\n        // Return cached feature test result.\n        return has[name];\n      }\n      var isSupported;\n      if (name == \"bug-string-char-index\") {\n        // IE <= 7 doesn't support accessing string characters using square\n        // bracket notation. IE 8 only supports this for primitives.\n        isSupported = \"a\"[0] != \"a\";\n      } else if (name == \"json\") {\n        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n        // supported.\n        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n      } else {\n        var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n        // Test `JSON.stringify`.\n        if (name == \"json-stringify\") {\n          var stringify = exports.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n          if (stringifySupported) {\n            // A test function object with a custom `toJSON` method.\n            (value = function () {\n              return 1;\n            }).toJSON = value;\n            try {\n              stringifySupported =\n                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n                // primitives as object literals.\n                stringify(0) === \"0\" &&\n                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n                // literals.\n                stringify(new Number()) === \"0\" &&\n                stringify(new String()) == '\"\"' &&\n                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n                // does not define a canonical JSON representation (this applies to\n                // objects with `toJSON` properties as well, *unless* they are nested\n                // within an object or array).\n                stringify(getClass) === undef &&\n                // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n                // FF 3.1b3 pass this test.\n                stringify(undef) === undef &&\n                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n                // respectively, if the value is omitted entirely.\n                stringify() === undef &&\n                // FF 3.1b1, 2 throw an error if the given value is not a number,\n                // string, array, object, Boolean, or `null` literal. This applies to\n                // objects with custom `toJSON` methods as well, unless they are nested\n                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n                // methods entirely.\n                stringify(value) === \"1\" &&\n                stringify([value]) == \"[1]\" &&\n                // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n                // `\"[null]\"`.\n                stringify([undef]) == \"[null]\" &&\n                // YUI 3.0.0b1 fails to serialize `null` literals.\n                stringify(null) == \"null\" &&\n                // FF 3.1b1, 2 halts serialization if an array contains a function:\n                // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n                // elides non-JSON values from objects and arrays, unless they\n                // define custom `toJSON` methods.\n                stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n                stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n                stringify(null, value) === \"1\" &&\n                stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n                // serialize extended years.\n                stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n                // The milliseconds are optional in ES 5, but required in 5.1.\n                stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n                // four-digit years instead of six-digit years. Credits: @Yaffle.\n                stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n                // values less than 1000. Credits: @Yaffle.\n                stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n            } catch (exception) {\n              stringifySupported = false;\n            }\n          }\n          isSupported = stringifySupported;\n        }\n        // Test `JSON.parse`.\n        if (name == \"json-parse\") {\n          var parse = exports.parse;\n          if (typeof parse == \"function\") {\n            try {\n              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n              // Conforming implementations should also coerce the initial argument to\n              // a string prior to parsing.\n              if (parse(\"0\") === 0 && !parse(false)) {\n                // Simple parsing test.\n                value = parse(serialized);\n                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n                if (parseSupported) {\n                  try {\n                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                    parseSupported = !parse('\"\\t\"');\n                  } catch (exception) {}\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                      // certain octal literals.\n                      parseSupported = parse(\"01\") !== 1;\n                    } catch (exception) {}\n                  }\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                      // points. These environments, along with FF 3.1b1 and 2,\n                      // also allow trailing commas in JSON objects and arrays.\n                      parseSupported = parse(\"1.\") !== 1;\n                    } catch (exception) {}\n                  }\n                }\n              }\n            } catch (exception) {\n              parseSupported = false;\n            }\n          }\n          isSupported = parseSupported;\n        }\n      }\n      return has[name] = !!isSupported;\n    }\n\n    if (!has(\"json\")) {\n      // Common `[[Class]]` name aliases.\n      var functionClass = \"[object Function]\",\n          dateClass = \"[object Date]\",\n          numberClass = \"[object Number]\",\n          stringClass = \"[object String]\",\n          arrayClass = \"[object Array]\",\n          booleanClass = \"[object Boolean]\";\n\n      // Detect incomplete support for accessing string characters by index.\n      var charIndexBuggy = has(\"bug-string-char-index\");\n\n      // Define additional utility methods if the `Date` methods are buggy.\n      if (!isExtended) {\n        var floor = Math.floor;\n        // A mapping between the months of the year and the number of days between\n        // January 1st and the first of the respective month.\n        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n        // Internal: Calculates the number of days between the Unix epoch and the\n        // first day of the given month.\n        var getDay = function (year, month) {\n          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n        };\n      }\n\n      // Internal: Determines if a property is a direct property of the given\n      // object. Delegates to the native `Object#hasOwnProperty` method.\n      if (!(isProperty = objectProto.hasOwnProperty)) {\n        isProperty = function (property) {\n          var members = {}, constructor;\n          if ((members.__proto__ = null, members.__proto__ = {\n            // The *proto* property cannot be set multiple times in recent\n            // versions of Firefox and SeaMonkey.\n            \"toString\": 1\n          }, members).toString != getClass) {\n            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n            // supports the mutable *proto* property.\n            isProperty = function (property) {\n              // Capture and break the object's prototype chain (see section 8.6.2\n              // of the ES 5.1 spec). The parenthesized expression prevents an\n              // unsafe transformation by the Closure Compiler.\n              var original = this.__proto__, result = property in (this.__proto__ = null, this);\n              // Restore the original prototype chain.\n              this.__proto__ = original;\n              return result;\n            };\n          } else {\n            // Capture a reference to the top-level `Object` constructor.\n            constructor = members.constructor;\n            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n            // other environments.\n            isProperty = function (property) {\n              var parent = (this.constructor || constructor).prototype;\n              return property in this && !(property in parent && this[property] === parent[property]);\n            };\n          }\n          members = null;\n          return isProperty.call(this, property);\n        };\n      }\n\n      // Internal: Normalizes the `for...in` iteration algorithm across\n      // environments. Each enumerated key is yielded to a `callback` function.\n      forEach = function (object, callback) {\n        var size = 0, Properties, members, property;\n\n        // Tests for bugs in the current environment's `for...in` algorithm. The\n        // `valueOf` property inherits the non-enumerable flag from\n        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n        (Properties = function () {\n          this.valueOf = 0;\n        }).prototype.valueOf = 0;\n\n        // Iterate over a new instance of the `Properties` class.\n        members = new Properties();\n        for (property in members) {\n          // Ignore all properties inherited from `Object.prototype`.\n          if (isProperty.call(members, property)) {\n            size++;\n          }\n        }\n        Properties = members = null;\n\n        // Normalize the iteration algorithm.\n        if (!size) {\n          // A list of non-enumerable properties inherited from `Object.prototype`.\n          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n          // properties.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, length;\n            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n            for (property in object) {\n              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n              // certain conditions; IE does not.\n              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for each non-enumerable property.\n            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n          };\n        } else if (size == 2) {\n          // Safari <= 2.0.4 enumerates shadowed properties twice.\n          forEach = function (object, callback) {\n            // Create a set of iterated properties.\n            var members = {}, isFunction = getClass.call(object) == functionClass, property;\n            for (property in object) {\n              // Store each property name to prevent double enumeration. The\n              // `prototype` property of functions is not enumerated due to cross-\n              // environment inconsistencies.\n              if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n          };\n        } else {\n          // No bugs detected; use the standard `for...in` algorithm.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n            for (property in object) {\n              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for the `constructor` property due to\n            // cross-environment inconsistencies.\n            if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n              callback(property);\n            }\n          };\n        }\n        return forEach(object, callback);\n      };\n\n      // Public: Serializes a JavaScript `value` as a JSON string. The optional\n      // `filter` argument may specify either a function that alters how object and\n      // array members are serialized, or an array of strings and numbers that\n      // indicates which properties should be serialized. The optional `width`\n      // argument may be either a string or number that specifies the indentation\n      // level of the output.\n      if (!has(\"json-stringify\")) {\n        // Internal: A map of control characters and their escaped equivalents.\n        var Escapes = {\n          92: \"\\\\\\\\\",\n          34: '\\\\\"',\n          8: \"\\\\b\",\n          12: \"\\\\f\",\n          10: \"\\\\n\",\n          13: \"\\\\r\",\n          9: \"\\\\t\"\n        };\n\n        // Internal: Converts `value` into a zero-padded string such that its\n        // length is at least equal to `width`. The `width` must be <= 6.\n        var leadingZeroes = \"000000\";\n        var toPaddedString = function (width, value) {\n          // The `|| 0` expression is necessary to work around a bug in\n          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n          return (leadingZeroes + (value || 0)).slice(-width);\n        };\n\n        // Internal: Double-quotes a string `value`, replacing all ASCII control\n        // characters (characters with code unit values between 0 and 31) with\n        // their escaped equivalents. This is an implementation of the\n        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n        var unicodePrefix = \"\\\\u00\";\n        var quote = function (value) {\n          var result = '\"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\n          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n          for (; index < length; index++) {\n            var charCode = value.charCodeAt(index);\n            // If the character is a control character, append its Unicode or\n            // shorthand escape sequence; otherwise, append the character as-is.\n            switch (charCode) {\n              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n                result += Escapes[charCode];\n                break;\n              default:\n                if (charCode < 32) {\n                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                  break;\n                }\n                result += useCharIndex ? symbols[index] : value.charAt(index);\n            }\n          }\n          return result + '\"';\n        };\n\n        // Internal: Recursively serializes an object. Implements the\n        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n          try {\n            // Necessary for host object support.\n            value = object[property];\n          } catch (exception) {}\n          if (typeof value == \"object\" && value) {\n            className = getClass.call(value);\n            if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n              if (value > -1 / 0 && value < 1 / 0) {\n                // Dates are serialized according to the `Date#toJSON` method\n                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n                // for the ISO 8601 date time string format.\n                if (getDay) {\n                  // Manually compute the year, month, date, hours, minutes,\n                  // seconds, and milliseconds if the `getUTC*` methods are\n                  // buggy. Adapted from @Yaffle's `date-shim` project.\n                  date = floor(value / 864e5);\n                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                  date = 1 + date - getDay(year, month);\n                  // The `time` value specifies the time within the day (see ES\n                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                  // to compute `A modulo B`, as the `%` operator does not\n                  // correspond to the `modulo` operation for negative numbers.\n                  time = (value % 864e5 + 864e5) % 864e5;\n                  // The hours, minutes, seconds, and milliseconds are obtained by\n                  // decomposing the time within the day. See section 15.9.1.10.\n                  hours = floor(time / 36e5) % 24;\n                  minutes = floor(time / 6e4) % 60;\n                  seconds = floor(time / 1e3) % 60;\n                  milliseconds = time % 1e3;\n                } else {\n                  year = value.getUTCFullYear();\n                  month = value.getUTCMonth();\n                  date = value.getUTCDate();\n                  hours = value.getUTCHours();\n                  minutes = value.getUTCMinutes();\n                  seconds = value.getUTCSeconds();\n                  milliseconds = value.getUTCMilliseconds();\n                }\n                // Serialize extended years correctly.\n                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n                  \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                  // Months, dates, hours, minutes, and seconds should have two\n                  // digits; milliseconds should have three.\n                  \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                  // Milliseconds are optional in ES 5.0, but required in 5.1.\n                  \".\" + toPaddedString(3, milliseconds) + \"Z\";\n              } else {\n                value = null;\n              }\n            } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n              // ignores all `toJSON` methods on these objects unless they are\n              // defined directly on an instance.\n              value = value.toJSON(property);\n            }\n          }\n          if (callback) {\n            // If a replacement function was provided, call it to obtain the value\n            // for serialization.\n            value = callback.call(object, property, value);\n          }\n          if (value === null) {\n            return \"null\";\n          }\n          className = getClass.call(value);\n          if (className == booleanClass) {\n            // Booleans are represented literally.\n            return \"\" + value;\n          } else if (className == numberClass) {\n            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n            // `\"null\"`.\n            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n          } else if (className == stringClass) {\n            // Strings are double-quoted and escaped.\n            return quote(\"\" + value);\n          }\n          // Recursively serialize objects and arrays.\n          if (typeof value == \"object\") {\n            // Check for cyclic structures. This is a linear search; performance\n            // is inversely proportional to the number of unique nested objects.\n            for (length = stack.length; length--;) {\n              if (stack[length] === value) {\n                // Cyclic structures cannot be serialized by `JSON.stringify`.\n                throw TypeError();\n              }\n            }\n            // Add the object to the stack of traversed objects.\n            stack.push(value);\n            results = [];\n            // Save the current indentation level and indent one additional level.\n            prefix = indentation;\n            indentation += whitespace;\n            if (className == arrayClass) {\n              // Recursively serialize array elements.\n              for (index = 0, length = value.length; index < length; index++) {\n                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                results.push(element === undef ? \"null\" : element);\n              }\n              result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n            } else {\n              // Recursively serialize object members. Members are selected from\n              // either a user-specified list of property names, or the object\n              // itself.\n              forEach(properties || value, function (property) {\n                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n                if (element !== undef) {\n                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                  // is not the empty string, let `member` {quote(property) + \":\"}\n                  // be the concatenation of `member` and the `space` character.\"\n                  // The \"`space` character\" refers to the literal space\n                  // character, not the `space` {width} argument provided to\n                  // `JSON.stringify`.\n                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n                }\n              });\n              result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n            }\n            // Remove the object from the traversed object stack.\n            stack.pop();\n            return result;\n          }\n        };\n\n        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n        exports.stringify = function (source, filter, width) {\n          var whitespace, callback, properties, className;\n          if (objectTypes[typeof filter] && filter) {\n            if ((className = getClass.call(filter)) == functionClass) {\n              callback = filter;\n            } else if (className == arrayClass) {\n              // Convert the property names array into a makeshift set.\n              properties = {};\n              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n            }\n          }\n          if (width) {\n            if ((className = getClass.call(width)) == numberClass) {\n              // Convert the `width` to an integer and create a string containing\n              // `width` number of space characters.\n              if ((width -= width % 1) > 0) {\n                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n              }\n            } else if (className == stringClass) {\n              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n            }\n          }\n          // Opera <= 7.54u2 discards the values associated with empty string keys\n          // (`\"\"`) only if they are used directly within an object member list\n          // (e.g., `!(\"\" in { \"\": 1})`).\n          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n        };\n      }\n\n      // Public: Parses a JSON source string.\n      if (!has(\"json-parse\")) {\n        var fromCharCode = String.fromCharCode;\n\n        // Internal: A map of escaped control characters and their unescaped\n        // equivalents.\n        var Unescapes = {\n          92: \"\\\\\",\n          34: '\"',\n          47: \"/\",\n          98: \"\\b\",\n          116: \"\\t\",\n          110: \"\\n\",\n          102: \"\\f\",\n          114: \"\\r\"\n        };\n\n        // Internal: Stores the parser state.\n        var Index, Source;\n\n        // Internal: Resets the parser state and throws a `SyntaxError`.\n        var abort = function () {\n          Index = Source = null;\n          throw SyntaxError();\n        };\n\n        // Internal: Returns the next token, or `\"$\"` if the parser has reached\n        // the end of the source string. A token may be a string, number, `null`\n        // literal, or Boolean literal.\n        var lex = function () {\n          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n          while (Index < length) {\n            charCode = source.charCodeAt(Index);\n            switch (charCode) {\n              case 9: case 10: case 13: case 32:\n                // Skip whitespace tokens, including tabs, carriage returns, line\n                // feeds, and space characters.\n                Index++;\n                break;\n              case 123: case 125: case 91: case 93: case 58: case 44:\n                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                // the current position.\n                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                Index++;\n                return value;\n              case 34:\n                // `\"` delimits a JSON string; advance to the next character and\n                // begin parsing the string. String tokens are prefixed with the\n                // sentinel `@` character to distinguish them from punctuators and\n                // end-of-string tokens.\n                for (value = \"@\", Index++; Index < length;) {\n                  charCode = source.charCodeAt(Index);\n                  if (charCode < 32) {\n                    // Unescaped ASCII control characters (those with a code unit\n                    // less than the space character) are not permitted.\n                    abort();\n                  } else if (charCode == 92) {\n                    // A reverse solidus (`\\`) marks the beginning of an escaped\n                    // control character (including `\"`, `\\`, and `/`) or Unicode\n                    // escape sequence.\n                    charCode = source.charCodeAt(++Index);\n                    switch (charCode) {\n                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n                        // Revive escaped control characters.\n                        value += Unescapes[charCode];\n                        Index++;\n                        break;\n                      case 117:\n                        // `\\u` marks the beginning of a Unicode escape sequence.\n                        // Advance to the first character and validate the\n                        // four-digit code point.\n                        begin = ++Index;\n                        for (position = Index + 4; Index < position; Index++) {\n                          charCode = source.charCodeAt(Index);\n                          // A valid sequence comprises four hexdigits (case-\n                          // insensitive) that form a single hexadecimal value.\n                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                            // Invalid Unicode escape sequence.\n                            abort();\n                          }\n                        }\n                        // Revive the escaped character.\n                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                        break;\n                      default:\n                        // Invalid escape sequence.\n                        abort();\n                    }\n                  } else {\n                    if (charCode == 34) {\n                      // An unescaped double-quote character marks the end of the\n                      // string.\n                      break;\n                    }\n                    charCode = source.charCodeAt(Index);\n                    begin = Index;\n                    // Optimize for the common case where a string is valid.\n                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                      charCode = source.charCodeAt(++Index);\n                    }\n                    // Append the string as-is.\n                    value += source.slice(begin, Index);\n                  }\n                }\n                if (source.charCodeAt(Index) == 34) {\n                  // Advance to the next character and return the revived string.\n                  Index++;\n                  return value;\n                }\n                // Unterminated string.\n                abort();\n              default:\n                // Parse numbers and literals.\n                begin = Index;\n                // Advance past the negative sign, if one is specified.\n                if (charCode == 45) {\n                  isSigned = true;\n                  charCode = source.charCodeAt(++Index);\n                }\n                // Parse an integer or floating-point value.\n                if (charCode >= 48 && charCode <= 57) {\n                  // Leading zeroes are interpreted as octal literals.\n                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n                    // Illegal octal literal.\n                    abort();\n                  }\n                  isSigned = false;\n                  // Parse the integer component.\n                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n                  // Floats cannot contain a leading decimal point; however, this\n                  // case is already accounted for by the parser.\n                  if (source.charCodeAt(Index) == 46) {\n                    position = ++Index;\n                    // Parse the decimal component.\n                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal trailing decimal.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Parse exponents. The `e` denoting the exponent is\n                  // case-insensitive.\n                  charCode = source.charCodeAt(Index);\n                  if (charCode == 101 || charCode == 69) {\n                    charCode = source.charCodeAt(++Index);\n                    // Skip past the sign following the exponent, if one is\n                    // specified.\n                    if (charCode == 43 || charCode == 45) {\n                      Index++;\n                    }\n                    // Parse the exponential component.\n                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal empty exponent.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Coerce the parsed value to a JavaScript number.\n                  return +source.slice(begin, Index);\n                }\n                // A negative sign may only precede numbers.\n                if (isSigned) {\n                  abort();\n                }\n                // `true`, `false`, and `null` literals.\n                if (source.slice(Index, Index + 4) == \"true\") {\n                  Index += 4;\n                  return true;\n                } else if (source.slice(Index, Index + 5) == \"false\") {\n                  Index += 5;\n                  return false;\n                } else if (source.slice(Index, Index + 4) == \"null\") {\n                  Index += 4;\n                  return null;\n                }\n                // Unrecognized token.\n                abort();\n            }\n          }\n          // Return the sentinel `$` character if the parser has reached the end\n          // of the source string.\n          return \"$\";\n        };\n\n        // Internal: Parses a JSON `value` token.\n        var get = function (value) {\n          var results, hasMembers;\n          if (value == \"$\") {\n            // Unexpected end of input.\n            abort();\n          }\n          if (typeof value == \"string\") {\n            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n              // Remove the sentinel `@` character.\n              return value.slice(1);\n            }\n            // Parse object and array literals.\n            if (value == \"[\") {\n              // Parses a JSON array, returning a new JavaScript array.\n              results = [];\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing square bracket marks the end of the array literal.\n                if (value == \"]\") {\n                  break;\n                }\n                // If the array literal contains elements, the current token\n                // should be a comma separating the previous element from the\n                // next.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"]\") {\n                      // Unexpected trailing `,` in array literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each array element.\n                    abort();\n                  }\n                }\n                // Elisions and leading commas are not permitted.\n                if (value == \",\") {\n                  abort();\n                }\n                results.push(get(value));\n              }\n              return results;\n            } else if (value == \"{\") {\n              // Parses a JSON object, returning a new JavaScript object.\n              results = {};\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing curly brace marks the end of the object literal.\n                if (value == \"}\") {\n                  break;\n                }\n                // If the object literal contains members, the current token\n                // should be a comma separator.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"}\") {\n                      // Unexpected trailing `,` in object literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each object member.\n                    abort();\n                  }\n                }\n                // Leading commas are not permitted, object property names must be\n                // double-quoted strings, and a `:` must separate each property\n                // name and value.\n                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                  abort();\n                }\n                results[value.slice(1)] = get(lex());\n              }\n              return results;\n            }\n            // Unexpected token encountered.\n            abort();\n          }\n          return value;\n        };\n\n        // Internal: Updates a traversed object member.\n        var update = function (source, property, callback) {\n          var element = walk(source, property, callback);\n          if (element === undef) {\n            delete source[property];\n          } else {\n            source[property] = element;\n          }\n        };\n\n        // Internal: Recursively traverses a parsed JSON object, invoking the\n        // `callback` function for each value. This is an implementation of the\n        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n        var walk = function (source, property, callback) {\n          var value = source[property], length;\n          if (typeof value == \"object\" && value) {\n            // `forEach` can't be used to traverse an array in Opera <= 8.54\n            // because its `Object#hasOwnProperty` implementation returns `false`\n            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n            if (getClass.call(value) == arrayClass) {\n              for (length = value.length; length--;) {\n                update(value, length, callback);\n              }\n            } else {\n              forEach(value, function (property) {\n                update(value, property, callback);\n              });\n            }\n          }\n          return callback.call(source, property, value);\n        };\n\n        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n        exports.parse = function (source, callback) {\n          var result, value;\n          Index = 0;\n          Source = \"\" + source;\n          result = get(lex());\n          // If a JSON string contains multiple tokens, it is invalid.\n          if (lex() != \"$\") {\n            abort();\n          }\n          // Reset the parser state.\n          Index = Source = null;\n          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n        };\n      }\n    }\n\n    exports[\"runInContext\"] = runInContext;\n    return exports;\n  }\n\n  if (freeExports && !isLoader) {\n    // Export for CommonJS environments.\n    runInContext(root, freeExports);\n  } else {\n    // Export for web browsers and JavaScript engines.\n    var nativeJSON = root.JSON,\n        previousJSON = root[\"JSON3\"],\n        isRestored = false;\n\n    var JSON3 = runInContext(root, (root[\"JSON3\"] = {\n      // Public: Restores the original value of the global `JSON` object and\n      // returns a reference to the `JSON3` object.\n      \"noConflict\": function () {\n        if (!isRestored) {\n          isRestored = true;\n          root.JSON = nativeJSON;\n          root[\"JSON3\"] = previousJSON;\n          nativeJSON = previousJSON = null;\n        }\n        return JSON3;\n      }\n    }));\n\n    root.JSON = {\n      \"parse\": JSON3.parse,\n      \"stringify\": JSON3.stringify\n    };\n  }\n\n  // Export for asynchronous module loaders.\n  if (isLoader) {\n    define(function () {\n      return JSON3;\n    });\n  }\n}).call(this);\n"]}