{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;AAMA;;AAEA;;;;;AAKA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,eAAe,QAAQ,QAAR,EAAkB,YAArC;;AAEA;;;;;AAKA,aAAa,OAAO,OAApB,EAA6B,cAA7B,EAA6C,SAAS,YAAT,GAAwB;AACnE,SAAO,OAAO,MAAP,IAAiB,QAAQ,iBAAR,CAAxB;AACD,CAFD;;AAIA,aAAa,OAAO,OAApB,EAA6B,kBAA7B,EAAiD,SAAS,gBAAT,GAA4B;AAC3E,MAAI,QAAQ,MAAM,eAAlB;AACA,MAAI,MAAM,EAAV;AACA,MAAI,OAAO,MAAM,iBAAjB;;AAEA,WAAS,uBAAT,CAAiC,GAAjC,EAAsC,KAAtC,EAA6C;AAC3C,WAAO,KAAP;AACD;;AAED,QAAM,iBAAN,GAA0B,uBAA1B;AACA,QAAM,eAAN,GAAwB,CAAxB;;AAEA;AACA,QAAM,iBAAN,CAAwB,GAAxB;;AAEA;AACA,MAAI,QAAQ,IAAI,KAAJ,CAAU,KAAV,EAAZ;;AAEA,QAAM,iBAAN,GAA0B,IAA1B;AACA,QAAM,eAAN,GAAwB,KAAxB;;AAEA,SAAO,MAAM,CAAN,EAAS,QAAT,GAAoB,QAApB,GAA+B,QAAQ,qBAAR,CAAtC;AACD,CAtBD;;AAwBA,aAAa,OAAO,OAApB,EAA6B,oBAA7B,EAAmD,SAAS,kBAAT,GAA8B;AAC/E,SAAO,aAAa,aAAb,IAA8B,QAAQ,wBAAR,CAArC;AACD,CAFD;;AAIA;;;;AAIA,SAAS,YAAT,CAAsB,GAAtB,EAA2B,IAA3B,EAAiC,MAAjC,EAAyC;AACvC,WAAS,GAAT,GAAe;AACb,QAAI,MAAM,QAAV;;AAEA,WAAO,cAAP,CAAsB,GAAtB,EAA2B,IAA3B,EAAiC;AAC/B,oBAAc,IADiB;AAE/B,kBAAY,IAFmB;AAG/B,aAAO;AAHwB,KAAjC;;AAMA,WAAO,GAAP;AACD;;AAED,SAAO,cAAP,CAAsB,GAAtB,EAA2B,IAA3B,EAAiC;AAC/B,kBAAc,IADiB;AAE/B,gBAAY,IAFmB;AAG/B,SAAK;AAH0B,GAAjC;AAKD;;AAED;;;;AAIA,SAAS,QAAT,CAAkB,GAAlB,EAAuB;AACrB,SAAO,IAAI,QAAJ,EAAP;AACD","file":"index-compiled.js","sourcesContent":["/*!\n * depd\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Buffer = require('buffer')\nvar EventEmitter = require('events').EventEmitter\n\n/**\n * Module exports.\n * @public\n */\n\nlazyProperty(module.exports, 'bufferConcat', function bufferConcat() {\n  return Buffer.concat || require('./buffer-concat')\n})\n\nlazyProperty(module.exports, 'callSiteToString', function callSiteToString() {\n  var limit = Error.stackTraceLimit\n  var obj = {}\n  var prep = Error.prepareStackTrace\n\n  function prepareObjectStackTrace(obj, stack) {\n    return stack\n  }\n\n  Error.prepareStackTrace = prepareObjectStackTrace\n  Error.stackTraceLimit = 2\n\n  // capture the stack\n  Error.captureStackTrace(obj)\n\n  // slice the stack\n  var stack = obj.stack.slice()\n\n  Error.prepareStackTrace = prep\n  Error.stackTraceLimit = limit\n\n  return stack[0].toString ? toString : require('./callsite-tostring')\n})\n\nlazyProperty(module.exports, 'eventListenerCount', function eventListenerCount() {\n  return EventEmitter.listenerCount || require('./event-listener-count')\n})\n\n/**\n * Define a lazy property.\n */\n\nfunction lazyProperty(obj, prop, getter) {\n  function get() {\n    var val = getter()\n\n    Object.defineProperty(obj, prop, {\n      configurable: true,\n      enumerable: true,\n      value: val\n    })\n\n    return val\n  }\n\n  Object.defineProperty(obj, prop, {\n    configurable: true,\n    enumerable: true,\n    get: get\n  })\n}\n\n/**\n * Call toString() on the obj\n */\n\nfunction toString(obj) {\n  return obj.toString()\n}\n"]}