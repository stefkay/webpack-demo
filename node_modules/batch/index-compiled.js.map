{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\n\ntry {\n  var EventEmitter = require('events').EventEmitter;\n} catch (err) {\n  var Emitter = require('emitter');\n}\n\n/**\n * Noop.\n */\n\nfunction noop(){}\n\n/**\n * Expose `Batch`.\n */\n\nmodule.exports = Batch;\n\n/**\n * Create a new Batch.\n */\n\nfunction Batch() {\n  if (!(this instanceof Batch)) return new Batch;\n  this.fns = [];\n  this.concurrency(Infinity);\n  this.throws(true);\n  for (var i = 0, len = arguments.length; i < len; ++i) {\n    this.push(arguments[i]);\n  }\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\n\nif (EventEmitter) {\n  Batch.prototype.__proto__ = EventEmitter.prototype;\n} else {\n  Emitter(Batch.prototype);\n}\n\n/**\n * Set concurrency to `n`.\n *\n * @param {Number} n\n * @return {Batch}\n * @api public\n */\n\nBatch.prototype.concurrency = function(n){\n  this.n = n;\n  return this;\n};\n\n/**\n * Queue a function.\n *\n * @param {Function} fn\n * @return {Batch}\n * @api public\n */\n\nBatch.prototype.push = function(fn){\n  this.fns.push(fn);\n  return this;\n};\n\n/**\n * Set wether Batch will or will not throw up.\n *\n * @param  {Boolean} throws\n * @return {Batch}\n * @api public\n */\nBatch.prototype.throws = function(throws) {\n  this.e = !!throws;\n  return this;\n};\n\n/**\n * Execute all queued functions in parallel,\n * executing `cb(err, results)`.\n *\n * @param {Function} cb\n * @return {Batch}\n * @api public\n */\n\nBatch.prototype.end = function(cb){\n  var self = this\n    , total = this.fns.length\n    , pending = total\n    , results = []\n    , errors = []\n    , cb = cb || noop\n    , fns = this.fns\n    , max = this.n\n    , throws = this.e\n    , index = 0\n    , done;\n\n  // empty\n  if (!fns.length) return cb(null, results);\n\n  // process\n  function next() {\n    var i = index++;\n    var fn = fns[i];\n    if (!fn) return;\n    var start = new Date;\n\n    try {\n      fn(callback);\n    } catch (err) {\n      callback(err);\n    }\n\n    function callback(err, res){\n      if (done) return;\n      if (err && throws) return done = true, cb(err);\n      var complete = total - pending + 1;\n      var end = new Date;\n\n      results[i] = res;\n      errors[i] = err;\n\n      self.emit('progress', {\n        index: i,\n        value: res,\n        error: err,\n        pending: pending,\n        total: total,\n        complete: complete,\n        percent: complete / total * 100 | 0,\n        start: start,\n        end: end,\n        duration: end - start\n      });\n\n      if (--pending) next();\n      else if(!throws) cb(errors, results);\n      else cb(null, results);\n    }\n  }\n\n  // concurrency\n  for (var i = 0; i < fns.length; i++) {\n    if (i == max) break;\n    next();\n  }\n\n  return this;\n};\n"]}