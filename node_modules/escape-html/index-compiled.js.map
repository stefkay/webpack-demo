{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;;;AAQA;;AAEA;;;;;AAKA,IAAI,kBAAkB,SAAtB;;AAEA;;;;;AAKA,OAAO,OAAP,GAAiB,UAAjB;;AAEA;;;;;;;;AAQA,SAAS,UAAT,CAAoB,MAApB,EAA4B;AAC1B,MAAI,MAAM,KAAK,MAAf;AACA,MAAI,QAAQ,gBAAgB,IAAhB,CAAqB,GAArB,CAAZ;;AAEA,MAAI,CAAC,KAAL,EAAY;AACV,WAAO,GAAP;AACD;;AAED,MAAI,MAAJ;AACA,MAAI,OAAO,EAAX;AACA,MAAI,QAAQ,CAAZ;AACA,MAAI,YAAY,CAAhB;;AAEA,OAAK,QAAQ,MAAM,KAAnB,EAA0B,QAAQ,IAAI,MAAtC,EAA8C,OAA9C,EAAuD;AACrD,YAAQ,IAAI,UAAJ,CAAe,KAAf,CAAR;AACE,WAAK,EAAL;AAAS;AACP,iBAAS,QAAT;AACA;AACF,WAAK,EAAL;AAAS;AACP,iBAAS,OAAT;AACA;AACF,WAAK,EAAL;AAAS;AACP,iBAAS,OAAT;AACA;AACF,WAAK,EAAL;AAAS;AACP,iBAAS,MAAT;AACA;AACF,WAAK,EAAL;AAAS;AACP,iBAAS,MAAT;AACA;AACF;AACE;AAjBJ;;AAoBA,QAAI,cAAc,KAAlB,EAAyB;AACvB,cAAQ,IAAI,SAAJ,CAAc,SAAd,EAAyB,KAAzB,CAAR;AACD;;AAED,gBAAY,QAAQ,CAApB;AACA,YAAQ,MAAR;AACD;;AAED,SAAO,cAAc,KAAd,GACH,OAAO,IAAI,SAAJ,CAAc,SAAd,EAAyB,KAAzB,CADJ,GAEH,IAFJ;AAGD","file":"index-compiled.js","sourcesContent":["/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n"]}