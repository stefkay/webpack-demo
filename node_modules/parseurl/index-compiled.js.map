{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AAEA;;;;AAIA,IAAI,MAAM,QAAQ,KAAR,CAAV;AACA,IAAI,QAAQ,IAAI,KAAhB;AACA,IAAI,MAAM,IAAI,GAAd;;AAEA;;;;;AAKA,IAAI,mBAAmB,sCAAvB;;AAEA;;;;AAIA,OAAO,OAAP,GAAiB,QAAjB;AACA,OAAO,OAAP,CAAe,QAAf,GAA0B,WAA1B;;AAEA;;;;;;;;AAQA,SAAS,QAAT,CAAkB,GAAlB,EAAuB;AACrB,MAAI,MAAM,IAAI,GAAd;;AAEA,MAAI,QAAQ,SAAZ,EAAuB;AACrB;AACA,WAAO,SAAP;AACD;;AAED,MAAI,SAAS,IAAI,UAAjB;;AAEA,MAAI,MAAM,GAAN,EAAW,MAAX,CAAJ,EAAwB;AACtB;AACA,WAAO,MAAP;AACD;;AAED;AACA,WAAS,UAAU,GAAV,CAAT;AACA,SAAO,IAAP,GAAc,GAAd;;AAEA,SAAO,IAAI,UAAJ,GAAiB,MAAxB;AACD;;AAED;;;;;;;;AAQA,SAAS,WAAT,CAAqB,GAArB,EAA0B;AACxB,MAAI,MAAM,IAAI,WAAd;;AAEA,MAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;AAC3B;AACA,WAAO,SAAS,GAAT,CAAP;AACD;;AAED,MAAI,SAAS,IAAI,kBAAjB;;AAEA,MAAI,MAAM,GAAN,EAAW,MAAX,CAAJ,EAAwB;AACtB;AACA,WAAO,MAAP;AACD;;AAED;AACA,WAAS,UAAU,GAAV,CAAT;AACA,SAAO,IAAP,GAAc,GAAd;;AAEA,SAAO,IAAI,kBAAJ,GAAyB,MAAhC;AACD;;AAED;;;;;;;;AAQA,SAAS,SAAT,CAAmB,GAAnB,EAAwB;AACtB;AACA;AACA,MAAI,aAAa,OAAO,GAAP,KAAe,QAAf,IAA2B,iBAAiB,IAAjB,CAAsB,GAAtB,CAA5C;;AAEA;AACA,MAAI,UAAJ,EAAgB;AACd,QAAI,WAAW,WAAW,CAAX,CAAf;AACA,QAAI,SAAS,WAAW,CAAX,KAAiB,IAA9B;AACA,QAAI,MAAM,QAAQ,SAAR,GACN,IAAI,GAAJ,EADM,GAEN,EAFJ;AAGA,QAAI,IAAJ,GAAW,GAAX;AACA,QAAI,IAAJ,GAAW,GAAX;AACA,QAAI,QAAJ,GAAe,QAAf;AACA,QAAI,MAAJ,GAAa,MAAb;AACA,QAAI,KAAJ,GAAY,UAAU,OAAO,MAAP,CAAc,CAAd,CAAtB;;AAEA,WAAO,GAAP;AACD;;AAED,SAAO,MAAM,GAAN,CAAP;AACD;;AAED;;;;;;;;;AASA,SAAS,KAAT,CAAe,GAAf,EAAoB,SAApB,EAA+B;AAC7B,SAAO,OAAO,SAAP,KAAqB,QAArB,IACF,cAAc,IADZ,KAED,QAAQ,SAAR,IAAqB,qBAAqB,GAFzC,KAGF,UAAU,IAAV,KAAmB,GAHxB;AAID","file":"index-compiled.js","sourcesContent":["/*!\n * parseurl\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar url = require('url')\nvar parse = url.parse\nvar Url = url.Url\n\n/**\n * Pattern for a simple path case.\n * See: https://github.com/joyent/node/pull/7878\n */\n\nvar simplePathRegExp = /^(\\/\\/?(?!\\/)[^\\?#\\s]*)(\\?[^#\\s]*)?$/\n\n/**\n * Exports.\n */\n\nmodule.exports = parseurl\nmodule.exports.original = originalurl\n\n/**\n * Parse the `req` url with memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @api public\n */\n\nfunction parseurl(req) {\n  var url = req.url\n\n  if (url === undefined) {\n    // URL is undefined\n    return undefined\n  }\n\n  var parsed = req._parsedUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return req._parsedUrl = parsed\n};\n\n/**\n * Parse the `req` original url with fallback and memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @api public\n */\n\nfunction originalurl(req) {\n  var url = req.originalUrl\n\n  if (typeof url !== 'string') {\n    // Fallback\n    return parseurl(req)\n  }\n\n  var parsed = req._parsedOriginalUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return req._parsedOriginalUrl = parsed\n};\n\n/**\n * Parse the `str` url with fast-path short-cut.\n *\n * @param {string} str\n * @return {Object}\n * @api private\n */\n\nfunction fastparse(str) {\n  // Try fast path regexp\n  // See: https://github.com/joyent/node/pull/7878\n  var simplePath = typeof str === 'string' && simplePathRegExp.exec(str)\n\n  // Construct simple URL\n  if (simplePath) {\n    var pathname = simplePath[1]\n    var search = simplePath[2] || null\n    var url = Url !== undefined\n      ? new Url()\n      : {}\n    url.path = str\n    url.href = str\n    url.pathname = pathname\n    url.search = search\n    url.query = search && search.substr(1)\n\n    return url\n  }\n\n  return parse(str)\n}\n\n/**\n * Determine if parsed is still fresh for url.\n *\n * @param {string} url\n * @param {object} parsedUrl\n * @return {boolean}\n * @api private\n */\n\nfunction fresh(url, parsedUrl) {\n  return typeof parsedUrl === 'object'\n    && parsedUrl !== null\n    && (Url === undefined || parsedUrl instanceof Url)\n    && parsedUrl._raw === url\n}\n"]}