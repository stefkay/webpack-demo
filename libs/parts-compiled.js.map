{"version":3,"sources":["parts.js"],"names":[],"mappings":"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","file":"parts-compiled.js","sourcesContent":["const webpack = require('webpack');\r\nconst CleanWebpackPlugin = require('clean-webpack-plugin');\r\nconst ExtractTextPlugin = require('extract-text-webpack-plugin');\r\nconst PurifyCSSPlugin = require('purifycss-webpack-plugin');\r\n\r\nexports.devServer = function(options){\r\n    \"use strict\";\r\n    return {\r\n        watchOptions: {\r\n            // Delay the rebuild after the first change\r\n            aggregateTimeout: 300,\r\n            // Poll using interval (in ms, accepts boolean too)\r\n            poll: 100\r\n        },\r\n        devServer: {\r\n            // Enable history API fallback so HTML5 History API based\r\n            // routing works. This is a good default that will come\r\n            // in handy in more complicated setups.\r\n            historyApiFallback: true,\r\n            // Unlike the cli flag, this doesn't set\r\n            // HotModuleReplacementPlugin!\r\n            hot: true,\r\n            inline: true,\r\n            // Display only errors to reduce the amount of output.\r\n            stats: 'errors-only',\r\n            // Parse host and port from env to allow customization\r\n            // If you use Vagrant or Cloud9, set\r\n            // host: options.host || '0.0.0.0';\r\n            //\r\n            // 0.0.0.0 is available to all network devices\r\n            // unlike default `localhost`.\r\n            host: options.host, // Defaults to `localhost`\r\n            port: options.port // Defaults to 8080\r\n        },\r\n        plugins: [\r\n            // Enable multi-pass compilation for enhanced performance\r\n            // in larger projects. Good default.\r\n            new webpack.HotModuleReplacementPlugin({\r\n                multiStep: true\r\n            })\r\n        ]\r\n    };\r\n};\r\n\r\nexports.setupCSS = function(paths){\r\n    \"use strict\";\r\n    return {\r\n        module:{\r\n            loaders:[\r\n                {\r\n                    test: /\\.css$/,\r\n                    loaders: ['style', 'css'],\r\n                    include: paths\r\n                }\r\n            ]\r\n        }\r\n    };\r\n};\r\n\r\nexports.minify = function(){\r\n    \"use strict\";\r\n    return {\r\n        plugins: [\r\n            new webpack.optimize.UglifyJsPlugin({\r\n                // Don't beautify output (enable for neater output)\r\n                beautify: false,\r\n\r\n                // Eliminate comments\r\n                comments: false,\r\n\r\n                // Compression specific options\r\n                compress: {\r\n                    warnings: false,\r\n\r\n                    // Drop `console` statements\r\n                    drop_console: true\r\n                },\r\n                // Mangling specific options\r\n                mangle: {\r\n                    // Don't mangle $\r\n                    except: ['$', 'webpackJsonp'],\r\n\r\n                    // Don't care about IE8\r\n                    screw_ie8 : true,\r\n\r\n                    // Don't mangle function names\r\n                    keep_fnames: true\r\n                }\r\n            })\r\n        ]\r\n    };\r\n};\r\n\r\nexports.setFreeVariable = function(key, value){\r\n    \"use strict\";\r\n    const env = {};\r\n    env[key] = JSON.stringify(value);\r\n\r\n    return {\r\n        plugins: [\r\n            new webpack.DefinePlugin(env)\r\n        ]\r\n    }\r\n};\r\n\r\nexports.extractBundle = function(options){\r\n    \"use strict\";\r\n    const entry = {};\r\n    entry[options.name] = options.entries;\r\n\r\n    return {\r\n        // Define an entry point needed for splitting.\r\n        entry: entry,\r\n        plugins: [\r\n            // Extract bundle and manifest files. Manifest is\r\n            // needed for reliable caching.\r\n            new webpack.optimize.CommonsChunkPlugin({\r\n                names: [options.name, 'manifest']\r\n            })\r\n        ]\r\n    };\r\n};\r\n\r\nexports.clean = function(path){\r\n    \"use strict\";\r\n    return {\r\n        plugins: [\r\n            new CleanWebpackPlugin(\r\n                [path],\r\n                {\r\n                    // Without `root` CleanWebpackPlugin won't point to our\r\n                    // project and will fail to work.\r\n                    root: process.cwd()\r\n                }\r\n            )\r\n        ]\r\n    }\r\n};\r\n\r\nexports.extractCSS = function(paths){\r\n    \"use strict\";\r\n    return {\r\n        module: {\r\n            loaders: [\r\n                // Extract CSS during build\r\n                {\r\n                    test: /\\.css$/,\r\n                    loader: ExtractTextPlugin.extract('style', 'css'),\r\n                    include: paths\r\n                }\r\n            ]\r\n        },\r\n        plugins: [\r\n            //Output extracted CSS to a file\r\n            new ExtractTextPlugin('[name].[chunkhash].css')\r\n        ]\r\n    };\r\n};\r\n\r\n\r\nexports.purifyCSS = function(paths){\r\n    \"use strict\";\r\n    return {\r\n        plugins: [\r\n            new PurifyCSSPlugin({\r\n                basePath: process.cwd(),\r\n                // `paths` is used to point PurifyCSS to files not\r\n                // visible to Webpack. You can pass glob patterns\r\n                // to it.\r\n                paths: paths\r\n            })\r\n        ]\r\n    };\r\n};\r\n"]}